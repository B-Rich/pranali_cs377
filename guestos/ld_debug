syscall 'newuname' (code 122, inst 339, pid 1000)
  putsname=0xfffdfda6
  sysname='Linux', nodename='multi2sim'
  relaese='2.6.18-6-686', version='#1 Mon Jul 17 09:21:59 UTC 2006'
  machine='i686', domainname=''
syscall 'brk' (code 45, inst 507, pid 1000)
  newbrk=0x0 (previous brk was 0x80d6000)
syscall 'brk' (code 45, inst 537, pid 1000)
  newbrk=0x80d6cd0 (previous brk was 0x80d6000)
  heap grows 0xcd0 bytes
syscall 'set_thread_area' (code 243, inst 616, pid 1000)
  puinfo=0xfffdff50
  entry_number=0xffffffff, base_addr=0x80d6830, limit=0xfffff
  seg_32bit=0x1, contents=0x0, read_exec_only=0x0
  limit_in_pages=0x1, seg_not_present=0x0, useable=0x1
syscall 'brk' (code 45, inst 2396, pid 1000)
  newbrk=0x80f7cd0 (previous brk was 0x80d6cd0)
  heap grows 0x21000 bytes
syscall 'brk' (code 45, inst 2503, pid 1000)
  newbrk=0x80f8000 (previous brk was 0x80f7cd0)
  heap grows 0x330 bytes
syscall 'fstat64' (code 197, inst 7947, pid 1000)
  fd=1, pstatbuf=0xfffdf100
  host_fd=1
  stat64 structure:
    dev=11, ino=5, mode=8592, nlink=1
    uid=3933552, gid=5, rdev=34818
    size=0, blksize=1024, blocks=0
syscall 'mmap' (code 90, inst 7996, pid 1000)
  pargs=0xfffdf0e8
  addr=0x0, len=4096, prot=0x3, flags=0x22, guest_fd=-1, offset=0x0
  prot={PROT_READ|PROT_WRITE}, flags={MAP_PRIVATE|MAP_ANONYMOUS}

| __libc_start_main - call to __libc_init_first
| | __libc_init_first - call to __setfpucw
| | | __setfpucw - ret to __libc_init_first
| | __libc_init_first - call to __libc_init_secure
| | | __libc_init_secure - ret to __libc_init_first
| | __libc_init_first - call to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to _dl_init_paths
| | | | _dl_init_paths - call to _dl_important_hwcaps
| | | | | _dl_important_hwcaps - ret to _dl_init_paths
| | | | _dl_init_paths - call to malloc
| | | | | malloc - call to malloc_hook_ini
| | | | | | malloc_hook_ini - call to ptmalloc_init
| | | | | | | ptmalloc_init - call to getpagesize
| | | | | | | | getpagesize - ret to ptmalloc_init
| | | | | | | ptmalloc_init - call to __linkin_atfork
| | | | | | | | __linkin_atfork - ret to ptmalloc_init
| | | | | | | ptmalloc_init - ret to malloc_hook_ini
| | | | | | malloc - call to _int_malloc
| | | | | | | _int_malloc - call to malloc_consolidate
| | | | | | | | malloc_consolidate - ret to _int_malloc
| | | | | | | _int_malloc - call to __default_morecore
| | | | | | | | __default_morecore - call to sbrk
| | | | | | | | | sbrk - call to __brk
| | | | | | | | | | __brk - call to _dl_sysinfo_int80
| | | | | | | | | | | syscall 'brk' (code 45, inst 2396, pid 1000)
| | | | | | | | | | | _dl_sysinfo_int80 - ret to __brk
| | | | | | | | | | __brk - ret to sbrk
| | | | | | | | | sbrk - ret to __default_morecore
| | | | | | | | __default_morecore - ret to _int_malloc
| | | | | | | _int_malloc - call to __default_morecore
| | | | | | | | __default_morecore - call to sbrk
| | | | | | | | | sbrk - call to __brk
| | | | | | | | | | __brk - call to _dl_sysinfo_int80
| | | | | | | | | | | syscall 'brk' (code 45, inst 2503, pid 1000)
| | | | | | | | | | | _dl_sysinfo_int80 - ret to __brk
| | | | | | | | | | __brk - ret to sbrk
| | | | | | | | | sbrk - ret to __default_morecore
| | | | | | | | __default_morecore - ret to _int_malloc
| | | | | | | _int_malloc - ret to malloc
| | | | | | malloc - ret to malloc
| | | | | malloc - ret to _dl_init_paths
| | | | _dl_init_paths - call to malloc
| | | | | malloc - call to _int_malloc
| | | | | | _int_malloc - ret to malloc
| | | | | malloc - ret to _dl_init_paths
| | | | _dl_init_paths - call to strlen
| | | | | strlen - ret to _dl_init_paths
| | | | _dl_init_paths - call to memcpy
| | | | | memcpy - ret to _dl_init_paths
| | | | _dl_init_paths - call to malloc
| | | | | malloc - call to _int_malloc
| | | | | | _int_malloc - ret to malloc
| | | | | malloc - ret to _dl_init_paths
| | | | _dl_init_paths - call to fillin_rpath
| | | | | fillin_rpath - call to __strsep
| | | | | | __strsep - call to strpbrk
| | | | | | | strpbrk - ret to __strsep
| | | | | | __strsep - ret to fillin_rpath
| | | | | fillin_rpath - call to strlen
| | | | | | strlen - ret to fillin_rpath
| | | | | fillin_rpath - call to malloc
| | | | | | malloc - call to _int_malloc
| | | | | | | _int_malloc - ret to malloc
| | | | | | malloc - ret to fillin_rpath
| | | | | fillin_rpath - call to mempcpy
| | | | | | mempcpy - ret to fillin_rpath
| | | | | fillin_rpath - call to __strsep
| | | | | | __strsep - call to strpbrk
| | | | | | | strpbrk - ret to __strsep
| | | | | | __strsep - ret to fillin_rpath
| | | | | fillin_rpath - call to strlen
| | | | | | strlen - ret to fillin_rpath
| | | | | fillin_rpath - call to malloc
| | | | | | malloc - call to _int_malloc
| | | | | | | _int_malloc - ret to malloc
| | | | | | malloc - ret to fillin_rpath
| | | | | fillin_rpath - call to mempcpy
| | | | | | mempcpy - ret to fillin_rpath
| | | | | fillin_rpath - call to __strsep
| | | | | | __strsep - call to strpbrk
| | | | | | | strpbrk - ret to __strsep
| | | | | | __strsep - ret to fillin_rpath
| | | | | fillin_rpath - call to strlen
| | | | | | strlen - ret to fillin_rpath
| | | | | fillin_rpath - call to malloc
| | | | | | malloc - call to _int_malloc
| | | | | | | _int_malloc - ret to malloc
| | | | | | malloc - ret to fillin_rpath
| | | | | fillin_rpath - call to mempcpy
| | | | | | mempcpy - ret to fillin_rpath
| | | | | fillin_rpath - call to __strsep
| | | | | | __strsep - ret to fillin_rpath
| | | | | fillin_rpath - ret to _dl_init_paths
| | | | _dl_init_paths - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - call to getenv
| | | | getenv - call to strlen
| | | | | strlen - ret to getenv
| | | | getenv - call to strncmp
| | | | | strncmp - ret to getenv
| | | | getenv - ret to _dl_non_dynamic_init
| | | _dl_non_dynamic_init - ret to __libc_init_first
| | __init_misc - call to strrchr
| | | strrchr - ret to __init_misc
| | __init_misc - ret to __libc_start_main
| __libc_start_main - call to __cxa_atexit
| | __cxa_atexit - ret to __libc_start_main
| __libc_start_main - call to __libc_csu_init
| | __libc_csu_init - call to _init
| | | _init - call to _init
| | | | _init - call to frame_dummy
| | | | | frame_dummy - call to frame_dummy
| | | | | | frame_dummy - call to __register_frame_info_bases
| | | | | | | __register_frame_info_bases - call to __register_frame_info_bases
| | | | | | | | __register_frame_info_bases - ret to frame_dummy
| | | | | | | frame_dummy - ret to _init
| | | | | | _init - call to __do_global_ctors_aux
| | | | | | | __do_global_ctors_aux - call to init_cacheinfo
| | | | | | | | init_cacheinfo - call to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - ret to init_cacheinfo
| | | | | | | | init_cacheinfo - call to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - ret to init_cacheinfo
| | | | | | | | init_cacheinfo - call to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - call to intel_check_word
| | | | | | | | | | intel_check_word - ret to handle_intel
| | | | | | | | | handle_intel - ret to init_cacheinfo
| | | | | | | | init_cacheinfo - ret to __do_global_ctors_aux
| | | | | | | __do_global_ctors_aux - ret to _init
| | | | | | _init - ret to __libc_csu_init
| | | | | __libc_csu_init - ret to __libc_start_main
| | | | __libc_start_main - call to _setjmp
| | | | | _setjmp - ret to __libc_start_main
| | | | __libc_start_main - call to main
| | | | | main - call to __printf
| | | | | | __printf - call to _IO_vfprintf_internal
| | | | | | | _IO_vfprintf_internal - call to __strchrnul
| | | | | | | | __strchrnul - ret to _IO_vfprintf_internal
| | | | | | | _IO_vfprintf_internal - call to _IO_new_file_xsputn
| | | | | | | | _IO_new_file_xsputn - call to _IO_file_overflow
| | | | | | | | | _IO_file_overflow - call to _IO_doallocbuf
| | | | | | | | | | _IO_doallocbuf - call to _IO_file_doallocate
| | | | | | | | | | | _IO_file_doallocate - call to _IO_file_stat
| | | | | | | | | | | | _IO_file_stat - call to ___fxstat64
| | | | | | | | | | | | | ___fxstat64 - call to _dl_sysinfo_int80
| | | | | | | | | | | | | | syscall 'fstat64' (code 197, inst 7947, pid 1000)
| | | | | | | | | | | | | | _dl_sysinfo_int80 - ret to ___fxstat64
| | | | | | | | | | | | | ___fxstat64 - ret to _IO_file_stat
| | | | | | | | | | | | _IO_file_stat - ret to _IO_file_doallocate
| | | | | | | | | | | _IO_file_doallocate - call to __mmap
| | | | | | | | | | | | syscall 'mmap' (code 90, inst 7996, pid 1000)

1000      160 8054d1d: xor ecx, ecx  (2 bytes)  ecx <- 0x0
1000      161 8054d1f: mov edi, DWORD PTR ds:0x80d5d5c  (6 bytes)  [0x80d5d5c]=0x0  edi <- 0x0
1000      162 8054d25: xor esi, esi  (2 bytes)  esi <- 0x0
1000      163 8054d27: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000      164 8054d29: mov DWORD PTR [ebp-0x38], ecx  (3 bytes)  [0xfffdff40] <- 0x0
1000      165 8054d2c: lea esi, [esi]  (4 bytes)  esi <- 0x0
1000      166 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x0
1000      167 8054d33: cmp edx, 0x1e  (3 bytes)
1000      168 8054d36: ja 8054d48  (2 bytes)
1000      169 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64e0]=0x8054f50
1000      170 8054f50: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe0070]=0x8048034  ecx <- 0x8048034
1000      171 8054f53: add eax, 0x8  (3 bytes)  eax <- 0xfffe0074
1000      172 8054f56: mov DWORD PTR [ebp-0x30], ecx  (3 bytes)  [0xfffdff48] <- 0x8048034
1000      173 8054f59: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe0074]=0x4  edx <- 0x4
1000      174 8054f5b: test edx, edx  (2 bytes)
1000      175 8054f5d: jne 8054d30  (6 bytes)
1000      176 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x1
1000      177 8054d33: cmp edx, 0x1e  (3 bytes)
1000      178 8054d36: ja 8054d48  (2 bytes)
1000      179 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64e4]=0x8054d48
1000      180 8054d48: add eax, 0x8  (3 bytes)  eax <- 0xfffe007c
1000      181 8054d4b: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe007c]=0x5  edx <- 0x5
1000      182 8054d4d: test edx, edx  (2 bytes)
1000      183 8054d4f: jne 8054d30  (2 bytes)
1000      184 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x2
1000      185 8054d33: cmp edx, 0x1e  (3 bytes)
1000      186 8054d36: ja 8054d48  (2 bytes)
1000      187 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64e8]=0x8054f30
1000      188 8054f30: mov edx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe0080]=0x5  edx <- 0x5
1000      189 8054f33: add eax, 0x8  (3 bytes)  eax <- 0xfffe0084
1000      190 8054f36: mov DWORD PTR [ebp-0x2c], edx  (3 bytes)  [0xfffdff4c] <- 0x5
1000      191 8054f39: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe0084]=0x6  edx <- 0x6
1000      192 8054f3b: test edx, edx  (2 bytes)
1000      193 8054f3d: jne 8054d30  (6 bytes)
1000      194 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x3
1000      195 8054d33: cmp edx, 0x1e  (3 bytes)
1000      196 8054d36: ja 8054d48  (2 bytes)
1000      197 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64ec]=0x8054d40
1000      198 8054d40: mov edi, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe0088]=0x1000  edi <- 0x1000
1000      199 8054d43: nop  (1 bytes)
1000      200 8054d44: lea esi, [esi]  (4 bytes)  esi <- 0x0
1000      201 8054d48: add eax, 0x8  (3 bytes)  eax <- 0xfffe008c
1000      202 8054d4b: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe008c]=0x7  edx <- 0x7
1000      203 8054d4d: test edx, edx  (2 bytes)
1000      204 8054d4f: jne 8054d30  (2 bytes)
1000      205 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x4
1000      206 8054d33: cmp edx, 0x1e  (3 bytes)
1000      207 8054d36: ja 8054d48  (2 bytes)
1000      208 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64f0]=0x8054d48
1000      209 8054d48: add eax, 0x8  (3 bytes)  eax <- 0xfffe0094
1000      210 8054d4b: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe0094]=0x8  edx <- 0x8
1000      211 8054d4d: test edx, edx  (2 bytes)
1000      212 8054d4f: jne 8054d30  (2 bytes)
1000      213 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x5
1000      214 8054d33: cmp edx, 0x1e  (3 bytes)
1000      215 8054d36: ja 8054d48  (2 bytes)
1000      216 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64f4]=0x8054d48
1000      217 8054d48: add eax, 0x8  (3 bytes)  eax <- 0xfffe009c
1000      218 8054d4b: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe009c]=0x9  edx <- 0x9
1000      219 8054d4d: test edx, edx  (2 bytes)
1000      220 8054d4f: jne 8054d30  (2 bytes)
1000      221 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x6
1000      222 8054d33: cmp edx, 0x1e  (3 bytes)
1000      223 8054d36: ja 8054d48  (2 bytes)
1000      224 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b64f8]=0x8054d48
1000      225 8054d48: add eax, 0x8  (3 bytes)  eax <- 0xfffe00a4
1000      226 8054d4b: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00a4]=0xb  edx <- 0xb
1000      227 8054d4d: test edx, edx  (2 bytes)
1000      228 8054d4f: jne 8054d30  (2 bytes)
1000      229 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x8
1000      230 8054d33: cmp edx, 0x1e  (3 bytes)
1000      231 8054d36: ja 8054d48  (2 bytes)
1000      232 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b6500]=0x8054f10
1000      233 8054f10: xor ebx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe00a8]=0x3c0570  ebx <- 0x3c0570
1000      234 8054f13: add eax, 0x8  (3 bytes)  eax <- 0xfffe00ac
1000      235 8054f16: or DWORD PTR [ebp-0x38], 0x1  (4 bytes)  [0xfffdff40]=0x0  [0xfffdff40] <- 0x1
1000      236 8054f1a: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00ac]=0xc  edx <- 0xc
1000      237 8054f1c: test edx, edx  (2 bytes)
1000      238 8054f1e: jne 8054d30  (6 bytes)
1000      239 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x9
1000      240 8054d33: cmp edx, 0x1e  (3 bytes)
1000      241 8054d36: ja 8054d48  (2 bytes)
1000      242 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b6504]=0x8054ef0
1000      243 8054ef0: xor ebx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe00b0]=0x3c0570  ebx <- 0x0
1000      244 8054ef3: add eax, 0x8  (3 bytes)  eax <- 0xfffe00b4
1000      245 8054ef6: or DWORD PTR [ebp-0x38], 0x2  (4 bytes)  [0xfffdff40]=0x1  [0xfffdff40] <- 0x3
1000      246 8054efa: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00b4]=0xd  edx <- 0xd
1000      247 8054efc: test edx, edx  (2 bytes)
1000      248 8054efe: jne 8054d30  (6 bytes)
1000      249 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0xa
1000      250 8054d33: cmp edx, 0x1e  (3 bytes)
1000      251 8054d36: ja 8054d48  (2 bytes)
1000      252 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b6508]=0x8054ed0
1000      253 8054ed0: xor esi, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe00b8]=0x7db  esi <- 0x7db
1000      254 8054ed3: add eax, 0x8  (3 bytes)  eax <- 0xfffe00bc
1000      255 8054ed6: or DWORD PTR [ebp-0x38], 0x4  (4 bytes)  [0xfffdff40]=0x3  [0xfffdff40] <- 0x7
1000      256 8054eda: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00bc]=0xe  edx <- 0xe
1000      257 8054edc: test edx, edx  (2 bytes)
1000      258 8054ede: jne 8054d30  (6 bytes)
1000      259 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0xb
1000      260 8054d33: cmp edx, 0x1e  (3 bytes)
1000      261 8054d36: ja 8054d48  (2 bytes)
1000      262 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b650c]=0x8054eb0
1000      263 8054eb0: xor esi, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe00c0]=0x7db  esi <- 0x0
1000      264 8054eb3: add eax, 0x8  (3 bytes)  eax <- 0xfffe00c4
1000      265 8054eb6: or DWORD PTR [ebp-0x38], 0x8  (4 bytes)  [0xfffdff40]=0x7  [0xfffdff40] <- 0xf
1000      266 8054eba: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00c4]=0x11  edx <- 0x11
1000      267 8054ebc: test edx, edx  (2 bytes)
1000      268 8054ebe: jne 8054d30  (6 bytes)
1000      269 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0xe
1000      270 8054d33: cmp edx, 0x1e  (3 bytes)
1000      271 8054d36: ja 8054d48  (2 bytes)
1000      272 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b6518]=0x8054e70
1000      273 8054e70: mov edx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe00c8]=0x64  edx <- 0x64
1000      274 8054e73: add eax, 0x8  (3 bytes)  eax <- 0xfffe00cc
1000      275 8054e76: mov DWORD PTR [ebp-0x34], edx  (3 bytes)  [0xfffdff44] <- 0x64
1000      276 8054e79: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00cc]=0x17  edx <- 0x17
1000      277 8054e7b: test edx, edx  (2 bytes)
1000      278 8054e7d: jne 8054d30  (6 bytes)
1000      279 8054d30: sub edx, 0x3  (3 bytes)  edx <- 0x14
1000      280 8054d33: cmp edx, 0x1e  (3 bytes)
1000      281 8054d36: ja 8054d48  (2 bytes)
1000      282 8054d38: jmp DWORD PTR [edx*4+0x80b64e0]  (7 bytes)  [0x80b6530]=0x8054e40
1000      283 8054e40: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe00d0]=0x0  ecx <- 0x0
1000      284 8054e43: add eax, 0x8  (3 bytes)  eax <- 0xfffe00d4
1000      285 8054e46: mov DWORD PTR [ebp-0x18], ecx  (3 bytes)  [0xfffdff60] <- 0x0
1000      286 8054e49: mov edx, DWORD PTR [eax]  (2 bytes)  [0xfffe00d4]=0x0  edx <- 0x0
1000      287 8054e4b: mov DWORD PTR [ebp-0x14], 0x1  (7 bytes)  [0xfffdff64] <- 0x1
1000      288 8054e52: mov DWORD PTR [ebp-0x38], 0xffffffff  (7 bytes)  [0xfffdff40] <- 0xffffffff
1000      289 8054e59: test edx, edx  (2 bytes)
1000      290 8054e5b: jne 8054d30  (6 bytes)
1000      291 8054e61: jmp 8054d58  (5 bytes)
1000      292 8054d58: mov eax, DWORD PTR [ebp-0x34]  (3 bytes)  [0xfffdff44]=0x64  eax <- 0x64
1000      293 8054d5b: mov edx, DWORD PTR [ebp-0x30]  (3 bytes)  [0xfffdff48]=0x8048034  edx <- 0x8048034
1000      294 8054d5e: mov ecx, DWORD PTR [ebp-0x38]  (3 bytes)  [0xfffdff40]=0xffffffff  ecx <- 0xffffffff
1000      295 8054d61: mov ds:0x80d5d30, eax  (5 bytes)
1000      296 8054d66: mov DWORD PTR ds:0x80d5d1c, edx  (6 bytes)  [0x80d5d1c] <- 0x8048034
1000      297 8054d6c: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdff4c]=0x5  eax <- 0x5
1000      298 8054d6f: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdff54]=0x0  edx <- 0x0
1000      299 8054d72: mov ds:0x80d5d44, eax  (5 bytes)
1000      300 8054d77: mov DWORD PTR ds:0x80d576c, edx  (6 bytes)  [0x80d576c] <- 0x0
1000      301 8054d7d: mov eax, DWORD PTR [ebp-0x28]  (3 bytes)  [0xfffdff50]=0x0  eax <- 0x0
1000      302 8054d80: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdff58]=0x8054ca0  edx <- 0x8054ca0
1000      303 8054d83: mov ds:0x80d5768, eax  (5 bytes)
1000      304 8054d88: mov DWORD PTR ds:0x80d4090, edx  (6 bytes)  [0x80d4090] <- 0x8054ca0
1000      305 8054d8e: mov eax, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdff5c]=0x0  eax <- 0x0
1000      306 8054d91: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdff60]=0x0  edx <- 0x0
1000      307 8054d94: mov ds:0x80d5d38, eax  (5 bytes)
1000      308 8054d99: mov DWORD PTR ds:0x80d3bbc, edx  (6 bytes)  [0x80d3bbc] <- 0x0
1000      309 8054d9f: mov eax, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff64]=0x1  eax <- 0x1
1000      310 8054da2: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff68]=0x0  edx <- 0x0
1000      311 8054da5: mov DWORD PTR ds:0x80d5d5c, edi  (6 bytes)  [0x80d5d5c] <- 0x1000
1000      312 8054dab: mov ds:0x80d5dac, eax  (5 bytes)
1000      313 8054db0: mov DWORD PTR ds:0x80d5d24, edx  (6 bytes)  [0x80d5d24] <- 0x0
1000      314 8054db6: cmp ecx, 0xf  (3 bytes)
1000      315 8054db9: jne 8054dd9  (2 bytes)
1000      316 8054dd9: add esp, 0x2c  (3 bytes)  esp <- 0xfffdff6c
1000      317 8054ddc: pop ebx  (1 bytes)  ebx <- 0x0
1000      318 8054ddd: pop esi  (1 bytes)  esi <- 0x8048ab0
1000      319 8054dde: pop edi  (1 bytes)  edi <- 0x8048ae0
1000      320 8054ddf: leave  (1 bytes)  ebp <- 0xfffdffd8
1000      321 8054de0: ret  (1 bytes)
1000      322 8048336: mov edx, DWORD PTR ds:0x80d40ac  (6 bytes)  [0x80d40ac]=0x0  edx <- 0x0
1000      323 804833c: test edx, edx  (2 bytes)
1000      324 804833e: je 8048430  (6 bytes)
1000      325 8048430: call 8055750  (5 bytes)
1000      326 8055750: push ebp  (1 bytes)  esp <- 0xfffdff78
1000      327 8055751: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000      328 8055753: push edi  (1 bytes)  esp <- 0xfffdff74
1000      329 8055754: lea eax, [ebp-0x1d2]  (6 bytes)  eax <- 0xfffdfda6
1000      330 805575a: push esi  (1 bytes)  esp <- 0xfffdff70
1000      331 805575b: push ebx  (1 bytes)  esp <- 0xfffdff6c
1000      332 805575c: sub esp, 0x1d4  (6 bytes)  esp <- 0xfffdfd98
1000      333 8055762: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfd98] <- 0xfffdfda6
1000      334 8055765: call 8074210  (5 bytes)
1000      335 8074210: mov edx, ebx  (2 bytes)  edx <- 0x0
1000      336 8074212: mov ebx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfd98]=0xfffdfda6  ebx <- 0xfffdfda6
1000      337 8074216: mov eax, 0x7a  (5 bytes)  eax <- 0x7a
1000      338 807421b: call DWORD PTR ds:0x80d4090  (6 bytes)  [0x80d4090]=0x8054ca0
1000      339 8054ca0: int 0x80  (2 bytes)
1000      340 8054ca2: ret  (1 bytes)
1000      341 8074221: mov ebx, edx  (2 bytes)  ebx <- 0x0
1000      342 8074223: cmp eax, 0xfffff001  (5 bytes)
1000      343 8074228: jae 8055900  (6 bytes)
1000      344 807422e: ret  (1 bytes)
1000      345 805576a: test eax, eax  (2 bytes)
1000      346 805576c: jne 80557cb  (2 bytes)
1000      347 805576e: lea ebx, [ebp-0x150]  (6 bytes)  ebx <- 0xfffdfe28
1000      348 8055774: xor edi, edi  (2 bytes)  edi <- 0x0
1000      349 8055776: xor eax, eax  (2 bytes)  eax <- 0x0
1000      350 8055778: movzx ecx, BYTE PTR [ebx]  (3 bytes)  [0xfffdfe28]=0x32  ecx <- 0x32
1000      351 805577b: lea edx, [ecx-0x30]  (3 bytes)  edx <- 0x2
1000      352 805577e: cmp dl, 0x9  (3 bytes)
1000      353 8055781: ja 80557fb  (2 bytes)
1000      354 8055783: movsx ecx, cl  (3 bytes)  ecx <- 0x32
1000      355 8055786: lea esi, [ebx+0x1]  (3 bytes)  esi <- 0xfffdfe29
1000      356 8055789: sub ecx, 0x30  (3 bytes)  ecx <- 0x2
1000      357 805578c: movzx edx, BYTE PTR [ebx+0x1]  (4 bytes)  [0xfffdfe29]=0x2e  edx <- 0x2e
1000      358 8055790: lea ebx, [edx-0x30]  (3 bytes)  ebx <- 0xfffffffe
1000      359 8055793: cmp bl, 0x9  (3 bytes)
1000      360 8055796: ja 80557b6  (2 bytes)
1000      361 80557b6: shl eax, 0x8  (3 bytes)  eax <- 0x0
1000      362 80557b9: inc edi  (1 bytes)  edi <- 0x1
1000      363 80557ba: or eax, ecx  (2 bytes)  eax <- 0x2
1000      364 80557bc: cmp dl, 0x2e  (3 bytes)
1000      365 80557bf: jne 80557fb  (2 bytes)
1000      366 80557c1: cmp edi, 0x3  (3 bytes)
1000      367 80557c4: je 80557f0  (2 bytes)
1000      368 80557c6: lea ebx, [esi+0x1]  (3 bytes)  ebx <- 0xfffdfe2a
1000      369 80557c9: jmp 8055778  (2 bytes)
1000      370 8055778: movzx ecx, BYTE PTR [ebx]  (3 bytes)  [0xfffdfe2a]=0x36  ecx <- 0x36
1000      371 805577b: lea edx, [ecx-0x30]  (3 bytes)  edx <- 0x6
1000      372 805577e: cmp dl, 0x9  (3 bytes)
1000      373 8055781: ja 80557fb  (2 bytes)
1000      374 8055783: movsx ecx, cl  (3 bytes)  ecx <- 0x36
1000      375 8055786: lea esi, [ebx+0x1]  (3 bytes)  esi <- 0xfffdfe2b
1000      376 8055789: sub ecx, 0x30  (3 bytes)  ecx <- 0x6
1000      377 805578c: movzx edx, BYTE PTR [ebx+0x1]  (4 bytes)  [0xfffdfe2b]=0x2e  edx <- 0x2e
1000      378 8055790: lea ebx, [edx-0x30]  (3 bytes)  ebx <- 0xfffffffe
1000      379 8055793: cmp bl, 0x9  (3 bytes)
1000      380 8055796: ja 80557b6  (2 bytes)
1000      381 80557b6: shl eax, 0x8  (3 bytes)  eax <- 0x200
1000      382 80557b9: inc edi  (1 bytes)  edi <- 0x2
1000      383 80557ba: or eax, ecx  (2 bytes)  eax <- 0x206
1000      384 80557bc: cmp dl, 0x2e  (3 bytes)
1000      385 80557bf: jne 80557fb  (2 bytes)
1000      386 80557c1: cmp edi, 0x3  (3 bytes)
1000      387 80557c4: je 80557f0  (2 bytes)
1000      388 80557c6: lea ebx, [esi+0x1]  (3 bytes)  ebx <- 0xfffdfe2c
1000      389 80557c9: jmp 8055778  (2 bytes)
1000      390 8055778: movzx ecx, BYTE PTR [ebx]  (3 bytes)  [0xfffdfe2c]=0x31  ecx <- 0x31
1000      391 805577b: lea edx, [ecx-0x30]  (3 bytes)  edx <- 0x1
1000      392 805577e: cmp dl, 0x9  (3 bytes)
1000      393 8055781: ja 80557fb  (2 bytes)
1000      394 8055783: movsx ecx, cl  (3 bytes)  ecx <- 0x31
1000      395 8055786: lea esi, [ebx+0x1]  (3 bytes)  esi <- 0xfffdfe2d
1000      396 8055789: sub ecx, 0x30  (3 bytes)  ecx <- 0x1
1000      397 805578c: movzx edx, BYTE PTR [ebx+0x1]  (4 bytes)  [0xfffdfe2d]=0x38  edx <- 0x38
1000      398 8055790: lea ebx, [edx-0x30]  (3 bytes)  ebx <- 0x8
1000      399 8055793: cmp bl, 0x9  (3 bytes)
1000      400 8055796: ja 80557b6  (2 bytes)
1000      401 8055798: nop  (1 bytes)
1000      402 8055799: lea esi, [esi]  (7 bytes)  esi <- 0xfffdfe2d
1000      403 80557a0: movsx edx, dl  (3 bytes)  edx <- 0x38
1000      404 80557a3: inc esi  (1 bytes)  esi <- 0xfffdfe2e
1000      405 80557a4: lea ecx, [ecx+ecx*4]  (3 bytes)  ecx <- 0x5
1000      406 80557a7: lea ecx, [edx+ecx*2-0x30]  (4 bytes)  ecx <- 0x12
1000      407 80557ab: movzx edx, BYTE PTR [esi]  (3 bytes)  [0xfffdfe2e]=0x2d  edx <- 0x2d
1000      408 80557ae: lea ebx, [edx-0x30]  (3 bytes)  ebx <- 0xfffffffd
1000      409 80557b1: cmp bl, 0x9  (3 bytes)
1000      410 80557b4: jbe 80557a0  (2 bytes)
1000      411 80557b6: shl eax, 0x8  (3 bytes)  eax <- 0x20600
1000      412 80557b9: inc edi  (1 bytes)  edi <- 0x3
1000      413 80557ba: or eax, ecx  (2 bytes)  eax <- 0x20612
1000      414 80557bc: cmp dl, 0x2e  (3 bytes)
1000      415 80557bf: jne 80557fb  (2 bytes)
1000      416 80557fb: cmp edi, 0x2  (3 bytes)
1000      417 80557fe: jg 80557f0  (2 bytes)
1000      418 80557f0: add esp, 0x1d4  (6 bytes)  esp <- 0xfffdff6c
1000      419 80557f6: pop ebx  (1 bytes)  ebx <- 0x0
1000      420 80557f7: pop esi  (1 bytes)  esi <- 0x8048ab0
1000      421 80557f8: pop edi  (1 bytes)  edi <- 0x8048ae0
1000      422 80557f9: leave  (1 bytes)  ebp <- 0xfffdffd8
1000      423 80557fa: ret  (1 bytes)
1000      424 8048435: test eax, eax  (2 bytes)
1000      425 8048437: js 8048344  (6 bytes)
1000      426 804843d: mov edx, DWORD PTR ds:0x80d5d54  (6 bytes)  [0x80d5d54]=0x0  edx <- 0x0
1000      427 8048443: test edx, edx  (2 bytes)
1000      428 8048445: jne 8048490  (2 bytes)
1000      429 8048447: mov ds:0x80d5d54, eax  (5 bytes)
1000      430 804844c: jmp 8048344  (5 bytes)
1000      431 8048344: call 8048aa0  (5 bytes)
1000      432 8048aa0: push ebp  (1 bytes)  esp <- 0xfffdff78
1000      433 8048aa1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000      434 8048aa3: leave  (1 bytes)  ebp <- 0xfffdffd8
1000      435 8048aa4: ret  (1 bytes)
1000      436 8048349: call 8048840  (5 bytes)
1000      437 8048840: push ebp  (1 bytes)  esp <- 0xfffdff78
1000      438 8048841: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000      439 8048843: push edi  (1 bytes)  esp <- 0xfffdff74
1000      440 8048844: push esi  (1 bytes)  esp <- 0xfffdff70
1000      441 8048845: push ebx  (1 bytes)  esp <- 0xfffdff6c
1000      442 8048846: sub esp, 0x4c  (3 bytes)  esp <- 0xfffdff20
1000      443 8048849: mov eax, ds:0x80d5d1c  (5 bytes)  eax <- 0x8048034
1000      444 804884e: test eax, eax  (2 bytes)
1000      445 8048850: je 80488b0  (2 bytes)
1000      446 8048852: mov edx, DWORD PTR ds:0x80d5d44  (6 bytes)  [0x80d5d44]=0x5  edx <- 0x5
1000      447 8048858: shl edx, 0x5  (3 bytes)  edx <- 0xa0
1000      448 804885b: lea edx, [eax+edx]  (3 bytes)  edx <- 0x80480d4
1000      449 804885e: cmp eax, edx  (2 bytes)
1000      450 8048860: jb 804886f  (2 bytes)
1000      451 804886f: cmp DWORD PTR [eax], 0x7  (3 bytes)  [0x8048034]=0x1
1000      452 8048872: jne 8048868  (2 bytes)
1000      453 8048868: add eax, 0x20  (3 bytes)  eax <- 0x8048054
1000      454 804886b: cmp eax, edx  (2 bytes)
1000      455 804886d: jae 80488b0  (2 bytes)
1000      456 804886f: cmp DWORD PTR [eax], 0x7  (3 bytes)  [0x8048054]=0x1
1000      457 8048872: jne 8048868  (2 bytes)
1000      458 8048868: add eax, 0x20  (3 bytes)  eax <- 0x8048074
1000      459 804886b: cmp eax, edx  (2 bytes)
1000      460 804886d: jae 80488b0  (2 bytes)
1000      461 804886f: cmp DWORD PTR [eax], 0x7  (3 bytes)  [0x8048074]=0x4
1000      462 8048872: jne 8048868  (2 bytes)
1000      463 8048868: add eax, 0x20  (3 bytes)  eax <- 0x8048094
1000      464 804886b: cmp eax, edx  (2 bytes)
1000      465 804886d: jae 80488b0  (2 bytes)
1000      466 804886f: cmp DWORD PTR [eax], 0x7  (3 bytes)  [0x8048094]=0x7
1000      467 8048872: jne 8048868  (2 bytes)
1000      468 8048874: mov edx, DWORD PTR [eax+0x10]  (3 bytes)  [0x80480a4]=0x10  edx <- 0x10
1000      469 8048877: mov ecx, DWORD PTR [eax+0x14]  (3 bytes)  [0x80480a8]=0x28  ecx <- 0x28
1000      470 804887a: mov DWORD PTR [ebp-0x34], edx  (3 bytes)  [0xfffdff44] <- 0x10
1000      471 804887d: mov edx, DWORD PTR [eax+0x8]  (3 bytes)  [0x804809c]=0x80d3b88  edx <- 0x80d3b88
1000      472 8048880: mov eax, DWORD PTR [eax+0x1c]  (3 bytes)  [0x80480b0]=0x4  eax <- 0x4
1000      473 8048883: mov DWORD PTR [ebp-0x30], edx  (3 bytes)  [0xfffdff48] <- 0x80d3b88
1000      474 8048886: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdff4c] <- 0x4
1000      475 8048889: cmp eax, 0x10  (3 bytes)
1000      476 804888c: ja 8048a80  (6 bytes)
1000      477 8048892: mov esi, eax  (2 bytes)  esi <- 0x4
1000      478 8048894: mov DWORD PTR [ebp-0x38], 0xfffffff0  (7 bytes)  [0xfffdff40] <- 0xfffffff0
1000      479 804889b: mov edi, 0xf  (5 bytes)  edi <- 0xf
1000      480 80488a0: mov eax, 0x4a0  (5 bytes)  eax <- 0x4a0
1000      481 80488a5: mov DWORD PTR [ebp-0x2c], 0x10  (7 bytes)  [0xfffdff4c] <- 0x10
1000      482 80488ac: jmp 80488da  (2 bytes)
1000      483 80488da: mov edx, DWORD PTR ds:0x80d3c08  (6 bytes)  [0x80d3c08]=0x800  edx <- 0x800
1000      484 80488e0: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdff3c] <- 0x28
1000      485 80488e3: lea ebx, [ecx+edx+0xf]  (4 bytes)  ebx <- 0x837
1000      486 80488e7: and ebx, 0xf0  (3 bytes)  ebx <- 0x830
1000      487 80488ea: lea eax, [ebx+eax]  (3 bytes)  eax <- 0xcd0
1000      488 80488ed: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdff20] <- 0xcd0
1000      489 80488f0: call 8053640  (5 bytes)
1000      490 8053640: push ebp  (1 bytes)  esp <- 0xfffdff18
1000      491 8053641: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff18
1000      492 8053643: sub esp, 0xc  (3 bytes)  esp <- 0xfffdff0c
1000      493 8053646: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdff14] <- 0x4
1000      494 8053649: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdff10] <- 0x830
1000      495 805364c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff20]=0xcd0  esi <- 0xcd0
1000      496 805364f: mov ebx, DWORD PTR ds:0x80d594c  (6 bytes)  [0x80d594c]=0x0  ebx <- 0x0
1000      497 8053655: test ebx, ebx  (2 bytes)
1000      498 8053657: je 8053690  (2 bytes)
1000      499 8053690: mov DWORD PTR [esp], 0x0  (7 bytes)  [0xfffdff0c] <- 0x0
1000      500 8053697: call 8075610  (5 bytes)
1000      501 8075610: push ebp  (1 bytes)  esp <- 0xfffdff04
1000      502 8075611: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff04
1000      503 8075613: push ebx  (1 bytes)  esp <- 0xfffdff00
1000      504 8075614: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff0c]=0x0  ebx <- 0x0
1000      505 8075617: mov eax, 0x2d  (5 bytes)  eax <- 0x2d
1000      506 807561c: call DWORD PTR ds:0x80d4090  (6 bytes)  [0x80d4090]=0x8054ca0
1000      507 8054ca0: int 0x80  (2 bytes)
1000      508 8054ca2: ret  (1 bytes)
1000      509 8075622: xor edx, edx  (2 bytes)  edx <- 0x0
1000      510 8075624: mov ds:0x80d594c, eax  (5 bytes)
1000      511 8075629: cmp ebx, eax  (2 bytes)
1000      512 807562b: ja 8075638  (2 bytes)
1000      513 807562d: mov eax, edx  (2 bytes)  eax <- 0x0
1000      514 807562f: pop ebx  (1 bytes)  ebx <- 0x0
1000      515 8075630: leave  (1 bytes)  ebp <- 0xfffdff18
1000      516 8075631: ret  (1 bytes)
1000      517 805369c: test eax, eax  (2 bytes)
1000      518 805369e: js 80536b0  (2 bytes)
1000      519 80536a0: mov ebx, DWORD PTR ds:0x80d594c  (6 bytes)  [0x80d594c]=0x80d6000  ebx <- 0x80d6000
1000      520 80536a6: jmp 8053662  (2 bytes)
1000      521 8053662: cmp esi, 0x0  (3 bytes)
1000      522 8053665: je 8053682  (2 bytes)
1000      523 8053667: jle 80536c0  (2 bytes)
1000      524 8053669: add esi, ebx  (2 bytes)  esi <- 0x80d6cd0
1000      525 805366b: nop  (1 bytes)
1000      526 805366c: lea esi, [esi]  (4 bytes)  esi <- 0x80d6cd0
1000      527 8053670: jb 80536b0  (2 bytes)
1000      528 8053672: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdff0c] <- 0x80d6cd0
1000      529 8053675: lea esi, [esi]  (3 bytes)  esi <- 0x80d6cd0
1000      530 8053678: call 8075610  (5 bytes)
1000      531 8075610: push ebp  (1 bytes)  esp <- 0xfffdff04
1000      532 8075611: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff04
1000      533 8075613: push ebx  (1 bytes)  esp <- 0xfffdff00
1000      534 8075614: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff0c]=0x80d6cd0  ebx <- 0x80d6cd0
1000      535 8075617: mov eax, 0x2d  (5 bytes)  eax <- 0x2d
1000      536 807561c: call DWORD PTR ds:0x80d4090  (6 bytes)  [0x80d4090]=0x8054ca0
1000      537 8054ca0: int 0x80  (2 bytes)
1000      538 8054ca2: ret  (1 bytes)
1000      539 8075622: xor edx, edx  (2 bytes)  edx <- 0x0
1000      540 8075624: mov ds:0x80d594c, eax  (5 bytes)
1000      541 8075629: cmp ebx, eax  (2 bytes)
1000      542 807562b: ja 8075638  (2 bytes)
1000      543 807562d: mov eax, edx  (2 bytes)  eax <- 0x0
1000      544 807562f: pop ebx  (1 bytes)  ebx <- 0x80d6000
1000      545 8075630: leave  (1 bytes)  ebp <- 0xfffdff18
1000      546 8075631: ret  (1 bytes)
1000      547 805367d: test eax, eax  (2 bytes)
1000      548 805367f: nop  (1 bytes)
1000      549 8053680: js 80536b0  (2 bytes)
1000      550 8053682: mov eax, ebx  (2 bytes)  eax <- 0x80d6000
1000      551 8053684: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdff14]=0x4  esi <- 0x4
1000      552 8053687: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdff10]=0x830  ebx <- 0x830
1000      553 805368a: leave  (1 bytes)  ebp <- 0xfffdff78
1000      554 805368b: ret  (1 bytes)
1000      555 80488f5: mov DWORD PTR ds:0x80d4360, 0x3e  (10 bytes)  [0x80d4360] <- 0x3e
1000      556 80488ff: lea edi, [eax+edi]  (3 bytes)  edi <- 0x80d600f
1000      557 8048902: mov ecx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdff3c]=0x28  ecx <- 0x28
1000      558 8048905: and edi, DWORD PTR [ebp-0x38]  (3 bytes)  [0xfffdff40]=0xfffffff0  edi <- 0x80d6000
1000      559 8048908: test esi, esi  (2 bytes)
1000      560 804890a: je 8048a58  (6 bytes)
1000      561 8048910: lea eax, [ecx+esi-0x1]  (4 bytes)  eax <- 0x2b
1000      562 8048914: xor edx, edx  (2 bytes)  edx <- 0x0
1000      563 8048916: div esi  (2 bytes)  eax <- 0xa  edx <- 0x3
1000      564 8048918: mov edx, ebx  (2 bytes)  edx <- 0x830
1000      565 804891a: imul eax, esi  (3 bytes)  eax <- 0x28
1000      566 804891d: sub edx, eax  (2 bytes)  edx <- 0x808
1000      567 804891f: lea edx, [edi+edx]  (3 bytes)  edx <- 0x80d6808
1000      568 8048922: mov DWORD PTR ds:0x80d4370, edx  (6 bytes)  [0x80d4370] <- 0x80d6808
1000      569 8048928: mov ds:0x80d49c0, eax  (5 bytes)
1000      570 804892d: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdff20] <- 0x80d6808
1000      571 8048930: mov eax, DWORD PTR [ebp-0x34]  (3 bytes)  [0xfffdff44]=0x10  eax <- 0x10
1000      572 8048933: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdff3c] <- 0x28
1000      573 8048936: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff28] <- 0x10
1000      574 804893a: mov BYTE PTR ds:0x80d4374, 0x1  (7 bytes)  [0x80d4374] <- 0x1
1000      575 8048941: mov eax, DWORD PTR [ebp-0x30]  (3 bytes)  [0xfffdff48]=0x80d3b88  eax <- 0x80d3b88
1000      576 8048944: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdff24] <- 0x80d3b88
1000      577 8048948: call 8052c20  (5 bytes)
1000      578 8052c20: mov eax, edi  (2 bytes)  eax <- 0x80d6000
1000      579 8052c22: mov edi, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdff20]=0x80d6808  edi <- 0x80d6808
1000      580 8052c26: mov edx, esi  (2 bytes)  edx <- 0x4
1000      581 8052c28: mov esi, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdff24]=0x80d3b88  esi <- 0x80d3b88
1000      582 8052c2c: mov ecx, edi  (2 bytes)  ecx <- 0x80d6808
1000      583 8052c2e: xor ecx, esi  (2 bytes)  ecx <- 0x5380
1000      584 8052c30: and ecx, 0x3  (3 bytes)  ecx <- 0x0
1000      585 8052c33: mov ecx, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdff28]=0x10  ecx <- 0x10
1000      586 8052c37: cld  (1 bytes)
1000      587 8052c38: jne 8052c76  (2 bytes)
1000      588 8052c3a: cmp ecx, 0x3  (3 bytes)
1000      589 8052c3d: jbe 8052c76  (2 bytes)
1000      590 8052c3f: test esi, 0x3  (6 bytes)
1000      591 8052c45: je 8052c5d  (2 bytes)
1000      592 8052c5d: push eax  (1 bytes)  esp <- 0xfffdff18
1000      593 8052c5e: mov eax, ecx  (2 bytes)  eax <- 0x10
1000      594 8052c60: shr ecx, 0x2  (3 bytes)  ecx <- 0x4
1000      595 8052c63: and eax, 0x3  (3 bytes)  eax <- 0x0
1000      596 8052c66: rep movsd  (2 bytes)
1000      597 8052c68: mov ecx, eax  (2 bytes)  ecx <- 0x0
1000      598 8052c6a: rep movsb  (2 bytes)
1000      599 8052c6c: pop eax  (1 bytes)  eax <- 0x80d6000
1000      600 8052c6d: mov edi, eax  (2 bytes)  edi <- 0x80d6000
1000      601 8052c6f: mov esi, edx  (2 bytes)  esi <- 0x4
1000      602 8052c71: mov eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdff20]=0x80d6808  eax <- 0x80d6808
1000      603 8052c75: ret  (1 bytes)
1000      604 804894d: mov DWORD PTR [ebx+edi+0x4], 0x80d4368  (8 bytes)  [0x80d6834] <- 0x80d4368
1000      605 8048955: mov eax, ds:0x80d4090  (5 bytes)  eax <- 0x8054ca0
1000      606 804895a: lea ebx, [edi+ebx]  (3 bytes)  ebx <- 0x80d6830
1000      607 804895d: mov DWORD PTR [ebx+0x10], eax  (3 bytes)  [0x80d6840] <- 0x8054ca0
1000      608 8048960: mov DWORD PTR [ebx], ebx  (2 bytes)  [0x80d6830] <- 0x80d6830
1000      609 8048962: mov DWORD PTR [ebx+0x8], ebx  (3 bytes)  [0x80d6838] <- 0x80d6830
1000      610 8048965: mov eax, 0xf3  (5 bytes)  eax <- 0xf3
1000      611 804896a: mov DWORD PTR [ebp-0x24], ebx  (3 bytes)  [0xfffdff54] <- 0x80d6830
1000      612 804896d: mov DWORD PTR [ebp-0x28], 0xffffffff  (7 bytes)  [0xfffdff50] <- 0xffffffff
1000      613 8048974: mov DWORD PTR [ebp-0x20], 0xfffff  (7 bytes)  [0xfffdff58] <- 0xfffff
1000      614 804897b: mov DWORD PTR [ebp-0x1c], 0x51  (7 bytes)  [0xfffdff5c] <- 0x51
1000      615 8048982: lea ebx, [ebp-0x28]  (3 bytes)  ebx <- 0xfffdff50
1000      616 8048985: int 0x80  (2 bytes)
1000      617 8048987: test eax, eax  (2 bytes)
1000      618 8048989: mov ecx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdff3c]=0x28  ecx <- 0x28
1000      619 804898c: jne 8048a48  (6 bytes)
1000      620 8048992: mov eax, DWORD PTR [ebp-0x28]  (3 bytes)  [0xfffdff50]=0x6  eax <- 0x6
1000      621 8048995: mov DWORD PTR ds:0x80d49c4, 0x1  (10 bytes)  [0x80d49c4] <- 0x1
1000      622 804899f: lea eax, [eax*8+0x3]  (7 bytes)  eax <- 0x33
1000      623 80489a6: mov DWORD PTR ds:0x80d4560, 0x40  (10 bytes)  [0x80d4560] <- 0x40
1000      624 80489b0: mov gs, eax  (2 bytes)  gs <- 0x33
1000      625 80489b2: mov DWORD PTR ds:0x80d5cac, 0x1  (10 bytes)  [0x80d5cac] <- 0x1
1000      626 80489bc: mov edx, DWORD PTR [ebp-0x30]  (3 bytes)  [0xfffdff48]=0x80d3b88  edx <- 0x80d3b88
1000      627 80489bf: mov eax, DWORD PTR [ebp-0x34]  (3 bytes)  [0xfffdff44]=0x10  eax <- 0x10
1000      628 80489c2: and BYTE PTR ds:0x80d4914, 0xfc  (7 bytes)  [0x80d4914]=0x0  [0x80d4914] <- 0x0
1000      629 80489c9: mov DWORD PTR ds:0x80d49b8, esi  (6 bytes)  [0x80d49b8] <- 0x4
1000      630 80489cf: mov DWORD PTR ds:0x80d49b4, ecx  (6 bytes)  [0x80d49b4] <- 0x28
1000      631 80489d5: mov DWORD PTR ds:0x80d49ac, edx  (6 bytes)  [0x80d49ac] <- 0x80d3b88
1000      632 80489db: mov ds:0x80d49b0, eax  (5 bytes)
1000      633 80489e0: mov DWORD PTR ds:0x80d5cb0, 0x80d4560  (10 bytes)  [0x80d5cb0] <- 0x80d4560
1000      634 80489ea: mov DWORD PTR ds:0x80d4574, 0x80d4780  (10 bytes)  [0x80d4574] <- 0x80d4780
1000      635 80489f4: test esi, esi  (2 bytes)
1000      636 80489f6: je 8048a70  (2 bytes)
1000      637 80489f8: lea eax, [ecx+esi-0x1]  (4 bytes)  eax <- 0x2b
1000      638 80489fc: xor edx, edx  (2 bytes)  edx <- 0x0
1000      639 80489fe: div esi  (2 bytes)  eax <- 0xa  edx <- 0x3
1000      640 8048a00: mov ecx, eax  (2 bytes)  ecx <- 0xa
1000      641 8048a02: imul esi, ecx  (3 bytes)  esi <- 0x28
1000      642 8048a05: mov eax, ds:0x80d3c08  (5 bytes)  eax <- 0x800
1000      643 8048a0a: mov DWORD PTR ds:0x80d5ca4, esi  (6 bytes)  [0x80d5ca4] <- 0x28
1000      644 8048a10: lea eax, [esi+eax+0xf]  (4 bytes)  eax <- 0x837
1000      645 8048a14: and eax, 0xf0  (3 bytes)  eax <- 0x830
1000      646 8048a17: add eax, 0x490  (5 bytes)  eax <- 0xcc0
1000      647 8048a1c: mov ds:0x80d3c08, eax  (5 bytes)
1000      648 8048a21: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdff4c]=0x10  eax <- 0x10
1000      649 8048a24: cmp eax, 0x10  (3 bytes)
1000      650 8048a27: jae 8048a2e  (2 bytes)
1000      651 8048a2e: mov ds:0x80d5ca8, eax  (5 bytes)
1000      652 8048a33: mov DWORD PTR ds:0x80d5cbc, 0x1  (10 bytes)  [0x80d5cbc] <- 0x1
1000      653 8048a3d: add esp, 0x4c  (3 bytes)  esp <- 0xfffdff6c
1000      654 8048a40: pop ebx  (1 bytes)  ebx <- 0x0
1000      655 8048a41: pop esi  (1 bytes)  esi <- 0x8048ab0
1000      656 8048a42: pop edi  (1 bytes)  edi <- 0x8048ae0
1000      657 8048a43: leave  (1 bytes)  ebp <- 0xfffdffd8
1000      658 8048a44: ret  (1 bytes)
1000      659 804834e: mov eax, ds:0x80d5d24  (5 bytes)  eax <- 0x0
1000      660 8048353: test eax, eax  (2 bytes)
1000      661 8048355: je 804847c  (6 bytes)
1000      662 804847c: mov DWORD PTR [ebp-0x1c], 0x0  (7 bytes)  [0xfffdffbc] <- 0x0
1000      663 8048483: mov BYTE PTR [ebp-0x19], 0xff  (4 bytes)  [0xfffdffbf] <- 0xff
1000      664 8048487: mov BYTE PTR [ebp-0x1a], 0xa  (4 bytes)  [0xfffdffbe] <- 0xa
1000      665 804848b: jmp 8048360  (5 bytes)
1000      666 8048360: mov eax, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdffbc]=0xff0a0000  eax <- 0xff0a0000
1000      667 8048363: mov gs:0x14, eax  (6 bytes)
1000      668 8048369: test ebx, ebx  (2 bytes)
1000      669 804836b: je 8048385  (2 bytes)
1000      670 8048385: mov eax, ds:0x80d5158  (5 bytes)  eax <- 0xfffe000c
1000      671 804838a: mov edx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdffe4]=0x1  edx <- 0x1
1000      672 804838d: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff88] <- 0xfffe000c
1000      673 8048391: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdff80] <- 0x1
1000      674 8048394: mov eax, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdffe8]=0xfffe0004  eax <- 0xfffe0004
1000      675 8048397: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdff84] <- 0xfffe0004
1000      676 804839b: call 8055870  (5 bytes)
1000      677 8055870: push ebp  (1 bytes)  esp <- 0xfffdff78
1000      678 8055871: mov eax, 0x0  (5 bytes)  eax <- 0x0
1000      679 8055876: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000      680 8055878: sub esp, 0x28  (3 bytes)  esp <- 0xfffdff50
1000      681 805587b: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdff6c] <- 0x0
1000      682 805587e: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdff70] <- 0x8048ab0
1000      683 8055881: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdff74] <- 0x8048ae0
1000      684 8055884: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff80]=0x1  ebx <- 0x1
1000      685 8055887: mov esi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdff84]=0xfffe0004  esi <- 0xfffe0004
1000      686 805588a: mov edi, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff88]=0xfffe000c  edi <- 0xfffe000c
1000      687 805588d: test eax, eax  (2 bytes)
1000      688 805588f: je 805589a  (2 bytes)
1000      689 805589a: mov DWORD PTR ds:0x80d40ac, 0x0  (10 bytes)  [0x80d40ac] <- 0x0
1000      690 80558a4: movzx eax, WORD PTR ds:0x80d40b8  (7 bytes)  [0x80d40b8]=0x37f  eax <- 0x37f
1000      691 80558ab: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdff50] <- 0x37f
1000      692 80558ae: call 805a0c0  (5 bytes)
1000      693 805a0c0: push ebp  (1 bytes)  esp <- 0xfffdff48
1000      694 805a0c1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff48
1000      695 805a0c3: sub esp, 0x10  (3 bytes)  esp <- 0xfffdff38
1000      696 805a0c6: movzx ecx, WORD PTR [ebp+0x8]  (4 bytes)  [0xfffdff50]=0x37f  ecx <- 0x37f
1000      697 805a0ca: fnstcw WORD PTR [ebp-0x2]  (3 bytes)
1000      698 805a0cd: mov eax, ecx  (2 bytes)  eax <- 0x37f
1000      699 805a0cf: movzx edx, WORD PTR [ebp-0x2]  (4 bytes)  [0xfffdff46]=0x37f  edx <- 0x37f
1000      700 805a0d3: and ax, 0xf3f  (4 bytes)  ax <- 0x33f
1000      701 805a0d7: and dx, 0xf0c0  (5 bytes)  dx <- 0x40
1000      702 805a0dc: or eax, edx  (2 bytes)  eax <- 0x37f
1000      703 805a0de: mov WORD PTR [ebp-0x2], ax  (4 bytes)  [0xfffdff46] <- 0x37f
1000      704 805a0e2: fldcw WORD PTR [ebp-0x2]  (3 bytes)
1000      705 805a0e5: test BYTE PTR ds:0x80d576b, 0x2  (7 bytes)  [0x80d576b]=0x0
1000      706 805a0ec: je 805a11a  (2 bytes)
1000      707 805a11a: leave  (1 bytes)  ebp <- 0xfffdff78
1000      708 805a11b: ret  (1 bytes)
1000      709 80558b3: mov DWORD PTR ds:0x80d5db0, ebx  (6 bytes)  [0x80d5db0] <- 0x1
1000      710 80558b9: mov DWORD PTR ds:0x80d5db4, esi  (6 bytes)  [0x80d5db4] <- 0xfffe0004
1000      711 80558bf: mov DWORD PTR ds:0x80d5158, edi  (6 bytes)  [0x80d5158] <- 0xfffe000c
1000      712 80558c5: call 8055700  (5 bytes)
1000      713 8055700: push ebp  (1 bytes)  esp <- 0xfffdff48
1000      714 8055701: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff48
1000      715 8055703: push ebx  (1 bytes)  esp <- 0xfffdff44
1000      716 8055704: mov eax, ds:0x80d5dac  (5 bytes)  eax <- 0x1
1000      717 8055709: test eax, eax  (2 bytes)
1000      718 805570b: je 8055710  (2 bytes)
1000      719 805570d: pop ebx  (1 bytes)  ebx <- 0x1
1000      720 805570e: leave  (1 bytes)  ebp <- 0xfffdff78
1000      721 805570f: ret  (1 bytes)
1000      722 80558ca: call 8054fa0  (5 bytes)
1000      723 8054fa0: push ebp  (1 bytes)  esp <- 0xfffdff48
1000      724 8054fa1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff48
1000      725 8054fa3: push edi  (1 bytes)  esp <- 0xfffdff44
1000      726 8054fa4: push esi  (1 bytes)  esp <- 0xfffdff40
1000      727 8054fa5: push ebx  (1 bytes)  esp <- 0xfffdff3c
1000      728 8054fa6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdff24
1000      729 8054fa9: rdtsc  (2 bytes)  edx <- 0xe18d8  eax <- 0xaf580710
1000      730 8054fab: mov ds:0x80d5d08, eax  (5 bytes)
1000      731 8054fb0: mov DWORD PTR ds:0x80d5d0c, edx  (6 bytes)  [0x80d5d0c] <- 0xe18d8
1000      732 8054fb6: mov eax, ds:0x80d5d5c  (5 bytes)  eax <- 0x1000
1000      733 8054fbb: test eax, eax  (2 bytes)
1000      734 8054fbd: jne 8054fc9  (2 bytes)
1000      735 8054fc9: mov DWORD PTR [esp], 0x80b67ca  (7 bytes)  [0xfffdff24] <- 0x80b67ca
1000      736 8054fd0: call 805ace0  (5 bytes)
1000      737 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000      738 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000      739 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000      740 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000      741 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000      742 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000      743 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b67ca  esi <- 0x80b67ca
1000      744 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b67ca
1000      745 805acef: call 80527a0  (5 bytes)
1000      746 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67ca  ecx <- 0x80b67ca
1000      747 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b67ca
1000      748 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000      749 80527a9: je 80527d3  (2 bytes)
1000      750 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67ca]=0x4c
1000      751 80527ad: je 805284a  (6 bytes)
1000      752 80527b3: inc eax  (1 bytes)  eax <- 0x80b67cb
1000      753 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000      754 80527b7: je 80527d3  (2 bytes)
1000      755 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67cb]=0x44
1000      756 80527bb: je 805284a  (6 bytes)
1000      757 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b67cc
1000      758 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000      759 80527c7: je 80527d3  (2 bytes)
1000      760 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b67cc]=0x5241575f  ecx <- 0x5241575f
1000      761 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000      762 80527da: add edx, ecx  (2 bytes)  edx <- 0x5140565e
1000      763 80527dc: jae 8052837  (2 bytes)
1000      764 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010101
1000      765 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000      766 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000      767 80527e7: jne 8052837  (2 bytes)
1000      768 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b67d0]=0x444c004e  ecx <- 0x444c004e
1000      769 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000      770 80527f1: add edx, ecx  (2 bytes)  edx <- 0x434aff4d
1000      771 80527f3: jae 8052834  (2 bytes)
1000      772 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x706ff03
1000      773 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffeffff
1000      774 80527fd: inc edx  (1 bytes)  edx <- 0xffff0000
1000      775 80527fe: jne 8052834  (2 bytes)
1000      776 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b67d0
1000      777 8052837: test cl, cl  (2 bytes)
1000      778 8052839: je 805284a  (2 bytes)
1000      779 805283b: inc eax  (1 bytes)  eax <- 0x80b67d1
1000      780 805283c: test ch, ch  (2 bytes)
1000      781 805283e: je 805284a  (2 bytes)
1000      782 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67ca  eax <- 0x7
1000      783 805284e: ret  (1 bytes)
1000      784 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000      785 805acfa: mov edi, eax  (2 bytes)  edi <- 0x7
1000      786 805acfc: test ebx, ebx  (2 bytes)
1000      787 805acfe: jne 805ad10  (2 bytes)
1000      788 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b67ca]=0x4c
1000      789 805ad13: je 805ad00  (2 bytes)
1000      790 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b67cb]=0x44
1000      791 805ad19: je 805ad70  (2 bytes)
1000      792 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b67ca]=0x444c  eax <- 0x444c
1000      793 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0x5
1000      794 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b67cc
1000      795 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0x5
1000      796 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b67cc
1000      797 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000      798 805ad2c: test esi, esi  (2 bytes)
1000      799 805ad2e: je 805ad00  (2 bytes)
1000      800 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0x7
1000      801 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000      802 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000      803 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000      804 805ad3b: jne 805ad63  (2 bytes)
1000      805 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000      806 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000      807 805ad68: test esi, esi  (2 bytes)
1000      808 805ad6a: jne 805ad38  (2 bytes)
1000      809 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000      810 805ad3b: jne 805ad63  (2 bytes)
1000      811 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000      812 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000      813 805ad68: test esi, esi  (2 bytes)
1000      814 805ad6a: jne 805ad38  (2 bytes)
1000      815 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000      816 805ad3b: jne 805ad63  (2 bytes)
1000      817 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000      818 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000      819 805ad68: test esi, esi  (2 bytes)
1000      820 805ad6a: jne 805ad38  (2 bytes)
1000      821 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000      822 805ad3b: jne 805ad63  (2 bytes)
1000      823 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000      824 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000      825 805ad68: test esi, esi  (2 bytes)
1000      826 805ad6a: jne 805ad38  (2 bytes)
1000      827 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000      828 805ad3b: jne 805ad63  (2 bytes)
1000      829 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000      830 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000      831 805ad68: test esi, esi  (2 bytes)
1000      832 805ad6a: jne 805ad38  (2 bytes)
1000      833 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000      834 805ad3b: jne 805ad63  (2 bytes)
1000      835 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000      836 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000      837 805ad68: test esi, esi  (2 bytes)
1000      838 805ad6a: jne 805ad38  (2 bytes)
1000      839 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000      840 805ad3b: jne 805ad63  (2 bytes)
1000      841 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0x5  eax <- 0x5
1000      842 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b67cc  edx <- 0x80b67cc
1000      843 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0x5
1000      844 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b67cc
1000      845 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000      846 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000      847 805ad51: call 806d520  (5 bytes)
1000      848 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000      849 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000      850 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000      851 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000      852 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000      853 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000      854 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000      855 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0x5  ecx <- 0x5
1000      856 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000      857 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b67cc  edi <- 0x80b67cc
1000      858 806d533: cmp ecx, 0x3  (3 bytes)
1000      859 806d536: jbe 806d598  (2 bytes)
1000      860 806d538: mov edx, ecx  (2 bytes)  edx <- 0x5
1000      861 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x1
1000      862 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000      863 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67cc]=0x5f  ebx <- 0x5f
1000      864 806d543: cmp al, bl  (2 bytes)
1000      865 806d545: je 806d558  (2 bytes)
1000      866 806d558: test al, al  (2 bytes)
1000      867 806d55a: je 806d547  (2 bytes)
1000      868 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000      869 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67cd]=0x57  ebx <- 0x57
1000      870 806d564: cmp al, bl  (2 bytes)
1000      871 806d566: jne 806d547  (2 bytes)
1000      872 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x57
1000      873 806d54a: movzx eax, al  (3 bytes)  eax <- 0x4c
1000      874 806d54d: sub eax, ebx  (2 bytes)  eax <- 0xfffffff5
1000      875 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000      876 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000      877 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000      878 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000      879 806d553: ret  (1 bytes)
1000      880 805ad56: test eax, eax  (2 bytes)
1000      881 805ad58: jne 805ad63  (2 bytes)
1000      882 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000      883 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  esi <- 0xfffe01e6
1000      884 805ad68: test esi, esi  (2 bytes)
1000      885 805ad6a: jne 805ad38  (2 bytes)
1000      886 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe01e6]=0x4354
1000      887 805ad3b: jne 805ad63  (2 bytes)
1000      888 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000      889 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  esi <- 0xfffe0246
1000      890 805ad68: test esi, esi  (2 bytes)
1000      891 805ad6a: jne 805ad38  (2 bytes)
1000      892 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0246]=0x494c
1000      893 805ad3b: jne 805ad63  (2 bytes)
1000      894 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000      895 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  esi <- 0xfffe0266
1000      896 805ad68: test esi, esi  (2 bytes)
1000      897 805ad6a: jne 805ad38  (2 bytes)
1000      898 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0266]=0x414d
1000      899 805ad3b: jne 805ad63  (2 bytes)
1000      900 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000      901 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  esi <- 0xfffe027e
1000      902 805ad68: test esi, esi  (2 bytes)
1000      903 805ad6a: jne 805ad38  (2 bytes)
1000      904 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe027e]=0x4150
1000      905 805ad3b: jne 805ad63  (2 bytes)
1000      906 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000      907 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  esi <- 0xfffe03c6
1000      908 805ad68: test esi, esi  (2 bytes)
1000      909 805ad6a: jne 805ad38  (2 bytes)
1000      910 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03c6]=0x5750
1000      911 805ad3b: jne 805ad63  (2 bytes)
1000      912 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000      913 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  esi <- 0xfffe03f2
1000      914 805ad68: test esi, esi  (2 bytes)
1000      915 805ad6a: jne 805ad38  (2 bytes)
1000      916 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03f2]=0x414c
1000      917 805ad3b: jne 805ad63  (2 bytes)
1000      918 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000      919 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  esi <- 0xfffe0403
1000      920 805ad68: test esi, esi  (2 bytes)
1000      921 805ad6a: jne 805ad38  (2 bytes)
1000      922 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0403]=0x4853
1000      923 805ad3b: jne 805ad63  (2 bytes)
1000      924 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000      925 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  esi <- 0xfffe040b
1000      926 805ad68: test esi, esi  (2 bytes)
1000      927 805ad6a: jne 805ad38  (2 bytes)
1000      928 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe040b]=0x4f48
1000      929 805ad3b: jne 805ad63  (2 bytes)
1000      930 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000      931 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  esi <- 0xfffe0425
1000      932 805ad68: test esi, esi  (2 bytes)
1000      933 805ad6a: jne 805ad38  (2 bytes)
1000      934 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0425]=0x414c
1000      935 805ad3b: jne 805ad63  (2 bytes)
1000      936 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000      937 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  esi <- 0xfffe0435
1000      938 805ad68: test esi, esi  (2 bytes)
1000      939 805ad6a: jne 805ad38  (2 bytes)
1000      940 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0435]=0x4e49
1000      941 805ad3b: jne 805ad63  (2 bytes)
1000      942 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000      943 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  esi <- 0xfffe045a
1000      944 805ad68: test esi, esi  (2 bytes)
1000      945 805ad6a: jne 805ad38  (2 bytes)
1000      946 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe045a]=0x4f4c
1000      947 805ad3b: jne 805ad63  (2 bytes)
1000      948 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000      949 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  esi <- 0xfffe046b
1000      950 805ad68: test esi, esi  (2 bytes)
1000      951 805ad6a: jne 805ad38  (2 bytes)
1000      952 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe046b]=0x5353
1000      953 805ad3b: jne 805ad63  (2 bytes)
1000      954 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000      955 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  esi <- 0xfffe049d
1000      956 805ad68: test esi, esi  (2 bytes)
1000      957 805ad6a: jne 805ad38  (2 bytes)
1000      958 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe049d]=0x4944
1000      959 805ad3b: jne 805ad63  (2 bytes)
1000      960 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000      961 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  esi <- 0xfffe04b4
1000      962 805ad68: test esi, esi  (2 bytes)
1000      963 805ad6a: jne 805ad38  (2 bytes)
1000      964 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04b4]=0x524f
1000      965 805ad3b: jne 805ad63  (2 bytes)
1000      966 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000      967 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  esi <- 0xfffe04de
1000      968 805ad68: test esi, esi  (2 bytes)
1000      969 805ad6a: jne 805ad38  (2 bytes)
1000      970 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04de]=0x3d5f
1000      971 805ad3b: jne 805ad63  (2 bytes)
1000      972 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000      973 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  esi <- 0xfffe04ee
1000      974 805ad68: test esi, esi  (2 bytes)
1000      975 805ad6a: jne 805ad38  (2 bytes)
1000      976 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04ee]=0x4c4f
1000      977 805ad3b: jne 805ad63  (2 bytes)
1000      978 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000      979 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  esi <- 0x0
1000      980 805ad68: test esi, esi  (2 bytes)
1000      981 805ad6a: jne 805ad38  (2 bytes)
1000      982 805ad6c: jmp 805ad00  (2 bytes)
1000      983 805ad00: xor eax, eax  (2 bytes)  eax <- 0x0
1000      984 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000      985 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000      986 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000      987 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000      988 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000      989 805ad09: ret  (1 bytes)
1000      990 8054fd5: test eax, eax  (2 bytes)
1000      991 8054fd7: je 8055308  (6 bytes)
1000      992 8055308: mov eax, 0x80b6bd9  (5 bytes)  eax <- 0x80b6bd9
1000      993 805530d: jmp 8054fdd  (5 bytes)
1000      994 8054fdd: cmp BYTE PTR [eax], 0x0  (3 bytes)  [0x80b6bd9]=0x0
1000      995 8054fe0: setne al  (3 bytes)  al <- 0x0
1000      996 8054fe3: movzx eax, al  (3 bytes)  eax <- 0x0
1000      997 8054fe6: mov ds:0x80d5d40, eax  (5 bytes)
1000      998 8054feb: mov DWORD PTR [esp], 0x80b67d2  (7 bytes)  [0xfffdff24] <- 0x80b67d2
1000      999 8054ff2: call 805ace0  (5 bytes)
1000     1000 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     1001 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     1002 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000     1003 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000     1004 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     1005 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000     1006 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b67d2  esi <- 0x80b67d2
1000     1007 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b67d2
1000     1008 805acef: call 80527a0  (5 bytes)
1000     1009 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67d2  ecx <- 0x80b67d2
1000     1010 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b67d2
1000     1011 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     1012 80527a9: je 80527d3  (2 bytes)
1000     1013 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67d2]=0x4c
1000     1014 80527ad: je 805284a  (6 bytes)
1000     1015 80527b3: inc eax  (1 bytes)  eax <- 0x80b67d3
1000     1016 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     1017 80527b7: je 80527d3  (2 bytes)
1000     1018 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67d3]=0x44
1000     1019 80527bb: je 805284a  (6 bytes)
1000     1020 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b67d4
1000     1021 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000     1022 80527c7: je 80527d3  (2 bytes)
1000     1023 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b67d4]=0x42494c5f  ecx <- 0x42494c5f
1000     1024 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     1025 80527da: add edx, ecx  (2 bytes)  edx <- 0x41484b5e
1000     1026 80527dc: jae 8052837  (2 bytes)
1000     1027 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010701
1000     1028 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     1029 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     1030 80527e7: jne 8052837  (2 bytes)
1000     1031 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b67d8]=0x59524152  ecx <- 0x59524152
1000     1032 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     1033 80527f1: add edx, ecx  (2 bytes)  edx <- 0x58514051
1000     1034 80527f3: jae 8052834  (2 bytes)
1000     1035 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1030103
1000     1036 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     1037 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     1038 80527fe: jne 8052834  (2 bytes)
1000     1039 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0x80b67dc]=0x5441505f  ecx <- 0x5441505f
1000     1040 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     1041 8052808: add edx, ecx  (2 bytes)  edx <- 0x53404f5e
1000     1042 805280a: jae 8052831  (2 bytes)
1000     1043 805280c: xor edx, ecx  (2 bytes)  edx <- 0x7011f01
1000     1044 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     1045 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     1046 8052815: jne 8052831  (2 bytes)
1000     1047 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80b67e0]=0x444c0048  ecx <- 0x444c0048
1000     1048 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     1049 805281f: add edx, ecx  (2 bytes)  edx <- 0x434aff47
1000     1050 8052821: jae 805282e  (2 bytes)
1000     1051 8052823: xor edx, ecx  (2 bytes)  edx <- 0x706ff0f
1000     1052 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffeffff
1000     1053 805282b: inc edx  (1 bytes)  edx <- 0xffff0000
1000     1054 805282c: je 80527d0  (2 bytes)
1000     1055 805282e: add eax, 0x4  (3 bytes)  eax <- 0x80b67d8
1000     1056 8052831: add eax, 0x4  (3 bytes)  eax <- 0x80b67dc
1000     1057 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b67e0
1000     1058 8052837: test cl, cl  (2 bytes)
1000     1059 8052839: je 805284a  (2 bytes)
1000     1060 805283b: inc eax  (1 bytes)  eax <- 0x80b67e1
1000     1061 805283c: test ch, ch  (2 bytes)
1000     1062 805283e: je 805284a  (2 bytes)
1000     1063 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67d2  eax <- 0xf
1000     1064 805284e: ret  (1 bytes)
1000     1065 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     1066 805acfa: mov edi, eax  (2 bytes)  edi <- 0xf
1000     1067 805acfc: test ebx, ebx  (2 bytes)
1000     1068 805acfe: jne 805ad10  (2 bytes)
1000     1069 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b67d2]=0x4c
1000     1070 805ad13: je 805ad00  (2 bytes)
1000     1071 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b67d3]=0x44
1000     1072 805ad19: je 805ad70  (2 bytes)
1000     1073 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b67d2]=0x444c  eax <- 0x444c
1000     1074 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0xd
1000     1075 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b67d4
1000     1076 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0xd
1000     1077 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b67d4
1000     1078 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000     1079 805ad2c: test esi, esi  (2 bytes)
1000     1080 805ad2e: je 805ad00  (2 bytes)
1000     1081 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0xf
1000     1082 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000     1083 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000     1084 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000     1085 805ad3b: jne 805ad63  (2 bytes)
1000     1086 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     1087 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000     1088 805ad68: test esi, esi  (2 bytes)
1000     1089 805ad6a: jne 805ad38  (2 bytes)
1000     1090 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000     1091 805ad3b: jne 805ad63  (2 bytes)
1000     1092 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     1093 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000     1094 805ad68: test esi, esi  (2 bytes)
1000     1095 805ad6a: jne 805ad38  (2 bytes)
1000     1096 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000     1097 805ad3b: jne 805ad63  (2 bytes)
1000     1098 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     1099 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000     1100 805ad68: test esi, esi  (2 bytes)
1000     1101 805ad6a: jne 805ad38  (2 bytes)
1000     1102 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000     1103 805ad3b: jne 805ad63  (2 bytes)
1000     1104 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     1105 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000     1106 805ad68: test esi, esi  (2 bytes)
1000     1107 805ad6a: jne 805ad38  (2 bytes)
1000     1108 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000     1109 805ad3b: jne 805ad63  (2 bytes)
1000     1110 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     1111 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000     1112 805ad68: test esi, esi  (2 bytes)
1000     1113 805ad6a: jne 805ad38  (2 bytes)
1000     1114 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000     1115 805ad3b: jne 805ad63  (2 bytes)
1000     1116 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     1117 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000     1118 805ad68: test esi, esi  (2 bytes)
1000     1119 805ad6a: jne 805ad38  (2 bytes)
1000     1120 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000     1121 805ad3b: jne 805ad63  (2 bytes)
1000     1122 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0xd  eax <- 0xd
1000     1123 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b67d4  edx <- 0x80b67d4
1000     1124 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0xd
1000     1125 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b67d4
1000     1126 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000     1127 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000     1128 805ad51: call 806d520  (5 bytes)
1000     1129 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000     1130 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000     1131 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000     1132 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000     1133 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000     1134 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000     1135 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000     1136 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0xd  ecx <- 0xd
1000     1137 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000     1138 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b67d4  edi <- 0x80b67d4
1000     1139 806d533: cmp ecx, 0x3  (3 bytes)
1000     1140 806d536: jbe 806d598  (2 bytes)
1000     1141 806d538: mov edx, ecx  (2 bytes)  edx <- 0xd
1000     1142 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x3
1000     1143 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000     1144 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67d4]=0x5f  ebx <- 0x5f
1000     1145 806d543: cmp al, bl  (2 bytes)
1000     1146 806d545: je 806d558  (2 bytes)
1000     1147 806d558: test al, al  (2 bytes)
1000     1148 806d55a: je 806d547  (2 bytes)
1000     1149 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000     1150 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67d5]=0x4c  ebx <- 0x4c
1000     1151 806d564: cmp al, bl  (2 bytes)
1000     1152 806d566: jne 806d547  (2 bytes)
1000     1153 806d568: test al, al  (2 bytes)
1000     1154 806d56a: je 806d547  (2 bytes)
1000     1155 806d56c: movzx eax, BYTE PTR [esi+0x2]  (4 bytes)  [0xfffe0193]=0x49  eax <- 0x49
1000     1156 806d570: movzx ebx, BYTE PTR [edi+0x2]  (4 bytes)  [0x80b67d6]=0x49  ebx <- 0x49
1000     1157 806d574: cmp al, bl  (2 bytes)
1000     1158 806d576: jne 806d547  (2 bytes)
1000     1159 806d578: test al, al  (2 bytes)
1000     1160 806d57a: je 806d547  (2 bytes)
1000     1161 806d57c: movzx eax, BYTE PTR [esi+0x3]  (4 bytes)  [0xfffe0194]=0x42  eax <- 0x42
1000     1162 806d580: movzx ebx, BYTE PTR [edi+0x3]  (4 bytes)  [0x80b67d7]=0x42  ebx <- 0x42
1000     1163 806d584: cmp al, bl  (2 bytes)
1000     1164 806d586: jne 806d547  (2 bytes)
1000     1165 806d588: test al, al  (2 bytes)
1000     1166 806d58a: je 806d547  (2 bytes)
1000     1167 806d58c: add esi, 0x4  (3 bytes)  esi <- 0xfffe0195
1000     1168 806d58f: add edi, 0x4  (3 bytes)  edi <- 0x80b67d8
1000     1169 806d592: dec edx  (1 bytes)  edx <- 0x2
1000     1170 806d593: jne 806d53d  (2 bytes)
1000     1171 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0195]=0x52  eax <- 0x52
1000     1172 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67d8]=0x52  ebx <- 0x52
1000     1173 806d543: cmp al, bl  (2 bytes)
1000     1174 806d545: je 806d558  (2 bytes)
1000     1175 806d558: test al, al  (2 bytes)
1000     1176 806d55a: je 806d547  (2 bytes)
1000     1177 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0196]=0x41  eax <- 0x41
1000     1178 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67d9]=0x41  ebx <- 0x41
1000     1179 806d564: cmp al, bl  (2 bytes)
1000     1180 806d566: jne 806d547  (2 bytes)
1000     1181 806d568: test al, al  (2 bytes)
1000     1182 806d56a: je 806d547  (2 bytes)
1000     1183 806d56c: movzx eax, BYTE PTR [esi+0x2]  (4 bytes)  [0xfffe0197]=0x52  eax <- 0x52
1000     1184 806d570: movzx ebx, BYTE PTR [edi+0x2]  (4 bytes)  [0x80b67da]=0x52  ebx <- 0x52
1000     1185 806d574: cmp al, bl  (2 bytes)
1000     1186 806d576: jne 806d547  (2 bytes)
1000     1187 806d578: test al, al  (2 bytes)
1000     1188 806d57a: je 806d547  (2 bytes)
1000     1189 806d57c: movzx eax, BYTE PTR [esi+0x3]  (4 bytes)  [0xfffe0198]=0x59  eax <- 0x59
1000     1190 806d580: movzx ebx, BYTE PTR [edi+0x3]  (4 bytes)  [0x80b67db]=0x59  ebx <- 0x59
1000     1191 806d584: cmp al, bl  (2 bytes)
1000     1192 806d586: jne 806d547  (2 bytes)
1000     1193 806d588: test al, al  (2 bytes)
1000     1194 806d58a: je 806d547  (2 bytes)
1000     1195 806d58c: add esi, 0x4  (3 bytes)  esi <- 0xfffe0199
1000     1196 806d58f: add edi, 0x4  (3 bytes)  edi <- 0x80b67dc
1000     1197 806d592: dec edx  (1 bytes)  edx <- 0x1
1000     1198 806d593: jne 806d53d  (2 bytes)
1000     1199 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0199]=0x5f  eax <- 0x5f
1000     1200 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67dc]=0x5f  ebx <- 0x5f
1000     1201 806d543: cmp al, bl  (2 bytes)
1000     1202 806d545: je 806d558  (2 bytes)
1000     1203 806d558: test al, al  (2 bytes)
1000     1204 806d55a: je 806d547  (2 bytes)
1000     1205 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe019a]=0x50  eax <- 0x50
1000     1206 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67dd]=0x50  ebx <- 0x50
1000     1207 806d564: cmp al, bl  (2 bytes)
1000     1208 806d566: jne 806d547  (2 bytes)
1000     1209 806d568: test al, al  (2 bytes)
1000     1210 806d56a: je 806d547  (2 bytes)
1000     1211 806d56c: movzx eax, BYTE PTR [esi+0x2]  (4 bytes)  [0xfffe019b]=0x41  eax <- 0x41
1000     1212 806d570: movzx ebx, BYTE PTR [edi+0x2]  (4 bytes)  [0x80b67de]=0x41  ebx <- 0x41
1000     1213 806d574: cmp al, bl  (2 bytes)
1000     1214 806d576: jne 806d547  (2 bytes)
1000     1215 806d578: test al, al  (2 bytes)
1000     1216 806d57a: je 806d547  (2 bytes)
1000     1217 806d57c: movzx eax, BYTE PTR [esi+0x3]  (4 bytes)  [0xfffe019c]=0x54  eax <- 0x54
1000     1218 806d580: movzx ebx, BYTE PTR [edi+0x3]  (4 bytes)  [0x80b67df]=0x54  ebx <- 0x54
1000     1219 806d584: cmp al, bl  (2 bytes)
1000     1220 806d586: jne 806d547  (2 bytes)
1000     1221 806d588: test al, al  (2 bytes)
1000     1222 806d58a: je 806d547  (2 bytes)
1000     1223 806d58c: add esi, 0x4  (3 bytes)  esi <- 0xfffe019d
1000     1224 806d58f: add edi, 0x4  (3 bytes)  edi <- 0x80b67e0
1000     1225 806d592: dec edx  (1 bytes)  edx <- 0x0
1000     1226 806d593: jne 806d53d  (2 bytes)
1000     1227 806d595: and ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     1228 806d598: test ecx, ecx  (2 bytes)
1000     1229 806d59a: je 806d547  (2 bytes)
1000     1230 806d59c: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe019d]=0x48  eax <- 0x48
1000     1231 806d59f: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67e0]=0x48  ebx <- 0x48
1000     1232 806d5a2: test al, al  (2 bytes)
1000     1233 806d5a4: je 806d547  (2 bytes)
1000     1234 806d5a6: cmp al, bl  (2 bytes)
1000     1235 806d5a8: jne 806d547  (2 bytes)
1000     1236 806d5aa: xor edx, edx  (2 bytes)  edx <- 0x0
1000     1237 806d5ac: dec ecx  (1 bytes)  ecx <- 0x0
1000     1238 806d5ad: je 806d547  (2 bytes)
1000     1239 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x48
1000     1240 806d54a: movzx eax, al  (3 bytes)  eax <- 0x48
1000     1241 806d54d: sub eax, ebx  (2 bytes)  eax <- 0x0
1000     1242 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000     1243 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000     1244 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000     1245 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     1246 806d553: ret  (1 bytes)
1000     1247 805ad56: test eax, eax  (2 bytes)
1000     1248 805ad58: jne 805ad63  (2 bytes)
1000     1249 805ad5a: mov eax, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdff04]=0xf  eax <- 0xf
1000     1250 805ad5d: cmp BYTE PTR [esi+eax], 0x3d  (4 bytes)  [0xfffe019e]=0x3d
1000     1251 805ad61: je 805adb0  (2 bytes)
1000     1252 805adb0: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0xd  edx <- 0xd
1000     1253 805adb3: lea eax, [esi+edx+0x3]  (4 bytes)  eax <- 0xfffe019f
1000     1254 805adb7: jmp 805ad02  (5 bytes)
1000     1255 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     1256 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000     1257 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     1258 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     1259 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000     1260 805ad09: ret  (1 bytes)
1000     1261 8054ff7: call 8078bd0  (5 bytes)
1000     1262 8078bd0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     1263 8078bd1: mov ecx, 0x80d3bd0  (5 bytes)  ecx <- 0x80d3bd0
1000     1264 8078bd6: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     1265 8078bd8: push edi  (1 bytes)  esp <- 0xfffdff18
1000     1266 8078bd9: push esi  (1 bytes)  esp <- 0xfffdff14
1000     1267 8078bda: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     1268 8078bdb: sub esp, 0x1c  (3 bytes)  esp <- 0xfffdfef4
1000     1269 8078bde: mov DWORD PTR [ebp-0x14], eax  (3 bytes)  [0xfffdff08] <- 0xfffe019f
1000     1270 8078be1: mov edx, DWORD PTR ds:0x80d5cec  (6 bytes)  [0x80d5cec]=0x0  edx <- 0x0
1000     1271 8078be7: mov DWORD PTR [esp], 0x80d3bd4  (7 bytes)  [0xfffdfef4] <- 0x80d3bd4
1000     1272 8078bee: mov eax, ds:0x80d5d14  (5 bytes)  eax <- 0x0
1000     1273 8078bf3: call 8054f70  (5 bytes)
1000     1274 8054f70: push ebp  (1 bytes)  esp <- 0xfffdfeec
1000     1275 8054f71: mov DWORD PTR ds:0x80d5778, 0x0  (10 bytes)  [0x80d5778] <- 0x0
1000     1276 8054f7b: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfeec
1000     1277 8054f7d: mov DWORD PTR ds:0x80d5774, 0x80d5770  (10 bytes)  [0x80d5774] <- 0x80d5770
1000     1278 8054f87: mov DWORD PTR [ecx], 0x1  (6 bytes)  [0x80d3bd0] <- 0x1
1000     1279 8054f8d: mov eax, 0x80d5774  (5 bytes)  eax <- 0x80d5774
1000     1280 8054f92: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     1281 8054f93: ret 0x4  (3 bytes)
1000     1282 8078bf8: sub esp, 0x4  (3 bytes)  esp <- 0xfffdfef4
1000     1283 8078bfb: mov ds:0x80d3bcc, eax  (5 bytes)
1000     1284 8078c00: mov DWORD PTR [esp], 0xc  (7 bytes)  [0xfffdfef4] <- 0xc
1000     1285 8078c07: call 8050320  (5 bytes)
1000     1286 8050320: push ebp  (1 bytes)  esp <- 0xfffdfeec
1000     1287 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfeec
1000     1288 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfebc
1000     1289 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfee8] <- 0xfffe000c
1000     1290 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x8050550
1000     1291 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfee0] <- 0x1
1000     1292 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfee4] <- 0xfffe0004
1000     1293 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef4]=0xc  edi <- 0xc
1000     1294 8050337: test eax, eax  (2 bytes)
1000     1295 8050339: jne 8050535  (6 bytes)
1000     1296 8050535: mov edx, DWORD PTR [ebp+0x4]  (3 bytes)  [0xfffdfef0]=0x8078c0c  edx <- 0x8078c0c
1000     1297 8050538: mov DWORD PTR [esp], edi  (3 bytes)  [0xfffdfebc] <- 0xc
1000     1298 805053b: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfec0] <- 0x8078c0c
1000     1299 805053f: call eax  (2 bytes)
1000     1300 8050550: push ebp  (1 bytes)  esp <- 0xfffdfeb4
1000     1301 8050551: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfeb4
1000     1302 8050553: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     1303 8050554: mov DWORD PTR ds:0x80d404c, 0x0  (10 bytes)  [0x80d404c] <- 0x0
1000     1304 805055e: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfebc]=0xc  ebx <- 0xc
1000     1305 8050561: call 804c590  (5 bytes)
1000     1306 804c590: push ebp  (1 bytes)  esp <- 0xfffdfea8
1000     1307 804c591: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfea8
1000     1308 804c593: push edi  (1 bytes)  esp <- 0xfffdfea4
1000     1309 804c594: push esi  (1 bytes)  esp <- 0xfffdfea0
1000     1310 804c595: push ebx  (1 bytes)  esp <- 0xfffdfe9c
1000     1311 804c596: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfe84
1000     1312 804c599: mov ebx, DWORD PTR ds:0x80d4058  (6 bytes)  [0x80d4058]=0xffffffff  ebx <- 0xffffffff
1000     1313 804c59f: test ebx, ebx  (2 bytes)
1000     1314 804c5a1: js 804c5b0  (2 bytes)
1000     1315 804c5b0: mov DWORD PTR ds:0x80d4058, 0x0  (10 bytes)  [0x80d4058] <- 0x0
1000     1316 804c5ba: mov DWORD PTR ds:0x80d50e4, 0x20000  (10 bytes)  [0x80d50e4] <- 0x20000
1000     1317 804c5c4: mov DWORD PTR ds:0x80d50f0, 0x10000  (10 bytes)  [0x80d50f0] <- 0x10000
1000     1318 804c5ce: mov DWORD PTR ds:0x80d50e8, 0x20000  (10 bytes)  [0x80d50e8] <- 0x20000
1000     1319 804c5d8: mov DWORD PTR ds:0x80d50e0, 0x20000  (10 bytes)  [0x80d50e0] <- 0x20000
1000     1320 804c5e2: call 80536d0  (5 bytes)
1000     1321 80536d0: push ebp  (1 bytes)  esp <- 0xfffdfe7c
1000     1322 80536d1: mov eax, ds:0x80d5d5c  (5 bytes)  eax <- 0x1000
1000     1323 80536d6: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe7c
1000     1324 80536d8: test eax, eax  (2 bytes)
1000     1325 80536da: je 80536e0  (2 bytes)
1000     1326 80536dc: leave  (1 bytes)  ebp <- 0xfffdfea8
1000     1327 80536dd: ret  (1 bytes)
1000     1328 804c5e7: mov DWORD PTR ds:0x80d4c80, 0x0  (10 bytes)  [0x80d4c80] <- 0x0
1000     1329 804c5f1: mov ds:0x80d50fc, eax  (5 bytes)
1000     1330 804c5f6: mov DWORD PTR ds:0x80d50c0, 0x80d4c80  (10 bytes)  [0x80d50c0] <- 0x80d4c80
1000     1331 804c600: mov eax, 0xffffffec  (5 bytes)  eax <- 0xffffffec
1000     1332 804c605: mov DWORD PTR ds:0x80d5118, 0x0  (10 bytes)  [0x80d5118] <- 0x0
1000     1333 804c60f: mov DWORD PTR gs:[eax], 0x80d4c80  (7 bytes)  [0x80d681c] <- 0x80d4c80
1000     1334 804c616: mov DWORD PTR ds:0x80d5130, 0x804b9d0  (10 bytes)  [0x80d5130] <- 0x804b9d0
1000     1335 804c620: mov eax, 0x80d3c04  (5 bytes)  eax <- 0x80d3c04
1000     1336 804c625: mov DWORD PTR ds:0x80d5134, 0x804bab0  (10 bytes)  [0x80d5134] <- 0x804bab0
1000     1337 804c62f: mov DWORD PTR ds:0x80d5138, 0x804bb40  (10 bytes)  [0x80d5138] <- 0x804bb40
1000     1338 804c639: test eax, eax  (2 bytes)
1000     1339 804c63b: je 804c642  (2 bytes)
1000     1340 804c63d: mov eax, ds:0x80d3c04  (5 bytes)  eax <- 0x0
1000     1341 804c642: mov ds:0x80d513c, eax  (5 bytes)
1000     1342 804c647: mov DWORD PTR ds:0x80d5140, 0x1  (10 bytes)  [0x80d5140] <- 0x1
1000     1343 804c651: mov DWORD PTR [esp], 0x80d512c  (7 bytes)  [0xfffdfe84] <- 0x80d512c
1000     1344 804c658: call 8054640  (5 bytes)
1000     1345 8054640: push ebp  (1 bytes)  esp <- 0xfffdfe7c
1000     1346 8054641: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe7c
1000     1347 8054643: mov ecx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe84]=0x80d512c  ecx <- 0x80d512c
1000     1348 8054646: lea esi, [esi]  (3 bytes)  esi <- 0xfffe0004
1000     1349 8054649: lea edi, [edi]  (7 bytes)  edi <- 0xc
1000     1350 8054650: mov edx, DWORD PTR ds:0x80d5e18  (6 bytes)  [0x80d5e18]=0x0  edx <- 0x0
1000     1351 8054656: mov eax, edx  (2 bytes)  eax <- 0x0
1000     1352 8054658: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     1353 8054660: je 8054663  (2 bytes)
1000     1354 8054663: cmpxchg DWORD PTR ds:0x80d5e18, ecx  (7 bytes)  [0x80d5e18]=0x0  eax <- 0x0  [0x80d5e18] <- 0x80d512c
1000     1355 805466a: cmp edx, eax  (2 bytes)
1000     1356 805466c: jne 8054650  (2 bytes)
1000     1357 805466e: mov DWORD PTR [ecx], edx  (2 bytes)  [0x80d512c] <- 0x0
1000     1358 8054670: leave  (1 bytes)  ebp <- 0xfffdfea8
1000     1359 8054671: ret  (1 bytes)
1000     1360 804c65d: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     1361 804c663: mov edi, DWORD PTR ds:0x80d3bbc  (6 bytes)  [0x80d3bbc]=0x0  edi <- 0x0
1000     1362 804c669: test ebx, ebx  (2 bytes)
1000     1363 804c66b: je 804c695  (2 bytes)
1000     1364 804c66d: xor esi, esi  (2 bytes)  esi <- 0x0
1000     1365 804c66f: jmp 804c684  (2 bytes)
1000     1366 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  eax <- 0xfffe00e1
1000     1367 804c686: test eax, eax  (2 bytes)
1000     1368 804c688: jne 804c678  (2 bytes)
1000     1369 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe00e1]=0x54
1000     1370 804c67b: je 804c71f  (6 bytes)
1000     1371 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     1372 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  eax <- 0xfffe00ec
1000     1373 804c686: test eax, eax  (2 bytes)
1000     1374 804c688: jne 804c678  (2 bytes)
1000     1375 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe00ec]=0x53
1000     1376 804c67b: je 804c71f  (6 bytes)
1000     1377 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     1378 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  eax <- 0xfffe00fc
1000     1379 804c686: test eax, eax  (2 bytes)
1000     1380 804c688: jne 804c678  (2 bytes)
1000     1381 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe00fc]=0x58
1000     1382 804c67b: je 804c71f  (6 bytes)
1000     1383 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     1384 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  eax <- 0xfffe014d
1000     1385 804c686: test eax, eax  (2 bytes)
1000     1386 804c688: jne 804c678  (2 bytes)
1000     1387 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe014d]=0x53
1000     1388 804c67b: je 804c71f  (6 bytes)
1000     1389 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     1390 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  eax <- 0xfffe016e
1000     1391 804c686: test eax, eax  (2 bytes)
1000     1392 804c688: jne 804c678  (2 bytes)
1000     1393 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe016e]=0x53
1000     1394 804c67b: je 804c71f  (6 bytes)
1000     1395 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     1396 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  eax <- 0xfffe0181
1000     1397 804c686: test eax, eax  (2 bytes)
1000     1398 804c688: jne 804c678  (2 bytes)
1000     1399 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe0181]=0x55
1000     1400 804c67b: je 804c71f  (6 bytes)
1000     1401 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     1402 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  eax <- 0xfffe018f
1000     1403 804c686: test eax, eax  (2 bytes)
1000     1404 804c688: jne 804c678  (2 bytes)
1000     1405 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe018f]=0x4c
1000     1406 804c67b: je 804c71f  (6 bytes)
1000     1407 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000     1408 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  eax <- 0xfffe01e6
1000     1409 804c686: test eax, eax  (2 bytes)
1000     1410 804c688: jne 804c678  (2 bytes)
1000     1411 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe01e6]=0x54
1000     1412 804c67b: je 804c71f  (6 bytes)
1000     1413 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000     1414 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  eax <- 0xfffe0246
1000     1415 804c686: test eax, eax  (2 bytes)
1000     1416 804c688: jne 804c678  (2 bytes)
1000     1417 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe0246]=0x4c
1000     1418 804c67b: je 804c71f  (6 bytes)
1000     1419 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000     1420 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  eax <- 0xfffe0266
1000     1421 804c686: test eax, eax  (2 bytes)
1000     1422 804c688: jne 804c678  (2 bytes)
1000     1423 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe0266]=0x4d
1000     1424 804c67b: je 804c71f  (6 bytes)
1000     1425 804c71f: cmp BYTE PTR [eax+0x1], 0x41  (4 bytes)  [0xfffe0267]=0x41
1000     1426 804c723: jne 804c681  (6 bytes)
1000     1427 804c729: cmp BYTE PTR [eax+0x2], 0x4c  (4 bytes)  [0xfffe0268]=0x49
1000     1428 804c72d: jne 804c681  (6 bytes)
1000     1429 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000     1430 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  eax <- 0xfffe027e
1000     1431 804c686: test eax, eax  (2 bytes)
1000     1432 804c688: jne 804c678  (2 bytes)
1000     1433 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe027e]=0x50
1000     1434 804c67b: je 804c71f  (6 bytes)
1000     1435 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000     1436 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  eax <- 0xfffe03c6
1000     1437 804c686: test eax, eax  (2 bytes)
1000     1438 804c688: jne 804c678  (2 bytes)
1000     1439 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe03c6]=0x50
1000     1440 804c67b: je 804c71f  (6 bytes)
1000     1441 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000     1442 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  eax <- 0xfffe03f2
1000     1443 804c686: test eax, eax  (2 bytes)
1000     1444 804c688: jne 804c678  (2 bytes)
1000     1445 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe03f2]=0x4c
1000     1446 804c67b: je 804c71f  (6 bytes)
1000     1447 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000     1448 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  eax <- 0xfffe0403
1000     1449 804c686: test eax, eax  (2 bytes)
1000     1450 804c688: jne 804c678  (2 bytes)
1000     1451 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe0403]=0x53
1000     1452 804c67b: je 804c71f  (6 bytes)
1000     1453 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000     1454 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  eax <- 0xfffe040b
1000     1455 804c686: test eax, eax  (2 bytes)
1000     1456 804c688: jne 804c678  (2 bytes)
1000     1457 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe040b]=0x48
1000     1458 804c67b: je 804c71f  (6 bytes)
1000     1459 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000     1460 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  eax <- 0xfffe0425
1000     1461 804c686: test eax, eax  (2 bytes)
1000     1462 804c688: jne 804c678  (2 bytes)
1000     1463 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe0425]=0x4c
1000     1464 804c67b: je 804c71f  (6 bytes)
1000     1465 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000     1466 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  eax <- 0xfffe0435
1000     1467 804c686: test eax, eax  (2 bytes)
1000     1468 804c688: jne 804c678  (2 bytes)
1000     1469 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe0435]=0x49
1000     1470 804c67b: je 804c71f  (6 bytes)
1000     1471 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000     1472 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  eax <- 0xfffe045a
1000     1473 804c686: test eax, eax  (2 bytes)
1000     1474 804c688: jne 804c678  (2 bytes)
1000     1475 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe045a]=0x4c
1000     1476 804c67b: je 804c71f  (6 bytes)
1000     1477 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000     1478 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  eax <- 0xfffe046b
1000     1479 804c686: test eax, eax  (2 bytes)
1000     1480 804c688: jne 804c678  (2 bytes)
1000     1481 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe046b]=0x53
1000     1482 804c67b: je 804c71f  (6 bytes)
1000     1483 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000     1484 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  eax <- 0xfffe049d
1000     1485 804c686: test eax, eax  (2 bytes)
1000     1486 804c688: jne 804c678  (2 bytes)
1000     1487 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe049d]=0x44
1000     1488 804c67b: je 804c71f  (6 bytes)
1000     1489 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000     1490 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  eax <- 0xfffe04b4
1000     1491 804c686: test eax, eax  (2 bytes)
1000     1492 804c688: jne 804c678  (2 bytes)
1000     1493 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe04b4]=0x4f
1000     1494 804c67b: je 804c71f  (6 bytes)
1000     1495 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000     1496 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  eax <- 0xfffe04de
1000     1497 804c686: test eax, eax  (2 bytes)
1000     1498 804c688: jne 804c678  (2 bytes)
1000     1499 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe04de]=0x5f
1000     1500 804c67b: je 804c71f  (6 bytes)
1000     1501 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000     1502 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  eax <- 0xfffe04ee
1000     1503 804c686: test eax, eax  (2 bytes)
1000     1504 804c688: jne 804c678  (2 bytes)
1000     1505 804c678: cmp BYTE PTR [eax], 0x4d  (3 bytes)  [0xfffe04ee]=0x4f
1000     1506 804c67b: je 804c71f  (6 bytes)
1000     1507 804c681: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000     1508 804c684: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  eax <- 0x0
1000     1509 804c686: test eax, eax  (2 bytes)
1000     1510 804c688: jne 804c678  (2 bytes)
1000     1511 804c68a: test esi, esi  (2 bytes)
1000     1512 804c68c: je 804c695  (2 bytes)
1000     1513 804c695: mov eax, ds:0x80d4c60  (5 bytes)  eax <- 0x0
1000     1514 804c69a: test eax, eax  (2 bytes)
1000     1515 804c69c: je 804c6a0  (2 bytes)
1000     1516 804c6a0: mov DWORD PTR ds:0x80d4058, 0x1  (10 bytes)  [0x80d4058] <- 0x1
1000     1517 804c6aa: add esp, 0x18  (3 bytes)  esp <- 0xfffdfe9c
1000     1518 804c6ad: pop ebx  (1 bytes)  ebx <- 0xc
1000     1519 804c6ae: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     1520 804c6af: pop edi  (1 bytes)  edi <- 0xc
1000     1521 804c6b0: leave  (1 bytes)  ebp <- 0xfffdfeb4
1000     1522 804c6b1: ret  (1 bytes)
1000     1523 8050566: mov DWORD PTR [ebp+0x8], ebx  (3 bytes)  [0xfffdfebc] <- 0xc
1000     1524 8050569: pop ebx  (1 bytes)  ebx <- 0x1
1000     1525 805056a: leave  (1 bytes)  ebp <- 0xfffdfeec
1000     1526 805056b: jmp 8050320  (5 bytes)
1000     1527 8050320: push ebp  (1 bytes)  esp <- 0xfffdfeb4
1000     1528 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfeb4
1000     1529 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfe84
1000     1530 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfeb0] <- 0xc
1000     1531 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x0
1000     1532 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfea8] <- 0x1
1000     1533 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfeac] <- 0xfffe0004
1000     1534 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfebc]=0xc  edi <- 0xc
1000     1535 8050337: test eax, eax  (2 bytes)
1000     1536 8050339: jne 8050535  (6 bytes)
1000     1537 805033f: mov edx, 0xffffffec  (6 bytes)  edx <- 0xffffffec
1000     1538 8050345: mov ebx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d681c]=0x80d4c80  ebx <- 0x80d4c80
1000     1539 8050348: test ebx, ebx  (2 bytes)
1000     1540 805034a: je 8050428  (6 bytes)
1000     1541 8050350: mov edx, 0x1  (5 bytes)  edx <- 0x1
1000     1542 8050355: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     1543 805035d: je 8050360  (2 bytes)
1000     1544 8050360: cmpxchg DWORD PTR [ebx], edx  (3 bytes)  [0x80d4c80]=0x0  eax <- 0x0  [0x80d4c80] <- 0x1
1000     1545 8050363: test eax, eax  (2 bytes)
1000     1546 8050365: jne 8050428  (6 bytes)
1000     1547 805036b: mov edx, edi  (2 bytes)  edx <- 0xc
1000     1548 805036d: mov eax, ebx  (2 bytes)  eax <- 0x80d4c80
1000     1549 805036f: call 804ef60  (5 bytes)
1000     1550 804ef60: push ebp  (1 bytes)  esp <- 0xfffdfe7c
1000     1551 804ef61: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe7c
1000     1552 804ef63: push edi  (1 bytes)  esp <- 0xfffdfe78
1000     1553 804ef64: push esi  (1 bytes)  esp <- 0xfffdfe74
1000     1554 804ef65: mov esi, eax  (2 bytes)  esi <- 0x80d4c80
1000     1555 804ef67: push ebx  (1 bytes)  esp <- 0xfffdfe70
1000     1556 804ef68: sub esp, 0x68  (3 bytes)  esp <- 0xfffdfe08
1000     1557 804ef6b: mov DWORD PTR [ebp-0x14], edx  (3 bytes)  [0xfffdfe68] <- 0xc
1000     1558 804ef6e: cmp edx, 0xdf  (3 bytes)
1000     1559 804ef71: ja 804f3d8  (6 bytes)
1000     1560 804ef77: mov eax, edx  (2 bytes)  eax <- 0xc
1000     1561 804ef79: mov edi, 0x10  (5 bytes)  edi <- 0x10
1000     1562 804ef7e: add eax, 0xb  (3 bytes)  eax <- 0x17
1000     1563 804ef81: cmp eax, 0xf  (3 bytes)
1000     1564 804ef84: ja 804f060  (6 bytes)
1000     1565 804f060: mov edi, eax  (2 bytes)  edi <- 0x17
1000     1566 804f062: and edi, 0xf8  (3 bytes)  edi <- 0x10
1000     1567 804f065: cmp edi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x0
1000     1568 804f06b: ja 804efe0  (6 bytes)
1000     1569 804efe0: cmp edi, 0x1ff  (6 bytes)
1000     1570 804efe6: ja 804f080  (6 bytes)
1000     1571 804efec: lea edx, [esi+0x38]  (3 bytes)  edx <- 0x80d4cb8
1000     1572 804efef: mov eax, edi  (2 bytes)  eax <- 0x10
1000     1573 804eff1: mov DWORD PTR [ebp-0x24], edx  (3 bytes)  [0xfffdfe58] <- 0x80d4cb8
1000     1574 804eff4: shr eax, 0x3  (3 bytes)  eax <- 0x2
1000     1575 804eff7: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdfe50] <- 0x2
1000     1576 804effa: lea eax, [edx+eax*8-0x10]  (4 bytes)  eax <- 0x80d4cb8
1000     1577 804effe: mov ebx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80d4cc4]=0x0  ebx <- 0x0
1000     1578 804f001: cmp ebx, eax  (2 bytes)
1000     1579 804f003: je 804f0b5  (6 bytes)
1000     1580 804f009: test ebx, ebx  (2 bytes)
1000     1581 804f00b: je 804f0ae  (6 bytes)
1000     1582 804f0ae: mov eax, esi  (2 bytes)  eax <- 0x80d4c80
1000     1583 804f0b0: call 804c0f0  (5 bytes)
1000     1584 804c0f0: push ebp  (1 bytes)  esp <- 0xfffdfe00
1000     1585 804c0f1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe00
1000     1586 804c0f3: push edi  (1 bytes)  esp <- 0xfffdfdfc
1000     1587 804c0f4: push esi  (1 bytes)  esp <- 0xfffdfdf8
1000     1588 804c0f5: push ebx  (1 bytes)  esp <- 0xfffdfdf4
1000     1589 804c0f6: sub esp, 0x20  (3 bytes)  esp <- 0xfffdfdd4
1000     1590 804c0f9: mov DWORD PTR [ebp-0x20], eax  (3 bytes)  [0xfffdfde0] <- 0x80d4c80
1000     1591 804c0fc: mov esi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x0  esi <- 0x0
1000     1592 804c102: test esi, esi  (2 bytes)
1000     1593 804c104: je 804c270  (6 bytes)
1000     1594 804c270: mov ecx, eax  (2 bytes)  ecx <- 0x80d4c80
1000     1595 804c272: mov edx, eax  (2 bytes)  edx <- 0x80d4c80
1000     1596 804c274: add ecx, 0x30  (3 bytes)  ecx <- 0x80d4cb0
1000     1597 804c277: add edx, 0x428  (6 bytes)  edx <- 0x80d50a8
1000     1598 804c27d: mov eax, ecx  (2 bytes)  eax <- 0x80d4cb0
1000     1599 804c27f: nop  (1 bytes)
1000     1600 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cbc] <- 0x80d4cb0
1000     1601 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cb8] <- 0x80d4cb0
1000     1602 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cb8
1000     1603 804c289: cmp eax, edx  (2 bytes)
1000     1604 804c28b: jne 804c280  (2 bytes)
1000     1605 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cc4] <- 0x80d4cb8
1000     1606 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cc0] <- 0x80d4cb8
1000     1607 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cc0
1000     1608 804c289: cmp eax, edx  (2 bytes)
1000     1609 804c28b: jne 804c280  (2 bytes)
1000     1610 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ccc] <- 0x80d4cc0
1000     1611 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cc8] <- 0x80d4cc0
1000     1612 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cc8
1000     1613 804c289: cmp eax, edx  (2 bytes)
1000     1614 804c28b: jne 804c280  (2 bytes)
1000     1615 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cd4] <- 0x80d4cc8
1000     1616 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cd0] <- 0x80d4cc8
1000     1617 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cd0
1000     1618 804c289: cmp eax, edx  (2 bytes)
1000     1619 804c28b: jne 804c280  (2 bytes)
1000     1620 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cdc] <- 0x80d4cd0
1000     1621 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cd8] <- 0x80d4cd0
1000     1622 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cd8
1000     1623 804c289: cmp eax, edx  (2 bytes)
1000     1624 804c28b: jne 804c280  (2 bytes)
1000     1625 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ce4] <- 0x80d4cd8
1000     1626 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ce0] <- 0x80d4cd8
1000     1627 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ce0
1000     1628 804c289: cmp eax, edx  (2 bytes)
1000     1629 804c28b: jne 804c280  (2 bytes)
1000     1630 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cec] <- 0x80d4ce0
1000     1631 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ce8] <- 0x80d4ce0
1000     1632 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ce8
1000     1633 804c289: cmp eax, edx  (2 bytes)
1000     1634 804c28b: jne 804c280  (2 bytes)
1000     1635 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cf4] <- 0x80d4ce8
1000     1636 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cf0] <- 0x80d4ce8
1000     1637 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cf0
1000     1638 804c289: cmp eax, edx  (2 bytes)
1000     1639 804c28b: jne 804c280  (2 bytes)
1000     1640 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4cfc] <- 0x80d4cf0
1000     1641 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4cf8] <- 0x80d4cf0
1000     1642 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4cf8
1000     1643 804c289: cmp eax, edx  (2 bytes)
1000     1644 804c28b: jne 804c280  (2 bytes)
1000     1645 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d04] <- 0x80d4cf8
1000     1646 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d00] <- 0x80d4cf8
1000     1647 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d00
1000     1648 804c289: cmp eax, edx  (2 bytes)
1000     1649 804c28b: jne 804c280  (2 bytes)
1000     1650 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d0c] <- 0x80d4d00
1000     1651 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d08] <- 0x80d4d00
1000     1652 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d08
1000     1653 804c289: cmp eax, edx  (2 bytes)
1000     1654 804c28b: jne 804c280  (2 bytes)
1000     1655 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d14] <- 0x80d4d08
1000     1656 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d10] <- 0x80d4d08
1000     1657 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d10
1000     1658 804c289: cmp eax, edx  (2 bytes)
1000     1659 804c28b: jne 804c280  (2 bytes)
1000     1660 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d1c] <- 0x80d4d10
1000     1661 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d18] <- 0x80d4d10
1000     1662 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d18
1000     1663 804c289: cmp eax, edx  (2 bytes)
1000     1664 804c28b: jne 804c280  (2 bytes)
1000     1665 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d24] <- 0x80d4d18
1000     1666 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d20] <- 0x80d4d18
1000     1667 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d20
1000     1668 804c289: cmp eax, edx  (2 bytes)
1000     1669 804c28b: jne 804c280  (2 bytes)
1000     1670 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d2c] <- 0x80d4d20
1000     1671 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d28] <- 0x80d4d20
1000     1672 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d28
1000     1673 804c289: cmp eax, edx  (2 bytes)
1000     1674 804c28b: jne 804c280  (2 bytes)
1000     1675 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d34] <- 0x80d4d28
1000     1676 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d30] <- 0x80d4d28
1000     1677 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d30
1000     1678 804c289: cmp eax, edx  (2 bytes)
1000     1679 804c28b: jne 804c280  (2 bytes)
1000     1680 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d3c] <- 0x80d4d30
1000     1681 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d38] <- 0x80d4d30
1000     1682 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d38
1000     1683 804c289: cmp eax, edx  (2 bytes)
1000     1684 804c28b: jne 804c280  (2 bytes)
1000     1685 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d44] <- 0x80d4d38
1000     1686 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d40] <- 0x80d4d38
1000     1687 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d40
1000     1688 804c289: cmp eax, edx  (2 bytes)
1000     1689 804c28b: jne 804c280  (2 bytes)
1000     1690 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d4c] <- 0x80d4d40
1000     1691 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d48] <- 0x80d4d40
1000     1692 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d48
1000     1693 804c289: cmp eax, edx  (2 bytes)
1000     1694 804c28b: jne 804c280  (2 bytes)
1000     1695 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d54] <- 0x80d4d48
1000     1696 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d50] <- 0x80d4d48
1000     1697 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d50
1000     1698 804c289: cmp eax, edx  (2 bytes)
1000     1699 804c28b: jne 804c280  (2 bytes)
1000     1700 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d5c] <- 0x80d4d50
1000     1701 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d58] <- 0x80d4d50
1000     1702 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d58
1000     1703 804c289: cmp eax, edx  (2 bytes)
1000     1704 804c28b: jne 804c280  (2 bytes)
1000     1705 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d64] <- 0x80d4d58
1000     1706 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d60] <- 0x80d4d58
1000     1707 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d60
1000     1708 804c289: cmp eax, edx  (2 bytes)
1000     1709 804c28b: jne 804c280  (2 bytes)
1000     1710 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d6c] <- 0x80d4d60
1000     1711 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d68] <- 0x80d4d60
1000     1712 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d68
1000     1713 804c289: cmp eax, edx  (2 bytes)
1000     1714 804c28b: jne 804c280  (2 bytes)
1000     1715 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d74] <- 0x80d4d68
1000     1716 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d70] <- 0x80d4d68
1000     1717 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d70
1000     1718 804c289: cmp eax, edx  (2 bytes)
1000     1719 804c28b: jne 804c280  (2 bytes)
1000     1720 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d7c] <- 0x80d4d70
1000     1721 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d78] <- 0x80d4d70
1000     1722 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d78
1000     1723 804c289: cmp eax, edx  (2 bytes)
1000     1724 804c28b: jne 804c280  (2 bytes)
1000     1725 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d84] <- 0x80d4d78
1000     1726 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d80] <- 0x80d4d78
1000     1727 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d80
1000     1728 804c289: cmp eax, edx  (2 bytes)
1000     1729 804c28b: jne 804c280  (2 bytes)
1000     1730 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d8c] <- 0x80d4d80
1000     1731 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d88] <- 0x80d4d80
1000     1732 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d88
1000     1733 804c289: cmp eax, edx  (2 bytes)
1000     1734 804c28b: jne 804c280  (2 bytes)
1000     1735 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d94] <- 0x80d4d88
1000     1736 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d90] <- 0x80d4d88
1000     1737 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d90
1000     1738 804c289: cmp eax, edx  (2 bytes)
1000     1739 804c28b: jne 804c280  (2 bytes)
1000     1740 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4d9c] <- 0x80d4d90
1000     1741 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4d98] <- 0x80d4d90
1000     1742 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4d98
1000     1743 804c289: cmp eax, edx  (2 bytes)
1000     1744 804c28b: jne 804c280  (2 bytes)
1000     1745 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4da4] <- 0x80d4d98
1000     1746 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4da0] <- 0x80d4d98
1000     1747 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4da0
1000     1748 804c289: cmp eax, edx  (2 bytes)
1000     1749 804c28b: jne 804c280  (2 bytes)
1000     1750 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dac] <- 0x80d4da0
1000     1751 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4da8] <- 0x80d4da0
1000     1752 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4da8
1000     1753 804c289: cmp eax, edx  (2 bytes)
1000     1754 804c28b: jne 804c280  (2 bytes)
1000     1755 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4db4] <- 0x80d4da8
1000     1756 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4db0] <- 0x80d4da8
1000     1757 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4db0
1000     1758 804c289: cmp eax, edx  (2 bytes)
1000     1759 804c28b: jne 804c280  (2 bytes)
1000     1760 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dbc] <- 0x80d4db0
1000     1761 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4db8] <- 0x80d4db0
1000     1762 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4db8
1000     1763 804c289: cmp eax, edx  (2 bytes)
1000     1764 804c28b: jne 804c280  (2 bytes)
1000     1765 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dc4] <- 0x80d4db8
1000     1766 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4dc0] <- 0x80d4db8
1000     1767 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4dc0
1000     1768 804c289: cmp eax, edx  (2 bytes)
1000     1769 804c28b: jne 804c280  (2 bytes)
1000     1770 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dcc] <- 0x80d4dc0
1000     1771 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4dc8] <- 0x80d4dc0
1000     1772 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4dc8
1000     1773 804c289: cmp eax, edx  (2 bytes)
1000     1774 804c28b: jne 804c280  (2 bytes)
1000     1775 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dd4] <- 0x80d4dc8
1000     1776 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4dd0] <- 0x80d4dc8
1000     1777 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4dd0
1000     1778 804c289: cmp eax, edx  (2 bytes)
1000     1779 804c28b: jne 804c280  (2 bytes)
1000     1780 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ddc] <- 0x80d4dd0
1000     1781 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4dd8] <- 0x80d4dd0
1000     1782 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4dd8
1000     1783 804c289: cmp eax, edx  (2 bytes)
1000     1784 804c28b: jne 804c280  (2 bytes)
1000     1785 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4de4] <- 0x80d4dd8
1000     1786 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4de0] <- 0x80d4dd8
1000     1787 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4de0
1000     1788 804c289: cmp eax, edx  (2 bytes)
1000     1789 804c28b: jne 804c280  (2 bytes)
1000     1790 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dec] <- 0x80d4de0
1000     1791 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4de8] <- 0x80d4de0
1000     1792 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4de8
1000     1793 804c289: cmp eax, edx  (2 bytes)
1000     1794 804c28b: jne 804c280  (2 bytes)
1000     1795 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4df4] <- 0x80d4de8
1000     1796 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4df0] <- 0x80d4de8
1000     1797 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4df0
1000     1798 804c289: cmp eax, edx  (2 bytes)
1000     1799 804c28b: jne 804c280  (2 bytes)
1000     1800 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4dfc] <- 0x80d4df0
1000     1801 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4df8] <- 0x80d4df0
1000     1802 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4df8
1000     1803 804c289: cmp eax, edx  (2 bytes)
1000     1804 804c28b: jne 804c280  (2 bytes)
1000     1805 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e04] <- 0x80d4df8
1000     1806 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e00] <- 0x80d4df8
1000     1807 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e00
1000     1808 804c289: cmp eax, edx  (2 bytes)
1000     1809 804c28b: jne 804c280  (2 bytes)
1000     1810 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e0c] <- 0x80d4e00
1000     1811 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e08] <- 0x80d4e00
1000     1812 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e08
1000     1813 804c289: cmp eax, edx  (2 bytes)
1000     1814 804c28b: jne 804c280  (2 bytes)
1000     1815 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e14] <- 0x80d4e08
1000     1816 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e10] <- 0x80d4e08
1000     1817 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e10
1000     1818 804c289: cmp eax, edx  (2 bytes)
1000     1819 804c28b: jne 804c280  (2 bytes)
1000     1820 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e1c] <- 0x80d4e10
1000     1821 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e18] <- 0x80d4e10
1000     1822 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e18
1000     1823 804c289: cmp eax, edx  (2 bytes)
1000     1824 804c28b: jne 804c280  (2 bytes)
1000     1825 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e24] <- 0x80d4e18
1000     1826 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e20] <- 0x80d4e18
1000     1827 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e20
1000     1828 804c289: cmp eax, edx  (2 bytes)
1000     1829 804c28b: jne 804c280  (2 bytes)
1000     1830 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e2c] <- 0x80d4e20
1000     1831 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e28] <- 0x80d4e20
1000     1832 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e28
1000     1833 804c289: cmp eax, edx  (2 bytes)
1000     1834 804c28b: jne 804c280  (2 bytes)
1000     1835 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e34] <- 0x80d4e28
1000     1836 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e30] <- 0x80d4e28
1000     1837 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e30
1000     1838 804c289: cmp eax, edx  (2 bytes)
1000     1839 804c28b: jne 804c280  (2 bytes)
1000     1840 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e3c] <- 0x80d4e30
1000     1841 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e38] <- 0x80d4e30
1000     1842 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e38
1000     1843 804c289: cmp eax, edx  (2 bytes)
1000     1844 804c28b: jne 804c280  (2 bytes)
1000     1845 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e44] <- 0x80d4e38
1000     1846 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e40] <- 0x80d4e38
1000     1847 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e40
1000     1848 804c289: cmp eax, edx  (2 bytes)
1000     1849 804c28b: jne 804c280  (2 bytes)
1000     1850 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e4c] <- 0x80d4e40
1000     1851 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e48] <- 0x80d4e40
1000     1852 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e48
1000     1853 804c289: cmp eax, edx  (2 bytes)
1000     1854 804c28b: jne 804c280  (2 bytes)
1000     1855 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e54] <- 0x80d4e48
1000     1856 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e50] <- 0x80d4e48
1000     1857 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e50
1000     1858 804c289: cmp eax, edx  (2 bytes)
1000     1859 804c28b: jne 804c280  (2 bytes)
1000     1860 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e5c] <- 0x80d4e50
1000     1861 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e58] <- 0x80d4e50
1000     1862 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e58
1000     1863 804c289: cmp eax, edx  (2 bytes)
1000     1864 804c28b: jne 804c280  (2 bytes)
1000     1865 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e64] <- 0x80d4e58
1000     1866 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e60] <- 0x80d4e58
1000     1867 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e60
1000     1868 804c289: cmp eax, edx  (2 bytes)
1000     1869 804c28b: jne 804c280  (2 bytes)
1000     1870 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e6c] <- 0x80d4e60
1000     1871 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e68] <- 0x80d4e60
1000     1872 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e68
1000     1873 804c289: cmp eax, edx  (2 bytes)
1000     1874 804c28b: jne 804c280  (2 bytes)
1000     1875 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e74] <- 0x80d4e68
1000     1876 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e70] <- 0x80d4e68
1000     1877 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e70
1000     1878 804c289: cmp eax, edx  (2 bytes)
1000     1879 804c28b: jne 804c280  (2 bytes)
1000     1880 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e7c] <- 0x80d4e70
1000     1881 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e78] <- 0x80d4e70
1000     1882 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e78
1000     1883 804c289: cmp eax, edx  (2 bytes)
1000     1884 804c28b: jne 804c280  (2 bytes)
1000     1885 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e84] <- 0x80d4e78
1000     1886 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e80] <- 0x80d4e78
1000     1887 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e80
1000     1888 804c289: cmp eax, edx  (2 bytes)
1000     1889 804c28b: jne 804c280  (2 bytes)
1000     1890 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e8c] <- 0x80d4e80
1000     1891 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e88] <- 0x80d4e80
1000     1892 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e88
1000     1893 804c289: cmp eax, edx  (2 bytes)
1000     1894 804c28b: jne 804c280  (2 bytes)
1000     1895 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e94] <- 0x80d4e88
1000     1896 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e90] <- 0x80d4e88
1000     1897 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e90
1000     1898 804c289: cmp eax, edx  (2 bytes)
1000     1899 804c28b: jne 804c280  (2 bytes)
1000     1900 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4e9c] <- 0x80d4e90
1000     1901 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4e98] <- 0x80d4e90
1000     1902 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4e98
1000     1903 804c289: cmp eax, edx  (2 bytes)
1000     1904 804c28b: jne 804c280  (2 bytes)
1000     1905 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ea4] <- 0x80d4e98
1000     1906 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ea0] <- 0x80d4e98
1000     1907 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ea0
1000     1908 804c289: cmp eax, edx  (2 bytes)
1000     1909 804c28b: jne 804c280  (2 bytes)
1000     1910 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4eac] <- 0x80d4ea0
1000     1911 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ea8] <- 0x80d4ea0
1000     1912 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ea8
1000     1913 804c289: cmp eax, edx  (2 bytes)
1000     1914 804c28b: jne 804c280  (2 bytes)
1000     1915 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4eb4] <- 0x80d4ea8
1000     1916 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4eb0] <- 0x80d4ea8
1000     1917 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4eb0
1000     1918 804c289: cmp eax, edx  (2 bytes)
1000     1919 804c28b: jne 804c280  (2 bytes)
1000     1920 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ebc] <- 0x80d4eb0
1000     1921 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4eb8] <- 0x80d4eb0
1000     1922 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4eb8
1000     1923 804c289: cmp eax, edx  (2 bytes)
1000     1924 804c28b: jne 804c280  (2 bytes)
1000     1925 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ec4] <- 0x80d4eb8
1000     1926 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ec0] <- 0x80d4eb8
1000     1927 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ec0
1000     1928 804c289: cmp eax, edx  (2 bytes)
1000     1929 804c28b: jne 804c280  (2 bytes)
1000     1930 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ecc] <- 0x80d4ec0
1000     1931 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ec8] <- 0x80d4ec0
1000     1932 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ec8
1000     1933 804c289: cmp eax, edx  (2 bytes)
1000     1934 804c28b: jne 804c280  (2 bytes)
1000     1935 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ed4] <- 0x80d4ec8
1000     1936 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ed0] <- 0x80d4ec8
1000     1937 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ed0
1000     1938 804c289: cmp eax, edx  (2 bytes)
1000     1939 804c28b: jne 804c280  (2 bytes)
1000     1940 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4edc] <- 0x80d4ed0
1000     1941 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ed8] <- 0x80d4ed0
1000     1942 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ed8
1000     1943 804c289: cmp eax, edx  (2 bytes)
1000     1944 804c28b: jne 804c280  (2 bytes)
1000     1945 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ee4] <- 0x80d4ed8
1000     1946 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ee0] <- 0x80d4ed8
1000     1947 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ee0
1000     1948 804c289: cmp eax, edx  (2 bytes)
1000     1949 804c28b: jne 804c280  (2 bytes)
1000     1950 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4eec] <- 0x80d4ee0
1000     1951 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ee8] <- 0x80d4ee0
1000     1952 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ee8
1000     1953 804c289: cmp eax, edx  (2 bytes)
1000     1954 804c28b: jne 804c280  (2 bytes)
1000     1955 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ef4] <- 0x80d4ee8
1000     1956 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ef0] <- 0x80d4ee8
1000     1957 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ef0
1000     1958 804c289: cmp eax, edx  (2 bytes)
1000     1959 804c28b: jne 804c280  (2 bytes)
1000     1960 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4efc] <- 0x80d4ef0
1000     1961 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ef8] <- 0x80d4ef0
1000     1962 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ef8
1000     1963 804c289: cmp eax, edx  (2 bytes)
1000     1964 804c28b: jne 804c280  (2 bytes)
1000     1965 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f04] <- 0x80d4ef8
1000     1966 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f00] <- 0x80d4ef8
1000     1967 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f00
1000     1968 804c289: cmp eax, edx  (2 bytes)
1000     1969 804c28b: jne 804c280  (2 bytes)
1000     1970 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f0c] <- 0x80d4f00
1000     1971 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f08] <- 0x80d4f00
1000     1972 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f08
1000     1973 804c289: cmp eax, edx  (2 bytes)
1000     1974 804c28b: jne 804c280  (2 bytes)
1000     1975 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f14] <- 0x80d4f08
1000     1976 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f10] <- 0x80d4f08
1000     1977 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f10
1000     1978 804c289: cmp eax, edx  (2 bytes)
1000     1979 804c28b: jne 804c280  (2 bytes)
1000     1980 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f1c] <- 0x80d4f10
1000     1981 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f18] <- 0x80d4f10
1000     1982 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f18
1000     1983 804c289: cmp eax, edx  (2 bytes)
1000     1984 804c28b: jne 804c280  (2 bytes)
1000     1985 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f24] <- 0x80d4f18
1000     1986 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f20] <- 0x80d4f18
1000     1987 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f20
1000     1988 804c289: cmp eax, edx  (2 bytes)
1000     1989 804c28b: jne 804c280  (2 bytes)
1000     1990 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f2c] <- 0x80d4f20
1000     1991 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f28] <- 0x80d4f20
1000     1992 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f28
1000     1993 804c289: cmp eax, edx  (2 bytes)
1000     1994 804c28b: jne 804c280  (2 bytes)
1000     1995 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f34] <- 0x80d4f28
1000     1996 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f30] <- 0x80d4f28
1000     1997 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f30
1000     1998 804c289: cmp eax, edx  (2 bytes)
1000     1999 804c28b: jne 804c280  (2 bytes)
1000     2000 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f3c] <- 0x80d4f30
1000     2001 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f38] <- 0x80d4f30
1000     2002 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f38
1000     2003 804c289: cmp eax, edx  (2 bytes)
1000     2004 804c28b: jne 804c280  (2 bytes)
1000     2005 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f44] <- 0x80d4f38
1000     2006 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f40] <- 0x80d4f38
1000     2007 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f40
1000     2008 804c289: cmp eax, edx  (2 bytes)
1000     2009 804c28b: jne 804c280  (2 bytes)
1000     2010 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f4c] <- 0x80d4f40
1000     2011 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f48] <- 0x80d4f40
1000     2012 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f48
1000     2013 804c289: cmp eax, edx  (2 bytes)
1000     2014 804c28b: jne 804c280  (2 bytes)
1000     2015 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f54] <- 0x80d4f48
1000     2016 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f50] <- 0x80d4f48
1000     2017 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f50
1000     2018 804c289: cmp eax, edx  (2 bytes)
1000     2019 804c28b: jne 804c280  (2 bytes)
1000     2020 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f5c] <- 0x80d4f50
1000     2021 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f58] <- 0x80d4f50
1000     2022 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f58
1000     2023 804c289: cmp eax, edx  (2 bytes)
1000     2024 804c28b: jne 804c280  (2 bytes)
1000     2025 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f64] <- 0x80d4f58
1000     2026 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f60] <- 0x80d4f58
1000     2027 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f60
1000     2028 804c289: cmp eax, edx  (2 bytes)
1000     2029 804c28b: jne 804c280  (2 bytes)
1000     2030 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f6c] <- 0x80d4f60
1000     2031 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f68] <- 0x80d4f60
1000     2032 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f68
1000     2033 804c289: cmp eax, edx  (2 bytes)
1000     2034 804c28b: jne 804c280  (2 bytes)
1000     2035 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f74] <- 0x80d4f68
1000     2036 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f70] <- 0x80d4f68
1000     2037 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f70
1000     2038 804c289: cmp eax, edx  (2 bytes)
1000     2039 804c28b: jne 804c280  (2 bytes)
1000     2040 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f7c] <- 0x80d4f70
1000     2041 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f78] <- 0x80d4f70
1000     2042 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f78
1000     2043 804c289: cmp eax, edx  (2 bytes)
1000     2044 804c28b: jne 804c280  (2 bytes)
1000     2045 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f84] <- 0x80d4f78
1000     2046 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f80] <- 0x80d4f78
1000     2047 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f80
1000     2048 804c289: cmp eax, edx  (2 bytes)
1000     2049 804c28b: jne 804c280  (2 bytes)
1000     2050 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f8c] <- 0x80d4f80
1000     2051 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f88] <- 0x80d4f80
1000     2052 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f88
1000     2053 804c289: cmp eax, edx  (2 bytes)
1000     2054 804c28b: jne 804c280  (2 bytes)
1000     2055 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f94] <- 0x80d4f88
1000     2056 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f90] <- 0x80d4f88
1000     2057 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f90
1000     2058 804c289: cmp eax, edx  (2 bytes)
1000     2059 804c28b: jne 804c280  (2 bytes)
1000     2060 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4f9c] <- 0x80d4f90
1000     2061 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4f98] <- 0x80d4f90
1000     2062 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4f98
1000     2063 804c289: cmp eax, edx  (2 bytes)
1000     2064 804c28b: jne 804c280  (2 bytes)
1000     2065 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fa4] <- 0x80d4f98
1000     2066 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fa0] <- 0x80d4f98
1000     2067 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fa0
1000     2068 804c289: cmp eax, edx  (2 bytes)
1000     2069 804c28b: jne 804c280  (2 bytes)
1000     2070 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fac] <- 0x80d4fa0
1000     2071 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fa8] <- 0x80d4fa0
1000     2072 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fa8
1000     2073 804c289: cmp eax, edx  (2 bytes)
1000     2074 804c28b: jne 804c280  (2 bytes)
1000     2075 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fb4] <- 0x80d4fa8
1000     2076 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fb0] <- 0x80d4fa8
1000     2077 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fb0
1000     2078 804c289: cmp eax, edx  (2 bytes)
1000     2079 804c28b: jne 804c280  (2 bytes)
1000     2080 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fbc] <- 0x80d4fb0
1000     2081 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fb8] <- 0x80d4fb0
1000     2082 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fb8
1000     2083 804c289: cmp eax, edx  (2 bytes)
1000     2084 804c28b: jne 804c280  (2 bytes)
1000     2085 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fc4] <- 0x80d4fb8
1000     2086 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fc0] <- 0x80d4fb8
1000     2087 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fc0
1000     2088 804c289: cmp eax, edx  (2 bytes)
1000     2089 804c28b: jne 804c280  (2 bytes)
1000     2090 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fcc] <- 0x80d4fc0
1000     2091 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fc8] <- 0x80d4fc0
1000     2092 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fc8
1000     2093 804c289: cmp eax, edx  (2 bytes)
1000     2094 804c28b: jne 804c280  (2 bytes)
1000     2095 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fd4] <- 0x80d4fc8
1000     2096 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fd0] <- 0x80d4fc8
1000     2097 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fd0
1000     2098 804c289: cmp eax, edx  (2 bytes)
1000     2099 804c28b: jne 804c280  (2 bytes)
1000     2100 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fdc] <- 0x80d4fd0
1000     2101 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fd8] <- 0x80d4fd0
1000     2102 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fd8
1000     2103 804c289: cmp eax, edx  (2 bytes)
1000     2104 804c28b: jne 804c280  (2 bytes)
1000     2105 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fe4] <- 0x80d4fd8
1000     2106 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fe0] <- 0x80d4fd8
1000     2107 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fe0
1000     2108 804c289: cmp eax, edx  (2 bytes)
1000     2109 804c28b: jne 804c280  (2 bytes)
1000     2110 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4fec] <- 0x80d4fe0
1000     2111 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4fe8] <- 0x80d4fe0
1000     2112 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4fe8
1000     2113 804c289: cmp eax, edx  (2 bytes)
1000     2114 804c28b: jne 804c280  (2 bytes)
1000     2115 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ff4] <- 0x80d4fe8
1000     2116 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ff0] <- 0x80d4fe8
1000     2117 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ff0
1000     2118 804c289: cmp eax, edx  (2 bytes)
1000     2119 804c28b: jne 804c280  (2 bytes)
1000     2120 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d4ffc] <- 0x80d4ff0
1000     2121 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d4ff8] <- 0x80d4ff0
1000     2122 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d4ff8
1000     2123 804c289: cmp eax, edx  (2 bytes)
1000     2124 804c28b: jne 804c280  (2 bytes)
1000     2125 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5004] <- 0x80d4ff8
1000     2126 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5000] <- 0x80d4ff8
1000     2127 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5000
1000     2128 804c289: cmp eax, edx  (2 bytes)
1000     2129 804c28b: jne 804c280  (2 bytes)
1000     2130 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d500c] <- 0x80d5000
1000     2131 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5008] <- 0x80d5000
1000     2132 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5008
1000     2133 804c289: cmp eax, edx  (2 bytes)
1000     2134 804c28b: jne 804c280  (2 bytes)
1000     2135 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5014] <- 0x80d5008
1000     2136 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5010] <- 0x80d5008
1000     2137 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5010
1000     2138 804c289: cmp eax, edx  (2 bytes)
1000     2139 804c28b: jne 804c280  (2 bytes)
1000     2140 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d501c] <- 0x80d5010
1000     2141 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5018] <- 0x80d5010
1000     2142 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5018
1000     2143 804c289: cmp eax, edx  (2 bytes)
1000     2144 804c28b: jne 804c280  (2 bytes)
1000     2145 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5024] <- 0x80d5018
1000     2146 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5020] <- 0x80d5018
1000     2147 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5020
1000     2148 804c289: cmp eax, edx  (2 bytes)
1000     2149 804c28b: jne 804c280  (2 bytes)
1000     2150 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d502c] <- 0x80d5020
1000     2151 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5028] <- 0x80d5020
1000     2152 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5028
1000     2153 804c289: cmp eax, edx  (2 bytes)
1000     2154 804c28b: jne 804c280  (2 bytes)
1000     2155 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5034] <- 0x80d5028
1000     2156 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5030] <- 0x80d5028
1000     2157 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5030
1000     2158 804c289: cmp eax, edx  (2 bytes)
1000     2159 804c28b: jne 804c280  (2 bytes)
1000     2160 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d503c] <- 0x80d5030
1000     2161 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5038] <- 0x80d5030
1000     2162 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5038
1000     2163 804c289: cmp eax, edx  (2 bytes)
1000     2164 804c28b: jne 804c280  (2 bytes)
1000     2165 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5044] <- 0x80d5038
1000     2166 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5040] <- 0x80d5038
1000     2167 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5040
1000     2168 804c289: cmp eax, edx  (2 bytes)
1000     2169 804c28b: jne 804c280  (2 bytes)
1000     2170 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d504c] <- 0x80d5040
1000     2171 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5048] <- 0x80d5040
1000     2172 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5048
1000     2173 804c289: cmp eax, edx  (2 bytes)
1000     2174 804c28b: jne 804c280  (2 bytes)
1000     2175 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5054] <- 0x80d5048
1000     2176 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5050] <- 0x80d5048
1000     2177 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5050
1000     2178 804c289: cmp eax, edx  (2 bytes)
1000     2179 804c28b: jne 804c280  (2 bytes)
1000     2180 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d505c] <- 0x80d5050
1000     2181 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5058] <- 0x80d5050
1000     2182 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5058
1000     2183 804c289: cmp eax, edx  (2 bytes)
1000     2184 804c28b: jne 804c280  (2 bytes)
1000     2185 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5064] <- 0x80d5058
1000     2186 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5060] <- 0x80d5058
1000     2187 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5060
1000     2188 804c289: cmp eax, edx  (2 bytes)
1000     2189 804c28b: jne 804c280  (2 bytes)
1000     2190 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d506c] <- 0x80d5060
1000     2191 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5068] <- 0x80d5060
1000     2192 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5068
1000     2193 804c289: cmp eax, edx  (2 bytes)
1000     2194 804c28b: jne 804c280  (2 bytes)
1000     2195 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5074] <- 0x80d5068
1000     2196 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5070] <- 0x80d5068
1000     2197 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5070
1000     2198 804c289: cmp eax, edx  (2 bytes)
1000     2199 804c28b: jne 804c280  (2 bytes)
1000     2200 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d507c] <- 0x80d5070
1000     2201 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5078] <- 0x80d5070
1000     2202 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5078
1000     2203 804c289: cmp eax, edx  (2 bytes)
1000     2204 804c28b: jne 804c280  (2 bytes)
1000     2205 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5084] <- 0x80d5078
1000     2206 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5080] <- 0x80d5078
1000     2207 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5080
1000     2208 804c289: cmp eax, edx  (2 bytes)
1000     2209 804c28b: jne 804c280  (2 bytes)
1000     2210 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d508c] <- 0x80d5080
1000     2211 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5088] <- 0x80d5080
1000     2212 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5088
1000     2213 804c289: cmp eax, edx  (2 bytes)
1000     2214 804c28b: jne 804c280  (2 bytes)
1000     2215 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d5094] <- 0x80d5088
1000     2216 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5090] <- 0x80d5088
1000     2217 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5090
1000     2218 804c289: cmp eax, edx  (2 bytes)
1000     2219 804c28b: jne 804c280  (2 bytes)
1000     2220 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d509c] <- 0x80d5090
1000     2221 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d5098] <- 0x80d5090
1000     2222 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d5098
1000     2223 804c289: cmp eax, edx  (2 bytes)
1000     2224 804c28b: jne 804c280  (2 bytes)
1000     2225 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d50a4] <- 0x80d5098
1000     2226 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d50a0] <- 0x80d5098
1000     2227 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d50a0
1000     2228 804c289: cmp eax, edx  (2 bytes)
1000     2229 804c28b: jne 804c280  (2 bytes)
1000     2230 804c280: mov DWORD PTR [eax+0xc], eax  (3 bytes)  [0x80d50ac] <- 0x80d50a0
1000     2231 804c283: mov DWORD PTR [eax+0x8], eax  (3 bytes)  [0x80d50a8] <- 0x80d50a0
1000     2232 804c286: add eax, 0x8  (3 bytes)  eax <- 0x80d50a8
1000     2233 804c289: cmp eax, edx  (2 bytes)
1000     2234 804c28b: jne 804c280  (2 bytes)
1000     2235 804c28d: cmp DWORD PTR [ebp-0x20], 0x80d4c80  (7 bytes)  [0xfffdfde0]=0x80d4c80
1000     2236 804c294: je 804c2b3  (2 bytes)
1000     2237 804c2b3: mov DWORD PTR ds:0x80d5110, 0x40  (10 bytes)  [0x80d5110] <- 0x40
1000     2238 804c2bd: mov eax, ds:0x80d4c84  (5 bytes)  eax <- 0x0
1000     2239 804c2c2: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfde0]=0x80d4c80  edx <- 0x80d4c80
1000     2240 804c2c5: jmp 804c2a2  (2 bytes)
1000     2241 804c2a2: or eax, 0x1  (3 bytes)  eax <- 0x1
1000     2242 804c2a5: mov DWORD PTR [edx+0x30], ecx  (3 bytes)  [0x80d4cb0] <- 0x80d4cb0
1000     2243 804c2a8: mov DWORD PTR [edx+0x4], eax  (3 bytes)  [0x80d4c84] <- 0x1
1000     2244 804c2ab: add esp, 0x20  (3 bytes)  esp <- 0xfffdfdf4
1000     2245 804c2ae: pop ebx  (1 bytes)  ebx <- 0x0
1000     2246 804c2af: pop esi  (1 bytes)  esi <- 0x80d4c80
1000     2247 804c2b0: pop edi  (1 bytes)  edi <- 0x10
1000     2248 804c2b1: leave  (1 bytes)  ebp <- 0xfffdfe7c
1000     2249 804c2b2: ret  (1 bytes)
1000     2250 804f0b5: lea eax, [esi+0x30]  (3 bytes)  eax <- 0x80d4cb0
1000     2251 804f0b8: mov edx, edi  (2 bytes)  edx <- 0x10
1000     2252 804f0ba: lea ecx, [edi+0x10]  (3 bytes)  ecx <- 0x20
1000     2253 804f0bd: shr edx, 0x3  (3 bytes)  edx <- 0x2
1000     2254 804f0c0: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdfe6c] <- 0x80d4c80
1000     2255 804f0c3: mov DWORD PTR [ebp-0x38], eax  (3 bytes)  [0xfffdfe44] <- 0x80d4cb0
1000     2256 804f0c6: mov DWORD PTR [ebp-0x40], edx  (3 bytes)  [0xfffdfe3c] <- 0x2
1000     2257 804f0c9: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdfe40] <- 0x20
1000     2258 804f0cc: mov DWORD PTR [ebp-0x1c], edi  (3 bytes)  [0xfffdfe60] <- 0x10
1000     2259 804f0cf: mov esi, eax  (2 bytes)  esi <- 0x80d4cb0
1000     2260 804f0d1: mov DWORD PTR [ebp-0x18], 0x0  (7 bytes)  [0xfffdfe64] <- 0x0
1000     2261 804f0d8: mov ebx, DWORD PTR [esi+0xc]  (3 bytes)  [0x80d4cbc]=0x80d4cb0  ebx <- 0x80d4cb0
1000     2262 804f0db: cmp esi, ebx  (2 bytes)
1000     2263 804f0dd: je 804f17e  (6 bytes)
1000     2264 804f17e: cmp DWORD PTR [ebp-0x1c], 0x1ff  (7 bytes)  [0xfffdfe60]=0x10
1000     2265 804f185: jbe 804f1a4  (2 bytes)
1000     2266 804f1a4: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe50]=0x2  eax <- 0x2
1000     2267 804f1a7: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe58]=0x80d4cb8  edx <- 0x80d4cb8
1000     2268 804f1aa: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d4c80  edi <- 0x80d4c80
1000     2269 804f1ad: lea ebx, [edx+eax*8-0x8]  (4 bytes)  ebx <- 0x80d4cc0
1000     2270 804f1b1: mov ecx, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe50]=0x2  ecx <- 0x2
1000     2271 804f1b4: inc ecx  (1 bytes)  ecx <- 0x3
1000     2272 804f1b5: mov eax, ecx  (2 bytes)  eax <- 0x3
1000     2273 804f1b7: and ecx, 0x1f  (3 bytes)  ecx <- 0x3
1000     2274 804f1ba: shr eax, 0x5  (3 bytes)  eax <- 0x0
1000     2275 804f1bd: mov edx, DWORD PTR [edi+eax*4+0x430]  (7 bytes)  [0x80d50b0]=0x0  edx <- 0x0
1000     2276 804f1c4: mov edi, 0x1  (5 bytes)  edi <- 0x1
1000     2277 804f1c9: shl edi, cl  (2 bytes)  edi <- 0x8
1000     2278 804f1cb: mov ecx, edi  (2 bytes)  ecx <- 0x8
1000     2279 804f1cd: test ecx, ecx  (2 bytes)
1000     2280 804f1cf: je 804f1d5  (2 bytes)
1000     2281 804f1d1: cmp ecx, edx  (2 bytes)
1000     2282 804f1d3: jbe 804f204  (2 bytes)
1000     2283 804f1d5: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d4c80  edx <- 0x80d4c80
1000     2284 804f1d8: lea ecx, [edx+eax*4+0x434]  (7 bytes)  ecx <- 0x80d50b4
1000     2285 804f1df: nop  (1 bytes)
1000     2286 804f1e0: inc eax  (1 bytes)  eax <- 0x1
1000     2287 804f1e1: cmp eax, 0x3  (3 bytes)
1000     2288 804f1e4: ja 804f668  (6 bytes)
1000     2289 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b4]=0x0  edx <- 0x0
1000     2290 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50b8
1000     2291 804f1ef: test edx, edx  (2 bytes)
1000     2292 804f1f1: je 804f1e0  (2 bytes)
1000     2293 804f1e0: inc eax  (1 bytes)  eax <- 0x2
1000     2294 804f1e1: cmp eax, 0x3  (3 bytes)
1000     2295 804f1e4: ja 804f668  (6 bytes)
1000     2296 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b8]=0x0  edx <- 0x0
1000     2297 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50bc
1000     2298 804f1ef: test edx, edx  (2 bytes)
1000     2299 804f1f1: je 804f1e0  (2 bytes)
1000     2300 804f1e0: inc eax  (1 bytes)  eax <- 0x3
1000     2301 804f1e1: cmp eax, 0x3  (3 bytes)
1000     2302 804f1e4: ja 804f668  (6 bytes)
1000     2303 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50bc]=0x0  edx <- 0x0
1000     2304 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50c0
1000     2305 804f1ef: test edx, edx  (2 bytes)
1000     2306 804f1f1: je 804f1e0  (2 bytes)
1000     2307 804f1e0: inc eax  (1 bytes)  eax <- 0x4
1000     2308 804f1e1: cmp eax, 0x3  (3 bytes)
1000     2309 804f1e4: ja 804f668  (6 bytes)
1000     2310 804f668: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d4c80  eax <- 0x80d4c80
1000     2311 804f66b: mov ebx, DWORD PTR [eax+0x30]  (3 bytes)  [0x80d4cb0]=0x80d4cb0  ebx <- 0x80d4cb0
1000     2312 804f66e: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d4cb4]=0x0  eax <- 0x0
1000     2313 804f671: mov edx, eax  (2 bytes)  edx <- 0x0
1000     2314 804f673: and edx, 0xf8  (3 bytes)  edx <- 0x0
1000     2315 804f676: cmp edx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdfe40]=0x20
1000     2316 804f679: jae 804fb29  (6 bytes)
1000     2317 804f67f: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d4c80  edi <- 0x80d4c80
1000     2318 804f682: test BYTE PTR [edi+0x4], 0x1  (4 bytes)  [0x80d4c84]=0x1
1000     2319 804f686: jne 804f8f1  (6 bytes)
1000     2320 804f8f1: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe64] <- 0x0
1000     2321 804f8f4: mov edi, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe60]=0x10  edi <- 0x10
1000     2322 804f8f7: mov edx, DWORD PTR ds:0x80d50fc  (6 bytes)  [0x80d50fc]=0x1000  edx <- 0x1000
1000     2323 804f8fd: mov DWORD PTR [ebp-0x20], ebx  (3 bytes)  [0xfffdfe5c] <- 0x80d4cb0
1000     2324 804f900: dec edx  (1 bytes)  edx <- 0xfff
1000     2325 804f901: mov esi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d4c80  esi <- 0x80d4c80
1000     2326 804f904: mov DWORD PTR [ebp-0x24], edx  (3 bytes)  [0xfffdfe58] <- 0xfff
1000     2327 804f907: cmp edi, DWORD PTR ds:0x80d50e8  (6 bytes)  [0x80d50e8]=0x20000
1000     2328 804f90d: jb 804fab9  (6 bytes)
1000     2329 804fab9: mov BYTE PTR [ebp-0x10], 0x0  (4 bytes)  [0xfffdfe6c] <- 0x0
1000     2330 804fabd: jmp 804f94f  (5 bytes)
1000     2331 804f94f: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe64]=0x0  edx <- 0x0
1000     2332 804f952: add edx, ebx  (2 bytes)  edx <- 0x80d4cb0
1000     2333 804f954: cmp DWORD PTR [ebp-0x18], 0x0  (4 bytes)  [0xfffdfe64]=0x0
1000     2334 804f958: mov DWORD PTR [ebp-0x1c], edx  (3 bytes)  [0xfffdfe60] <- 0x80d4cb0
1000     2335 804f95b: setne BYTE PTR [ebp-0x30]  (4 bytes)  [0xfffdfe4c] <- 0x0
1000     2336 804f95f: je 804f9b0  (2 bytes)
1000     2337 804f9b0: cmp ebx, DWORD PTR [ebp-0x38]  (3 bytes)  [0xfffdfe44]=0x80d4cb0
1000     2338 804f9b3: jne 804f961  (2 bytes)
1000     2339 804f9b5: mov ecx, DWORD PTR [esi+0x4]  (3 bytes)  [0x80d4c84]=0x1  ecx <- 0x1
1000     2340 804f9b8: test cl, 0x1  (3 bytes)
1000     2341 804f9bb: je 805004f  (6 bytes)
1000     2342 804f9c1: cmp esi, 0x80d4c80  (6 bytes)
1000     2343 804f9c7: je 804fd57  (6 bytes)
1000     2344 804fd57: mov eax, ds:0x80d50e4  (5 bytes)  eax <- 0x20000
1000     2345 804fd5c: and cl, 0x2  (3 bytes)  cl <- 0x0
1000     2346 804fd5f: lea eax, [edi+eax+0x10]  (4 bytes)  eax <- 0x20020
1000     2347 804fd63: mov edx, eax  (2 bytes)  edx <- 0x20020
1000     2348 804fd65: jne 804fd6a  (2 bytes)
1000     2349 804fd67: sub edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe64]=0x0  edx <- 0x20020
1000     2350 804fd6a: add edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe58]=0xfff  edx <- 0x2101f
1000     2351 804fd6d: mov eax, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe58]=0xfff  eax <- 0xfff
1000     2352 804fd70: not eax  (2 bytes)  eax <- 0xfffff000
1000     2353 804fd72: and edx, eax  (2 bytes)  edx <- 0x21000
1000     2354 804fd74: mov DWORD PTR [ebp-0x28], eax  (3 bytes)  [0xfffdfe54] <- 0xfffff000
1000     2355 804fd77: mov ecx, edx  (2 bytes)  ecx <- 0x21000
1000     2356 804fd79: test edx, edx  (2 bytes)
1000     2357 804fd7b: jle 804ffc0  (6 bytes)
1000     2358 804fd81: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdfe08] <- 0x21000
1000     2359 804fd84: mov DWORD PTR [ebp-0x48], edx  (3 bytes)  [0xfffdfe34] <- 0x21000
1000     2360 804fd87: mov DWORD PTR [ebp-0x44], edx  (3 bytes)  [0xfffdfe38] <- 0x21000
1000     2361 804fd8a: call DWORD PTR ds:0x80d4048  (6 bytes)  [0x80d4048]=0x8052780
1000     2362 8052780: push ebp  (1 bytes)  esp <- 0xfffdfe00
1000     2363 8052781: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe00
1000     2364 8052783: sub esp, 0x4  (3 bytes)  esp <- 0xfffdfdfc
1000     2365 8052786: mov eax, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe08]=0x21000  eax <- 0x21000
1000     2366 8052789: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfdfc] <- 0x21000
1000     2367 805278c: call 8053640  (5 bytes)
1000     2368 8053640: push ebp  (1 bytes)  esp <- 0xfffdfdf4
1000     2369 8053641: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfdf4
1000     2370 8053643: sub esp, 0xc  (3 bytes)  esp <- 0xfffdfde8
1000     2371 8053646: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdfdf0] <- 0x80d4c80
1000     2372 8053649: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdfdec] <- 0x80d4cb0
1000     2373 805364c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfdfc]=0x21000  esi <- 0x21000
1000     2374 805364f: mov ebx, DWORD PTR ds:0x80d594c  (6 bytes)  [0x80d594c]=0x80d6cd0  ebx <- 0x80d6cd0
1000     2375 8053655: test ebx, ebx  (2 bytes)
1000     2376 8053657: je 8053690  (2 bytes)
1000     2377 8053659: mov eax, ds:0x80d40ac  (5 bytes)  eax <- 0x0
1000     2378 805365e: test eax, eax  (2 bytes)
1000     2379 8053660: jne 8053690  (2 bytes)
1000     2380 8053662: cmp esi, 0x0  (3 bytes)
1000     2381 8053665: je 8053682  (2 bytes)
1000     2382 8053667: jle 80536c0  (2 bytes)
1000     2383 8053669: add esi, ebx  (2 bytes)  esi <- 0x80f7cd0
1000     2384 805366b: nop  (1 bytes)
1000     2385 805366c: lea esi, [esi]  (4 bytes)  esi <- 0x80f7cd0
1000     2386 8053670: jb 80536b0  (2 bytes)
1000     2387 8053672: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfde8] <- 0x80f7cd0
1000     2388 8053675: lea esi, [esi]  (3 bytes)  esi <- 0x80f7cd0
1000     2389 8053678: call 8075610  (5 bytes)
1000     2390 8075610: push ebp  (1 bytes)  esp <- 0xfffdfde0
1000     2391 8075611: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfde0
1000     2392 8075613: push ebx  (1 bytes)  esp <- 0xfffdfddc
1000     2393 8075614: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfde8]=0x80f7cd0  ebx <- 0x80f7cd0
1000     2394 8075617: mov eax, 0x2d  (5 bytes)  eax <- 0x2d
1000     2395 807561c: call DWORD PTR ds:0x80d4090  (6 bytes)  [0x80d4090]=0x8054ca0
1000     2396 8054ca0: int 0x80  (2 bytes)
1000     2397 8054ca2: ret  (1 bytes)
1000     2398 8075622: xor edx, edx  (2 bytes)  edx <- 0x0
1000     2399 8075624: mov ds:0x80d594c, eax  (5 bytes)
1000     2400 8075629: cmp ebx, eax  (2 bytes)
1000     2401 807562b: ja 8075638  (2 bytes)
1000     2402 807562d: mov eax, edx  (2 bytes)  eax <- 0x0
1000     2403 807562f: pop ebx  (1 bytes)  ebx <- 0x80d6cd0
1000     2404 8075630: leave  (1 bytes)  ebp <- 0xfffdfdf4
1000     2405 8075631: ret  (1 bytes)
1000     2406 805367d: test eax, eax  (2 bytes)
1000     2407 805367f: nop  (1 bytes)
1000     2408 8053680: js 80536b0  (2 bytes)
1000     2409 8053682: mov eax, ebx  (2 bytes)  eax <- 0x80d6cd0
1000     2410 8053684: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfdf0]=0x80d4c80  esi <- 0x80d4c80
1000     2411 8053687: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfdec]=0x80d4cb0  ebx <- 0x80d4cb0
1000     2412 805368a: leave  (1 bytes)  ebp <- 0xfffdfe00
1000     2413 805368b: ret  (1 bytes)
1000     2414 8052791: xor edx, edx  (2 bytes)  edx <- 0x0
1000     2415 8052793: leave  (1 bytes)  ebp <- 0xfffdfe7c
1000     2416 8052794: cmp eax, 0xff  (3 bytes)
1000     2417 8052797: sete dl  (3 bytes)  dl <- 0x0
1000     2418 805279a: dec edx  (1 bytes)  edx <- 0xffffffff
1000     2419 805279b: and eax, edx  (2 bytes)  eax <- 0x80d6cd0
1000     2420 805279d: ret  (1 bytes)
1000     2421 804fd90: mov edx, DWORD PTR [ebp-0x48]  (3 bytes)  [0xfffdfe34]=0x21000  edx <- 0x21000
1000     2422 804fd93: mov DWORD PTR [ebp-0x10], eax  (3 bytes)  [0xfffdfe6c] <- 0x80d6cd0
1000     2423 804fd96: test eax, eax  (2 bytes)
1000     2424 804fd98: mov ecx, DWORD PTR [ebp-0x44]  (3 bytes)  [0xfffdfe38]=0x21000  ecx <- 0x21000
1000     2425 804fd9b: je 804ffc0  (6 bytes)
1000     2426 804fda1: mov eax, ds:0x80d4c68  (5 bytes)  eax <- 0x0
1000     2427 804fda6: test eax, eax  (2 bytes)
1000     2428 804fda8: je 804fdaf  (2 bytes)
1000     2429 804fdaf: mov BYTE PTR [ebp-0x2c], 0x1  (4 bytes)  [0xfffdfe50] <- 0x1
1000     2430 804fdb3: mov DWORD PTR [ebp-0x20], 0x0  (7 bytes)  [0xfffdfe5c] <- 0x0
1000     2431 804fdba: cmp DWORD PTR ds:0x80d510c, 0x0  (7 bytes)  [0x80d510c]=0x0
1000     2432 804fdc1: jne 804fdcb  (2 bytes)
1000     2433 804fdc3: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d6cd0  eax <- 0x80d6cd0
1000     2434 804fdc6: mov ds:0x80d510c, eax  (5 bytes)
1000     2435 804fdcb: mov ecx, DWORD PTR ds:0x80d50c4  (6 bytes)  [0x80d50c4]=0x0  ecx <- 0x0
1000     2436 804fdd1: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d6cd0  eax <- 0x80d6cd0
1000     2437 804fdd4: add ecx, edx  (2 bytes)  ecx <- 0x21000
1000     2438 804fdd6: cmp DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfe60]=0x80d4cb0
1000     2439 804fdd9: mov DWORD PTR ds:0x80d50c4, ecx  (6 bytes)  [0x80d50c4] <- 0x21000
1000     2440 804fddf: je 804ffa2  (6 bytes)
1000     2441 804fde5: mov eax, ds:0x80d4c84  (5 bytes)  eax <- 0x1
1000     2442 804fdea: shr eax, 1  (2 bytes)  eax <- 0x0
1000     2443 804fdec: xor eax, 0x1  (3 bytes)  eax <- 0x1
1000     2444 804fdef: and eax, 0x1  (3 bytes)  eax <- 0x1
1000     2445 804fdf2: cmp BYTE PTR [ebp-0x30], 0x0  (4 bytes)  [0xfffdfe4c]=0x0
1000     2446 804fdf6: je 804ff4e  (6 bytes)
1000     2447 804ff4e: test al, al  (2 bytes)
1000     2448 804ff50: jne 804fe1f  (6 bytes)
1000     2449 804fe1f: mov ecx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d6cd0  ecx <- 0x80d6cd0
1000     2450 804fe22: and ecx, 0x7  (3 bytes)  ecx <- 0x0
1000     2451 804fe25: jne 804fedc  (6 bytes)
1000     2452 804fe2b: mov ecx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d6cd0  ecx <- 0x80d6cd0
1000     2453 804fe2e: xor eax, eax  (2 bytes)  eax <- 0x0
1000     2454 804fe30: mov DWORD PTR [ebp-0x1c], ecx  (3 bytes)  [0xfffdfe60] <- 0x80d6cd0
1000     2455 804fe33: add eax, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe64]=0x0  eax <- 0x0
1000     2456 804fe36: mov ecx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe58]=0xfff  ecx <- 0xfff
1000     2457 804fe39: lea edx, [eax+edx]  (3 bytes)  edx <- 0x21000
1000     2458 804fe3c: add edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d6cd0  edx <- 0x80f7cd0
1000     2459 804fe3f: sub eax, edx  (2 bytes)  eax <- 0xf7f08330
1000     2460 804fe41: mov DWORD PTR [ebp-0x10], eax  (3 bytes)  [0xfffdfe6c] <- 0xf7f08330
1000     2461 804fe44: lea eax, [edx+ecx]  (3 bytes)  eax <- 0x80f8ccf
1000     2462 804fe47: and eax, DWORD PTR [ebp-0x28]  (3 bytes)  [0xfffdfe54]=0xfffff000  eax <- 0x80f8000
1000     2463 804fe4a: add eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0xf7f08330  eax <- 0x330
1000     2464 804fe4d: mov DWORD PTR [ebp-0x10], eax  (3 bytes)  [0xfffdfe6c] <- 0x330
1000     2465 804fe50: jns 804fe6d  (2 bytes)
1000     2466 804fe6d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x330  eax <- 0x330
1000     2467 804fe70: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe08] <- 0x330
1000     2468 804fe73: call DWORD PTR ds:0x80d4048  (6 bytes)  [0x80d4048]=0x8052780
1000     2469 8052780: push ebp  (1 bytes)  esp <- 0xfffdfe00
1000     2470 8052781: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe00
1000     2471 8052783: sub esp, 0x4  (3 bytes)  esp <- 0xfffdfdfc
1000     2472 8052786: mov eax, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe08]=0x330  eax <- 0x330
1000     2473 8052789: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfdfc] <- 0x330
1000     2474 805278c: call 8053640  (5 bytes)
1000     2475 8053640: push ebp  (1 bytes)  esp <- 0xfffdfdf4
1000     2476 8053641: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfdf4
1000     2477 8053643: sub esp, 0xc  (3 bytes)  esp <- 0xfffdfde8
1000     2478 8053646: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdfdf0] <- 0x80d4c80
1000     2479 8053649: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdfdec] <- 0x80d4cb0
1000     2480 805364c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfdfc]=0x330  esi <- 0x330
1000     2481 805364f: mov ebx, DWORD PTR ds:0x80d594c  (6 bytes)  [0x80d594c]=0x80f7cd0  ebx <- 0x80f7cd0
1000     2482 8053655: test ebx, ebx  (2 bytes)
1000     2483 8053657: je 8053690  (2 bytes)
1000     2484 8053659: mov eax, ds:0x80d40ac  (5 bytes)  eax <- 0x0
1000     2485 805365e: test eax, eax  (2 bytes)
1000     2486 8053660: jne 8053690  (2 bytes)
1000     2487 8053662: cmp esi, 0x0  (3 bytes)
1000     2488 8053665: je 8053682  (2 bytes)
1000     2489 8053667: jle 80536c0  (2 bytes)
1000     2490 8053669: add esi, ebx  (2 bytes)  esi <- 0x80f8000
1000     2491 805366b: nop  (1 bytes)
1000     2492 805366c: lea esi, [esi]  (4 bytes)  esi <- 0x80f8000
1000     2493 8053670: jb 80536b0  (2 bytes)
1000     2494 8053672: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfde8] <- 0x80f8000
1000     2495 8053675: lea esi, [esi]  (3 bytes)  esi <- 0x80f8000
1000     2496 8053678: call 8075610  (5 bytes)
1000     2497 8075610: push ebp  (1 bytes)  esp <- 0xfffdfde0
1000     2498 8075611: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfde0
1000     2499 8075613: push ebx  (1 bytes)  esp <- 0xfffdfddc
1000     2500 8075614: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfde8]=0x80f8000  ebx <- 0x80f8000
1000     2501 8075617: mov eax, 0x2d  (5 bytes)  eax <- 0x2d
1000     2502 807561c: call DWORD PTR ds:0x80d4090  (6 bytes)  [0x80d4090]=0x8054ca0
1000     2503 8054ca0: int 0x80  (2 bytes)
1000     2504 8054ca2: ret  (1 bytes)
1000     2505 8075622: xor edx, edx  (2 bytes)  edx <- 0x0
1000     2506 8075624: mov ds:0x80d594c, eax  (5 bytes)
1000     2507 8075629: cmp ebx, eax  (2 bytes)
1000     2508 807562b: ja 8075638  (2 bytes)
1000     2509 807562d: mov eax, edx  (2 bytes)  eax <- 0x0
1000     2510 807562f: pop ebx  (1 bytes)  ebx <- 0x80f7cd0
1000     2511 8075630: leave  (1 bytes)  ebp <- 0xfffdfdf4
1000     2512 8075631: ret  (1 bytes)
1000     2513 805367d: test eax, eax  (2 bytes)
1000     2514 805367f: nop  (1 bytes)
1000     2515 8053680: js 80536b0  (2 bytes)
1000     2516 8053682: mov eax, ebx  (2 bytes)  eax <- 0x80f7cd0
1000     2517 8053684: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfdf0]=0x80d4c80  esi <- 0x80d4c80
1000     2518 8053687: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfdec]=0x80d4cb0  ebx <- 0x80d4cb0
1000     2519 805368a: leave  (1 bytes)  ebp <- 0xfffdfe00
1000     2520 805368b: ret  (1 bytes)
1000     2521 8052791: xor edx, edx  (2 bytes)  edx <- 0x0
1000     2522 8052793: leave  (1 bytes)  ebp <- 0xfffdfe7c
1000     2523 8052794: cmp eax, 0xff  (3 bytes)
1000     2524 8052797: sete dl  (3 bytes)  dl <- 0x0
1000     2525 805279a: dec edx  (1 bytes)  edx <- 0xffffffff
1000     2526 805279b: and eax, edx  (2 bytes)  eax <- 0x80f7cd0
1000     2527 805279d: ret  (1 bytes)
1000     2528 804fe79: mov DWORD PTR [ebp-0x20], eax  (3 bytes)  [0xfffdfe5c] <- 0x80f7cd0
1000     2529 804fe7c: test eax, eax  (2 bytes)
1000     2530 804fe7e: je 804febb  (2 bytes)
1000     2531 804fe80: mov eax, ds:0x80d4c68  (5 bytes)  eax <- 0x0
1000     2532 804fe85: test eax, eax  (2 bytes)
1000     2533 804fe87: je 804fe8b  (2 bytes)
1000     2534 804fe8b: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x330  edx <- 0x330
1000     2535 804fe8e: mov eax, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe60]=0x80d6cd0  eax <- 0x80d6cd0
1000     2536 804fe91: mov ecx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe60]=0x80d6cd0  ecx <- 0x80d6cd0
1000     2537 804fe94: mov ds:0x80d4cb0, eax  (5 bytes)
1000     2538 804fe99: mov eax, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe5c]=0x80f7cd0  eax <- 0x80f7cd0
1000     2539 804fe9c: add eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x330  eax <- 0x80f8000
1000     2540 804fe9f: sub eax, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe60]=0x80d6cd0  eax <- 0x21330
1000     2541 804fea2: or eax, 0x1  (3 bytes)  eax <- 0x21331
1000     2542 804fea5: mov DWORD PTR [ecx+0x4], eax  (3 bytes)  [0x80d6cd4] <- 0x21331
1000     2543 804fea8: add DWORD PTR ds:0x80d50c4, edx  (6 bytes)  [0x80d50c4]=0x21000  [0x80d50c4] <- 0x21330
1000     2544 804feae: cmp BYTE PTR [ebp-0x30], 0x0  (4 bytes)  [0xfffdfe4c]=0x0
1000     2545 804feb2: jne 804fef0  (2 bytes)
1000     2546 804feb4: mov ebx, ecx  (2 bytes)  ebx <- 0x80d6cd0
1000     2547 804feb6: jmp 804fa49  (5 bytes)
1000     2548 804fa49: mov eax, DWORD PTR [esi+0x444]  (6 bytes)  [0x80d50c4]=0x21330  eax <- 0x21330
1000     2549 804fa4f: cmp eax, DWORD PTR [esi+0x448]  (6 bytes)  [0x80d50c8]=0x0
1000     2550 804fa55: jbe 804fa5d  (2 bytes)
1000     2551 804fa57: mov DWORD PTR [esi+0x448], eax  (6 bytes)  [0x80d50c8] <- 0x21330
1000     2552 804fa5d: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d6cd4]=0x21331  eax <- 0x21331
1000     2553 804fa60: and eax, 0xf8  (3 bytes)  eax <- 0x21330
1000     2554 804fa63: cmp DWORD PTR [ebp-0x3c], eax  (3 bytes)  [0xfffdfe40]=0x20
1000     2555 804fa66: ja 804f3d8  (6 bytes)
1000     2556 804fa6c: lea edx, [ebx+edi]  (3 bytes)  edx <- 0x80d6ce0
1000     2557 804fa6f: xor ecx, ecx  (2 bytes)  ecx <- 0x0
1000     2558 804fa71: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdfe6c] <- 0x80d6ce0
1000     2559 804fa74: cmp esi, 0x80d4c80  (6 bytes)
1000     2560 804fa7a: mov DWORD PTR [esi+0x30], edx  (3 bytes)  [0x80d4cb0] <- 0x80d6ce0
1000     2561 804fa7d: setne cl  (3 bytes)  cl <- 0x0
1000     2562 804fa80: mov edx, edi  (2 bytes)  edx <- 0x10
1000     2563 804fa82: shl ecx, 0x2  (3 bytes)  ecx <- 0x0
1000     2564 804fa85: or edx, 0x1  (3 bytes)  edx <- 0x11
1000     2565 804fa88: sub eax, edi  (2 bytes)  eax <- 0x21320
1000     2566 804fa8a: or edx, ecx  (2 bytes)  edx <- 0x11
1000     2567 804fa8c: or eax, 0x1  (3 bytes)  eax <- 0x21321
1000     2568 804fa8f: mov DWORD PTR [ebx+0x4], edx  (3 bytes)  [0x80d6cd4] <- 0x11
1000     2569 804fa92: mov ecx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe6c]=0x80d6ce0  ecx <- 0x80d6ce0
1000     2570 804fa95: add ebx, 0x8  (3 bytes)  ebx <- 0x80d6cd8
1000     2571 804fa98: mov DWORD PTR [ecx+0x4], eax  (3 bytes)  [0x80d6ce4] <- 0x21321
1000     2572 804fa9b: xor esi, esi  (2 bytes)  esi <- 0x0
1000     2573 804fa9d: test ebx, ebx  (2 bytes)
1000     2574 804fa9f: je 804efd2  (6 bytes)
1000     2575 804faa5: mov eax, ds:0x80d5114  (5 bytes)  eax <- 0x0
1000     2576 804faaa: mov esi, ebx  (2 bytes)  esi <- 0x80d6cd8
1000     2577 804faac: test eax, eax  (2 bytes)
1000     2578 804faae: je 804efd2  (6 bytes)
1000     2579 804efd2: add esp, 0x68  (3 bytes)  esp <- 0xfffdfe70
1000     2580 804efd5: mov eax, esi  (2 bytes)  eax <- 0x80d6cd8
1000     2581 804efd7: pop ebx  (1 bytes)  ebx <- 0x80d4c80
1000     2582 804efd8: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     2583 804efd9: pop edi  (1 bytes)  edi <- 0xc
1000     2584 804efda: leave  (1 bytes)  ebp <- 0xfffdfeb4
1000     2585 804efdb: ret  (1 bytes)
1000     2586 8050374: mov esi, eax  (2 bytes)  esi <- 0x80d6cd8
1000     2587 8050376: test eax, eax  (2 bytes)
1000     2588 8050378: je 8050460  (6 bytes)
1000     2589 805037e: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     2590 8050386: je 8050389  (2 bytes)
1000     2591 8050389: sub DWORD PTR [ebx], 0x1  (3 bytes)  [0x80d4c80]=0x1  [0x80d4c80] <- 0x0
1000     2592 805038c: jne 8052501  (6 bytes)
1000     2593 8050392: lea edx, [esi-0x8]  (3 bytes)  edx <- 0x80d6cd0
1000     2594 8050395: mov eax, DWORD PTR [edx+0x4]  (3 bytes)  [0x80d6cd4]=0x11  eax <- 0x11
1000     2595 8050398: test al, 0x2  (2 bytes)
1000     2596 805039a: jne 805043d  (6 bytes)
1000     2597 80503a0: mov ecx, 0x80d4c80  (5 bytes)  ecx <- 0x80d4c80
1000     2598 80503a5: test al, 0x4  (2 bytes)
1000     2599 80503a7: je 80503b1  (2 bytes)
1000     2600 80503b1: cmp ecx, ebx  (2 bytes)
1000     2601 80503b3: je 805043d  (6 bytes)
1000     2602 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6cd8
1000     2603 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfea8]=0x1  ebx <- 0x1
1000     2604 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfeac]=0xfffe0004  esi <- 0xfffe0004
1000     2605 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfeb0]=0xc  edi <- 0xc
1000     2606 8050448: leave  (1 bytes)  ebp <- 0xfffdfeec
1000     2607 8050449: ret  (1 bytes)
1000     2608 8050541: mov esi, eax  (2 bytes)  esi <- 0x80d6cd8
1000     2609 8050543: jmp 805043d  (5 bytes)
1000     2610 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6cd8
1000     2611 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfee0]=0x1  ebx <- 0x1
1000     2612 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfee4]=0xfffe0004  esi <- 0xfffe0004
1000     2613 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfee8]=0xfffe000c  edi <- 0xfffe000c
1000     2614 8050448: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     2615 8050449: ret  (1 bytes)
1000     2616 8078c0c: mov ebx, eax  (2 bytes)  ebx <- 0x80d6cd8
1000     2617 8078c0e: mov ds:0x80d3bd8, eax  (5 bytes)
1000     2618 8078c13: test eax, eax  (2 bytes)
1000     2619 8078c15: je 8078e27  (6 bytes)
1000     2620 8078c1b: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     2621 8078c20: mov edx, 0xcccccccd  (5 bytes)  edx <- 0xcccccccd
1000     2622 8078c25: lea eax, [eax*4+0x27]  (7 bytes)  eax <- 0x2b
1000     2623 8078c2c: mul edx  (2 bytes)  eax <- 0x6666666f  edx <- 0x22
1000     2624 8078c2e: shr edx, 0x4  (3 bytes)  edx <- 0x2
1000     2625 8078c31: lea esi, [edx+edx*4]  (3 bytes)  esi <- 0xa
1000     2626 8078c34: mov eax, esi  (2 bytes)  eax <- 0xa
1000     2627 8078c36: shl eax, 0x6  (3 bytes)  eax <- 0x280
1000     2628 8078c39: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef4] <- 0x280
1000     2629 8078c3c: call 8050320  (5 bytes)
1000     2630 8050320: push ebp  (1 bytes)  esp <- 0xfffdfeec
1000     2631 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfeec
1000     2632 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfebc
1000     2633 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfee8] <- 0xfffe000c
1000     2634 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x0
1000     2635 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfee0] <- 0x80d6cd8
1000     2636 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfee4] <- 0xa
1000     2637 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef4]=0x280  edi <- 0x280
1000     2638 8050337: test eax, eax  (2 bytes)
1000     2639 8050339: jne 8050535  (6 bytes)
1000     2640 805033f: mov edx, 0xffffffec  (6 bytes)  edx <- 0xffffffec
1000     2641 8050345: mov ebx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d681c]=0x80d4c80  ebx <- 0x80d4c80
1000     2642 8050348: test ebx, ebx  (2 bytes)
1000     2643 805034a: je 8050428  (6 bytes)
1000     2644 8050350: mov edx, 0x1  (5 bytes)  edx <- 0x1
1000     2645 8050355: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     2646 805035d: je 8050360  (2 bytes)
1000     2647 8050360: cmpxchg DWORD PTR [ebx], edx  (3 bytes)  [0x80d4c80]=0x0  eax <- 0x0  [0x80d4c80] <- 0x1
1000     2648 8050363: test eax, eax  (2 bytes)
1000     2649 8050365: jne 8050428  (6 bytes)
1000     2650 805036b: mov edx, edi  (2 bytes)  edx <- 0x280
1000     2651 805036d: mov eax, ebx  (2 bytes)  eax <- 0x80d4c80
1000     2652 805036f: call 804ef60  (5 bytes)
1000     2653 804ef60: push ebp  (1 bytes)  esp <- 0xfffdfeb4
1000     2654 804ef61: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfeb4
1000     2655 804ef63: push edi  (1 bytes)  esp <- 0xfffdfeb0
1000     2656 804ef64: push esi  (1 bytes)  esp <- 0xfffdfeac
1000     2657 804ef65: mov esi, eax  (2 bytes)  esi <- 0x80d4c80
1000     2658 804ef67: push ebx  (1 bytes)  esp <- 0xfffdfea8
1000     2659 804ef68: sub esp, 0x68  (3 bytes)  esp <- 0xfffdfe40
1000     2660 804ef6b: mov DWORD PTR [ebp-0x14], edx  (3 bytes)  [0xfffdfea0] <- 0x280
1000     2661 804ef6e: cmp edx, 0xdf  (3 bytes)
1000     2662 804ef71: ja 804f3d8  (6 bytes)
1000     2663 804ef77: mov eax, edx  (2 bytes)  eax <- 0x280
1000     2664 804ef79: mov edi, 0x10  (5 bytes)  edi <- 0x10
1000     2665 804ef7e: add eax, 0xb  (3 bytes)  eax <- 0x28b
1000     2666 804ef81: cmp eax, 0xf  (3 bytes)
1000     2667 804ef84: ja 804f060  (6 bytes)
1000     2668 804f060: mov edi, eax  (2 bytes)  edi <- 0x28b
1000     2669 804f062: and edi, 0xf8  (3 bytes)  edi <- 0x288
1000     2670 804f065: cmp edi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x40
1000     2671 804f06b: ja 804efe0  (6 bytes)
1000     2672 804efe0: cmp edi, 0x1ff  (6 bytes)
1000     2673 804efe6: ja 804f080  (6 bytes)
1000     2674 804f080: mov eax, edi  (2 bytes)  eax <- 0x288
1000     2675 804f082: shr eax, 0x6  (3 bytes)  eax <- 0xa
1000     2676 804f085: cmp eax, 0x26  (3 bytes)
1000     2677 804f088: jbe 804f388  (6 bytes)
1000     2678 804f388: add eax, 0x38  (3 bytes)  eax <- 0x42
1000     2679 804f38b: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdfe88] <- 0x42
1000     2680 804f38e: jmp 804f0a2  (5 bytes)
1000     2681 804f0a2: lea ebx, [esi+0x38]  (3 bytes)  ebx <- 0x80d4cb8
1000     2682 804f0a5: test BYTE PTR [esi+0x4], 0x1  (4 bytes)  [0x80d4c84]=0x1
1000     2683 804f0a9: mov DWORD PTR [ebp-0x24], ebx  (3 bytes)  [0xfffdfe90] <- 0x80d4cb8
1000     2684 804f0ac: jne 804f0b5  (2 bytes)
1000     2685 804f0b5: lea eax, [esi+0x30]  (3 bytes)  eax <- 0x80d4cb0
1000     2686 804f0b8: mov edx, edi  (2 bytes)  edx <- 0x288
1000     2687 804f0ba: lea ecx, [edi+0x10]  (3 bytes)  ecx <- 0x298
1000     2688 804f0bd: shr edx, 0x3  (3 bytes)  edx <- 0x51
1000     2689 804f0c0: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdfea4] <- 0x80d4c80
1000     2690 804f0c3: mov DWORD PTR [ebp-0x38], eax  (3 bytes)  [0xfffdfe7c] <- 0x80d4cb0
1000     2691 804f0c6: mov DWORD PTR [ebp-0x40], edx  (3 bytes)  [0xfffdfe74] <- 0x51
1000     2692 804f0c9: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdfe78] <- 0x298
1000     2693 804f0cc: mov DWORD PTR [ebp-0x1c], edi  (3 bytes)  [0xfffdfe98] <- 0x288
1000     2694 804f0cf: mov esi, eax  (2 bytes)  esi <- 0x80d4cb0
1000     2695 804f0d1: mov DWORD PTR [ebp-0x18], 0x0  (7 bytes)  [0xfffdfe9c] <- 0x0
1000     2696 804f0d8: mov ebx, DWORD PTR [esi+0xc]  (3 bytes)  [0x80d4cbc]=0x80d4cb0  ebx <- 0x80d4cb0
1000     2697 804f0db: cmp esi, ebx  (2 bytes)
1000     2698 804f0dd: je 804f17e  (6 bytes)
1000     2699 804f17e: cmp DWORD PTR [ebp-0x1c], 0x1ff  (7 bytes)  [0xfffdfe98]=0x288
1000     2700 804f185: jbe 804f1a4  (2 bytes)
1000     2701 804f187: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe88]=0x42  eax <- 0x42
1000     2702 804f18a: mov ecx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe90]=0x80d4cb8  ecx <- 0x80d4cb8
1000     2703 804f18d: lea edx, [ecx+eax*8-0x10]  (4 bytes)  edx <- 0x80d4eb8
1000     2704 804f191: mov eax, DWORD PTR [edx+0x8]  (3 bytes)  [0x80d4ec0]=0x80d4eb8  eax <- 0x80d4eb8
1000     2705 804f194: cmp eax, edx  (2 bytes)
1000     2706 804f196: je 804f1a4  (2 bytes)
1000     2707 804f1a4: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe88]=0x42  eax <- 0x42
1000     2708 804f1a7: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe90]=0x80d4cb8  edx <- 0x80d4cb8
1000     2709 804f1aa: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfea4]=0x80d4c80  edi <- 0x80d4c80
1000     2710 804f1ad: lea ebx, [edx+eax*8-0x8]  (4 bytes)  ebx <- 0x80d4ec0
1000     2711 804f1b1: mov ecx, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe88]=0x42  ecx <- 0x42
1000     2712 804f1b4: inc ecx  (1 bytes)  ecx <- 0x43
1000     2713 804f1b5: mov eax, ecx  (2 bytes)  eax <- 0x43
1000     2714 804f1b7: and ecx, 0x1f  (3 bytes)  ecx <- 0x3
1000     2715 804f1ba: shr eax, 0x5  (3 bytes)  eax <- 0x2
1000     2716 804f1bd: mov edx, DWORD PTR [edi+eax*4+0x430]  (7 bytes)  [0x80d50b8]=0x0  edx <- 0x0
1000     2717 804f1c4: mov edi, 0x1  (5 bytes)  edi <- 0x1
1000     2718 804f1c9: shl edi, cl  (2 bytes)  edi <- 0x8
1000     2719 804f1cb: mov ecx, edi  (2 bytes)  ecx <- 0x8
1000     2720 804f1cd: test ecx, ecx  (2 bytes)
1000     2721 804f1cf: je 804f1d5  (2 bytes)
1000     2722 804f1d1: cmp ecx, edx  (2 bytes)
1000     2723 804f1d3: jbe 804f204  (2 bytes)
1000     2724 804f1d5: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfea4]=0x80d4c80  edx <- 0x80d4c80
1000     2725 804f1d8: lea ecx, [edx+eax*4+0x434]  (7 bytes)  ecx <- 0x80d50bc
1000     2726 804f1df: nop  (1 bytes)
1000     2727 804f1e0: inc eax  (1 bytes)  eax <- 0x3
1000     2728 804f1e1: cmp eax, 0x3  (3 bytes)
1000     2729 804f1e4: ja 804f668  (6 bytes)
1000     2730 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50bc]=0x0  edx <- 0x0
1000     2731 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50c0
1000     2732 804f1ef: test edx, edx  (2 bytes)
1000     2733 804f1f1: je 804f1e0  (2 bytes)
1000     2734 804f1e0: inc eax  (1 bytes)  eax <- 0x4
1000     2735 804f1e1: cmp eax, 0x3  (3 bytes)
1000     2736 804f1e4: ja 804f668  (6 bytes)
1000     2737 804f668: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfea4]=0x80d4c80  eax <- 0x80d4c80
1000     2738 804f66b: mov ebx, DWORD PTR [eax+0x30]  (3 bytes)  [0x80d4cb0]=0x80d6ce0  ebx <- 0x80d6ce0
1000     2739 804f66e: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d6ce4]=0x21321  eax <- 0x21321
1000     2740 804f671: mov edx, eax  (2 bytes)  edx <- 0x21321
1000     2741 804f673: and edx, 0xf8  (3 bytes)  edx <- 0x21320
1000     2742 804f676: cmp edx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdfe78]=0x298
1000     2743 804f679: jae 804fb29  (6 bytes)
1000     2744 804fb29: mov edi, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe98]=0x288  edi <- 0x288
1000     2745 804fb2c: mov esi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfea4]=0x80d4c80  esi <- 0x80d4c80
1000     2746 804fb2f: lea ecx, [ebx+edi]  (3 bytes)  ecx <- 0x80d6f68
1000     2747 804fb32: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe9c] <- 0x21320
1000     2748 804fb35: mov eax, edi  (2 bytes)  eax <- 0x288
1000     2749 804fb37: xor edx, edx  (2 bytes)  edx <- 0x0
1000     2750 804fb39: mov DWORD PTR [esi+0x30], ecx  (3 bytes)  [0x80d4cb0] <- 0x80d6f68
1000     2751 804fb3c: cmp esi, 0x80d4c80  (6 bytes)
1000     2752 804fb42: setne dl  (3 bytes)  dl <- 0x0
1000     2753 804fb45: or eax, 0x1  (3 bytes)  eax <- 0x289
1000     2754 804fb48: shl edx, 0x2  (3 bytes)  edx <- 0x0
1000     2755 804fb4b: or eax, edx  (2 bytes)  eax <- 0x289
1000     2756 804fb4d: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe9c]=0x21320  edx <- 0x21320
1000     2757 804fb50: mov DWORD PTR [ebx+0x4], eax  (3 bytes)  [0x80d6ce4] <- 0x289
1000     2758 804fb53: sub edx, edi  (2 bytes)  edx <- 0x21098
1000     2759 804fb55: add ebx, 0x8  (3 bytes)  ebx <- 0x80d6ce8
1000     2760 804fb58: mov edi, edx  (2 bytes)  edi <- 0x21098
1000     2761 804fb5a: mov eax, ds:0x80d5114  (5 bytes)  eax <- 0x0
1000     2762 804fb5f: or edi, 0x1  (3 bytes)  edi <- 0x21099
1000     2763 804fb62: mov esi, ebx  (2 bytes)  esi <- 0x80d6ce8
1000     2764 804fb64: mov DWORD PTR [ecx+0x4], edi  (3 bytes)  [0x80d6f6c] <- 0x21099
1000     2765 804fb67: test eax, eax  (2 bytes)
1000     2766 804fb69: je 804efd2  (6 bytes)
1000     2767 804efd2: add esp, 0x68  (3 bytes)  esp <- 0xfffdfea8
1000     2768 804efd5: mov eax, esi  (2 bytes)  eax <- 0x80d6ce8
1000     2769 804efd7: pop ebx  (1 bytes)  ebx <- 0x80d4c80
1000     2770 804efd8: pop esi  (1 bytes)  esi <- 0xa
1000     2771 804efd9: pop edi  (1 bytes)  edi <- 0x280
1000     2772 804efda: leave  (1 bytes)  ebp <- 0xfffdfeec
1000     2773 804efdb: ret  (1 bytes)
1000     2774 8050374: mov esi, eax  (2 bytes)  esi <- 0x80d6ce8
1000     2775 8050376: test eax, eax  (2 bytes)
1000     2776 8050378: je 8050460  (6 bytes)
1000     2777 805037e: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     2778 8050386: je 8050389  (2 bytes)
1000     2779 8050389: sub DWORD PTR [ebx], 0x1  (3 bytes)  [0x80d4c80]=0x1  [0x80d4c80] <- 0x0
1000     2780 805038c: jne 8052501  (6 bytes)
1000     2781 8050392: lea edx, [esi-0x8]  (3 bytes)  edx <- 0x80d6ce0
1000     2782 8050395: mov eax, DWORD PTR [edx+0x4]  (3 bytes)  [0x80d6ce4]=0x289  eax <- 0x289
1000     2783 8050398: test al, 0x2  (2 bytes)
1000     2784 805039a: jne 805043d  (6 bytes)
1000     2785 80503a0: mov ecx, 0x80d4c80  (5 bytes)  ecx <- 0x80d4c80
1000     2786 80503a5: test al, 0x4  (2 bytes)
1000     2787 80503a7: je 80503b1  (2 bytes)
1000     2788 80503b1: cmp ecx, ebx  (2 bytes)
1000     2789 80503b3: je 805043d  (6 bytes)
1000     2790 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6ce8
1000     2791 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfee0]=0x80d6cd8  ebx <- 0x80d6cd8
1000     2792 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfee4]=0xa  esi <- 0xa
1000     2793 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfee8]=0xfffe000c  edi <- 0xfffe000c
1000     2794 8050448: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     2795 8050449: ret  (1 bytes)
1000     2796 8078c41: mov DWORD PTR [ebx], eax  (2 bytes)  [0x80d6cd8] <- 0x80d6ce8
1000     2797 8078c43: mov eax, ds:0x80d3bd8  (5 bytes)  eax <- 0x80d6cd8
1000     2798 8078c48: mov edi, DWORD PTR [eax]  (2 bytes)  [0x80d6cd8]=0x80d6ce8  edi <- 0x80d6ce8
1000     2799 8078c4a: test edi, edi  (2 bytes)
1000     2800 8078c4c: je 8078e11  (6 bytes)
1000     2801 8078c52: mov edx, DWORD PTR [eax]  (2 bytes)  [0x80d6cd8]=0x80d6ce8  edx <- 0x80d6ce8
1000     2802 8078c54: shl esi, 0x2  (3 bytes)  esi <- 0x28
1000     2803 8078c57: mov DWORD PTR ds:0x80d3bdc, 0x0  (10 bytes)  [0x80d3bdc] <- 0x0
1000     2804 8078c61: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdff0c] <- 0x28
1000     2805 8078c64: mov DWORD PTR ds:0x80d5d50, edx  (6 bytes)  [0x80d5d50] <- 0x80d6ce8
1000     2806 8078c6a: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0x28  edi <- 0x28
1000     2807 8078c6d: mov ecx, DWORD PTR ds:0x80d3bd0  (6 bytes)  [0x80d3bd0]=0x1  ecx <- 0x1
1000     2808 8078c73: neg edi  (2 bytes)  edi <- 0xffffffd8
1000     2809 8078c75: xor esi, esi  (2 bytes)  esi <- 0x0
1000     2810 8078c77: mov eax, 0x80bab78  (5 bytes)  eax <- 0x80bab78
1000     2811 8078c7c: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0xffffffd8
1000     2812 8078c7f: mov edi, DWORD PTR [esi*4+0x80bab88]  (7 bytes)  [0x80bab88]=0x5  edi <- 0x5
1000     2813 8078c86: mov DWORD PTR [ebx], edx  (2 bytes)  [0x80d6cd8] <- 0x80d6ce8
1000     2814 8078c88: mov DWORD PTR [edx+0x10], edi  (3 bytes)  [0x80d6cf8] <- 0x5
1000     2815 8078c8b: mov DWORD PTR [edx+0x4], 0x80baa59  (7 bytes)  [0x80d6cec] <- 0x80baa59
1000     2816 8078c92: mov DWORD PTR [edx+0x8], 0x0  (7 bytes)  [0x80d6cf0] <- 0x0
1000     2817 8078c99: mov DWORD PTR [edx+0xc], eax  (3 bytes)  [0x80d6cf4] <- 0x80bab78
1000     2818 8078c9c: lea edi, [eax+edi+0x1]  (4 bytes)  edi <- 0x80bab7e
1000     2819 8078ca0: cmp BYTE PTR [eax], 0x2f  (3 bytes)  [0x80bab78]=0x2f
1000     2820 8078ca3: jne 8078ded  (6 bytes)
1000     2821 8078ca9: xor eax, eax  (2 bytes)  eax <- 0x0
1000     2822 8078cab: test ecx, ecx  (2 bytes)
1000     2823 8078cad: je 8078cbd  (2 bytes)
1000     2824 8078caf: nop  (1 bytes)
1000     2825 8078cb0: mov DWORD PTR [edx+eax*4+0x14], 0x0  (8 bytes)  [0x80d6cfc] <- 0x0
1000     2826 8078cb8: inc eax  (1 bytes)  eax <- 0x1
1000     2827 8078cb9: cmp eax, ecx  (2 bytes)
1000     2828 8078cbb: jb 8078cb0  (2 bytes)
1000     2829 8078cbd: add ebx, 0x4  (3 bytes)  ebx <- 0x80d6cdc
1000     2830 8078cc0: cmp esi, 0x1  (3 bytes)
1000     2831 8078cc3: je 8078ce0  (2 bytes)
1000     2832 8078cc5: mov eax, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdff04]=0xffffffd8  eax <- 0xffffffd8
1000     2833 8078cc8: add edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0x28  edx <- 0x80d6d10
1000     2834 8078ccb: mov esi, 0x1  (5 bytes)  esi <- 0x1
1000     2835 8078cd0: mov DWORD PTR [edx+eax], edx  (3 bytes)  [0x80d6ce8] <- 0x80d6d10
1000     2836 8078cd3: mov eax, edi  (2 bytes)  eax <- 0x80bab7e
1000     2837 8078cd5: jmp 8078c7f  (2 bytes)
1000     2838 8078c7f: mov edi, DWORD PTR [esi*4+0x80bab88]  (7 bytes)  [0x80bab8c]=0x9  edi <- 0x9
1000     2839 8078c86: mov DWORD PTR [ebx], edx  (2 bytes)  [0x80d6cdc] <- 0x80d6d10
1000     2840 8078c88: mov DWORD PTR [edx+0x10], edi  (3 bytes)  [0x80d6d20] <- 0x9
1000     2841 8078c8b: mov DWORD PTR [edx+0x4], 0x80baa59  (7 bytes)  [0x80d6d14] <- 0x80baa59
1000     2842 8078c92: mov DWORD PTR [edx+0x8], 0x0  (7 bytes)  [0x80d6d18] <- 0x0
1000     2843 8078c99: mov DWORD PTR [edx+0xc], eax  (3 bytes)  [0x80d6d1c] <- 0x80bab7e
1000     2844 8078c9c: lea edi, [eax+edi+0x1]  (4 bytes)  edi <- 0x80bab88
1000     2845 8078ca0: cmp BYTE PTR [eax], 0x2f  (3 bytes)  [0x80bab7e]=0x2f
1000     2846 8078ca3: jne 8078ded  (6 bytes)
1000     2847 8078ca9: xor eax, eax  (2 bytes)  eax <- 0x0
1000     2848 8078cab: test ecx, ecx  (2 bytes)
1000     2849 8078cad: je 8078cbd  (2 bytes)
1000     2850 8078caf: nop  (1 bytes)
1000     2851 8078cb0: mov DWORD PTR [edx+eax*4+0x14], 0x0  (8 bytes)  [0x80d6d24] <- 0x0
1000     2852 8078cb8: inc eax  (1 bytes)  eax <- 0x1
1000     2853 8078cb9: cmp eax, ecx  (2 bytes)
1000     2854 8078cbb: jb 8078cb0  (2 bytes)
1000     2855 8078cbd: add ebx, 0x4  (3 bytes)  ebx <- 0x80d6ce0
1000     2856 8078cc0: cmp esi, 0x1  (3 bytes)
1000     2857 8078cc3: je 8078ce0  (2 bytes)
1000     2858 8078ce0: mov DWORD PTR [edx], 0x0  (6 bytes)  [0x80d6d10] <- 0x0
1000     2859 8078ce6: mov DWORD PTR ds:0x80d5950, 0x9  (10 bytes)  [0x80d5950] <- 0x9
1000     2860 8078cf0: mov DWORD PTR [ebx], 0x0  (6 bytes)  [0x80d6ce0] <- 0x0
1000     2861 8078cf6: mov ebx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0xfffe019f  ebx <- 0xfffe019f
1000     2862 8078cf9: test ebx, ebx  (2 bytes)
1000     2863 8078cfb: je 8078d05  (2 bytes)
1000     2864 8078cfd: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0xfffe019f  edx <- 0xfffe019f
1000     2865 8078d00: cmp BYTE PTR [edx], 0x0  (3 bytes)  [0xfffe019f]=0x3a
1000     2866 8078d03: jne 8078d28  (2 bytes)
1000     2867 8078d28: mov edi, edx  (2 bytes)  edi <- 0xfffe019f
1000     2868 8078d2a: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdfef4] <- 0xfffe019f
1000     2869 8078d2d: mov esi, 0x8  (5 bytes)  esi <- 0x8
1000     2870 8078d32: call 80527a0  (5 bytes)
1000     2871 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef4]=0xfffe019f  ecx <- 0xfffe019f
1000     2872 80527a4: mov eax, ecx  (2 bytes)  eax <- 0xfffe019f
1000     2873 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x3
1000     2874 80527a9: je 80527d3  (2 bytes)
1000     2875 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0xfffe019f]=0x3a
1000     2876 80527ad: je 805284a  (6 bytes)
1000     2877 80527b3: inc eax  (1 bytes)  eax <- 0xfffe01a0
1000     2878 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x0
1000     2879 80527b7: je 80527d3  (2 bytes)
1000     2880 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffe01a0]=0x7273752f  ecx <- 0x7273752f
1000     2881 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2882 80527da: add edx, ecx  (2 bytes)  edx <- 0x7172742e
1000     2883 80527dc: jae 8052837  (2 bytes)
1000     2884 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010101
1000     2885 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2886 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     2887 80527e7: jne 8052837  (2 bytes)
1000     2888 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe01a4]=0x636f6c2f  ecx <- 0x636f6c2f
1000     2889 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2890 80527f1: add edx, ecx  (2 bytes)  edx <- 0x626e6b2e
1000     2891 80527f3: jae 8052834  (2 bytes)
1000     2892 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1010701
1000     2893 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2894 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     2895 80527fe: jne 8052834  (2 bytes)
1000     2896 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffe01a8]=0x6e2f6c61  ecx <- 0x6e2f6c61
1000     2897 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2898 8052808: add edx, ecx  (2 bytes)  edx <- 0x6d2e6b60
1000     2899 805280a: jae 8052831  (2 bytes)
1000     2900 805280c: xor edx, ecx  (2 bytes)  edx <- 0x3010701
1000     2901 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2902 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     2903 8052815: jne 8052831  (2 bytes)
1000     2904 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffe01ac]=0x6c612d73  ecx <- 0x6c612d73
1000     2905 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2906 805281f: add edx, ecx  (2 bytes)  edx <- 0x6b602c72
1000     2907 8052821: jae 805282e  (2 bytes)
1000     2908 8052823: xor edx, ecx  (2 bytes)  edx <- 0x7010101
1000     2909 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2910 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     2911 805282c: je 80527d0  (2 bytes)
1000     2912 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffe01b0
1000     2913 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffe01b0]=0x6f6e696c  ecx <- 0x6f6e696c
1000     2914 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2915 80527da: add edx, ecx  (2 bytes)  edx <- 0x6e6d686b
1000     2916 80527dc: jae 8052837  (2 bytes)
1000     2917 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1030107
1000     2918 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2919 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     2920 80527e7: jne 8052837  (2 bytes)
1000     2921 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe01b4]=0x322d656e  ecx <- 0x322d656e
1000     2922 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2923 80527f1: add edx, ecx  (2 bytes)  edx <- 0x312c646d
1000     2924 80527f3: jae 8052834  (2 bytes)
1000     2925 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x3010103
1000     2926 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2927 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     2928 80527fe: jne 8052834  (2 bytes)
1000     2929 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffe01b8]=0x2f35332e  ecx <- 0x2f35332e
1000     2930 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2931 8052808: add edx, ecx  (2 bytes)  edx <- 0x2e34322d
1000     2932 805280a: jae 8052831  (2 bytes)
1000     2933 805280c: xor edx, ecx  (2 bytes)  edx <- 0x1010103
1000     2934 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2935 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     2936 8052815: jne 8052831  (2 bytes)
1000     2937 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffe01bc]=0x6c63746f  ecx <- 0x6c63746f
1000     2938 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2939 805281f: add edx, ecx  (2 bytes)  edx <- 0x6b62736e
1000     2940 8052821: jae 805282e  (2 bytes)
1000     2941 8052823: xor edx, ecx  (2 bytes)  edx <- 0x7010701
1000     2942 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2943 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     2944 805282c: je 80527d0  (2 bytes)
1000     2945 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffe01c0
1000     2946 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffe01c0]=0x312e312d  ecx <- 0x312e312d
1000     2947 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2948 80527da: add edx, ecx  (2 bytes)  edx <- 0x302d302c
1000     2949 80527dc: jae 8052837  (2 bytes)
1000     2950 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1030101
1000     2951 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2952 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     2953 80527e7: jne 8052837  (2 bytes)
1000     2954 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe01c4]=0x752f3a34  ecx <- 0x752f3a34
1000     2955 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2956 80527f1: add edx, ecx  (2 bytes)  edx <- 0x742e3933
1000     2957 80527f3: jae 8052834  (2 bytes)
1000     2958 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1010307
1000     2959 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2960 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     2961 80527fe: jne 8052834  (2 bytes)
1000     2962 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffe01c8]=0x6c2f7273  ecx <- 0x6c2f7273
1000     2963 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2964 8052808: add edx, ecx  (2 bytes)  edx <- 0x6b2e7172
1000     2965 805280a: jae 8052831  (2 bytes)
1000     2966 805280c: xor edx, ecx  (2 bytes)  edx <- 0x7010301
1000     2967 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2968 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     2969 8052815: jne 8052831  (2 bytes)
1000     2970 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffe01cc]=0x6c61636f  ecx <- 0x6c61636f
1000     2971 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2972 805281f: add edx, ecx  (2 bytes)  edx <- 0x6b60626e
1000     2973 8052821: jae 805282e  (2 bytes)
1000     2974 8052823: xor edx, ecx  (2 bytes)  edx <- 0x7010101
1000     2975 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2976 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     2977 805282c: je 80527d0  (2 bytes)
1000     2978 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffe01d0
1000     2979 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffe01d0]=0x2d736e2f  ecx <- 0x2d736e2f
1000     2980 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2981 80527da: add edx, ecx  (2 bytes)  edx <- 0x2c726d2e
1000     2982 80527dc: jae 8052837  (2 bytes)
1000     2983 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1010301
1000     2984 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2985 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     2986 80527e7: jne 8052837  (2 bytes)
1000     2987 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe01d4]=0x696c6c61  ecx <- 0x696c6c61
1000     2988 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2989 80527f1: add edx, ecx  (2 bytes)  edx <- 0x686b6b60
1000     2990 80527f3: jae 8052834  (2 bytes)
1000     2991 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1070701
1000     2992 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     2993 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     2994 80527fe: jne 8052834  (2 bytes)
1000     2995 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffe01d8]=0x656e6f6e  ecx <- 0x656e6f6e
1000     2996 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     2997 8052808: add edx, ecx  (2 bytes)  edx <- 0x646d6e6d
1000     2998 805280a: jae 8052831  (2 bytes)
1000     2999 805280c: xor edx, ecx  (2 bytes)  edx <- 0x1030103
1000     3000 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     3001 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     3002 8052815: jne 8052831  (2 bytes)
1000     3003 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffe01dc]=0x332e322d  ecx <- 0x332e322d
1000     3004 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     3005 805281f: add edx, ecx  (2 bytes)  edx <- 0x322d312c
1000     3006 8052821: jae 805282e  (2 bytes)
1000     3007 8052823: xor edx, ecx  (2 bytes)  edx <- 0x1030301
1000     3008 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     3009 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     3010 805282c: je 80527d0  (2 bytes)
1000     3011 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffe01e0
1000     3012 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffe01e0]=0x696c2f35  ecx <- 0x696c2f35
1000     3013 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     3014 80527da: add edx, ecx  (2 bytes)  edx <- 0x686b2e34
1000     3015 80527dc: jae 8052837  (2 bytes)
1000     3016 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1070101
1000     3017 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     3018 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     3019 80527e7: jne 8052837  (2 bytes)
1000     3020 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffe01e4]=0x43540062  ecx <- 0x43540062
1000     3021 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     3022 80527f1: add edx, ecx  (2 bytes)  edx <- 0x4252ff61
1000     3023 80527f3: jae 8052834  (2 bytes)
1000     3024 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x106ff03
1000     3025 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffeffff
1000     3026 80527fd: inc edx  (1 bytes)  edx <- 0xffff0000
1000     3027 80527fe: jne 8052834  (2 bytes)
1000     3028 8052834: add eax, 0x4  (3 bytes)  eax <- 0xfffe01e4
1000     3029 8052837: test cl, cl  (2 bytes)
1000     3030 8052839: je 805284a  (2 bytes)
1000     3031 805283b: inc eax  (1 bytes)  eax <- 0xfffe01e5
1000     3032 805283c: test ch, ch  (2 bytes)
1000     3033 805283e: je 805284a  (2 bytes)
1000     3034 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef4]=0xfffe019f  eax <- 0x46
1000     3035 805284e: ret  (1 bytes)
1000     3036 8078d37: lea edx, [eax+0x1]  (3 bytes)  edx <- 0x47
1000     3037 8078d3a: add eax, 0x13  (3 bytes)  eax <- 0x59
1000     3038 8078d3d: and eax, 0xfc  (3 bytes)  eax <- 0x58
1000     3039 8078d40: sub esp, eax  (2 bytes)  esp <- 0xfffdfe9c
1000     3040 8078d42: mov DWORD PTR [esp+0x8], edx  (4 bytes)  [0xfffdfea4] <- 0x47
1000     3041 8078d46: lea eax, [esp+0x1f]  (4 bytes)  eax <- 0xfffdfebb
1000     3042 8078d4a: mov DWORD PTR [esp+0x4], edi  (4 bytes)  [0xfffdfea0] <- 0xfffe019f
1000     3043 8078d4e: and eax, 0xf0  (3 bytes)  eax <- 0xfffdfeb0
1000     3044 8078d51: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe9c] <- 0xfffdfeb0
1000     3045 8078d54: call 8052c20  (5 bytes)
1000     3046 8052c20: mov eax, edi  (2 bytes)  eax <- 0xfffe019f
1000     3047 8052c22: mov edi, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe9c]=0xfffdfeb0  edi <- 0xfffdfeb0
1000     3048 8052c26: mov edx, esi  (2 bytes)  edx <- 0x8
1000     3049 8052c28: mov esi, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfea0]=0xfffe019f  esi <- 0xfffe019f
1000     3050 8052c2c: mov ecx, edi  (2 bytes)  ecx <- 0xfffdfeb0
1000     3051 8052c2e: xor ecx, esi  (2 bytes)  ecx <- 0x3ff2f
1000     3052 8052c30: and ecx, 0x3  (3 bytes)  ecx <- 0x3
1000     3053 8052c33: mov ecx, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdfea4]=0x47  ecx <- 0x47
1000     3054 8052c37: cld  (1 bytes)
1000     3055 8052c38: jne 8052c76  (2 bytes)
1000     3056 8052c76: shr ecx, 1  (2 bytes)  ecx <- 0x23
1000     3057 8052c78: jae 8052c7b  (2 bytes)
1000     3058 8052c7a: movsb  (1 bytes)
1000     3059 8052c7b: shr ecx, 1  (2 bytes)  ecx <- 0x11
1000     3060 8052c7d: jae 8052c81  (2 bytes)
1000     3061 8052c7f: movsw  (2 bytes)
1000     3062 8052c81: rep movsd  (2 bytes)
1000     3063 8052c83: jmp 8052c6d  (2 bytes)
1000     3064 8052c6d: mov edi, eax  (2 bytes)  edi <- 0xfffe019f
1000     3065 8052c6f: mov esi, edx  (2 bytes)  esi <- 0x8
1000     3066 8052c71: mov eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe9c]=0xfffdfeb0  eax <- 0xfffdfeb0
1000     3067 8052c75: ret  (1 bytes)
1000     3068 8078d59: mov edx, edi  (2 bytes)  edx <- 0xfffe019f
1000     3069 8078d5b: mov ebx, eax  (2 bytes)  ebx <- 0xfffdfeb0
1000     3070 8078d5d: mov ecx, 0x1  (5 bytes)  ecx <- 0x1
1000     3071 8078d62: movzx eax, BYTE PTR [edi]  (3 bytes)  [0xfffe019f]=0x3a  eax <- 0x3a
1000     3072 8078d65: test al, al  (2 bytes)
1000     3073 8078d67: je 8078d87  (2 bytes)
1000     3074 8078d69: lea esi, [esi]  (7 bytes)  esi <- 0x8
1000     3075 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x0
1000     3076 8078d73: cmp al, 0x2  (2 bytes)
1000     3077 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3078 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a0
1000     3079 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a0]=0x2f  eax <- 0x2f
1000     3080 8078d7c: test al, al  (2 bytes)
1000     3081 8078d7e: jne 8078d70  (2 bytes)
1000     3082 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3083 8078d73: cmp al, 0x2  (2 bytes)
1000     3084 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3085 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a1
1000     3086 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a1]=0x75  eax <- 0x75
1000     3087 8078d7c: test al, al  (2 bytes)
1000     3088 8078d7e: jne 8078d70  (2 bytes)
1000     3089 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x3b
1000     3090 8078d73: cmp al, 0x2  (2 bytes)
1000     3091 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3092 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a2
1000     3093 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a2]=0x73  eax <- 0x73
1000     3094 8078d7c: test al, al  (2 bytes)
1000     3095 8078d7e: jne 8078d70  (2 bytes)
1000     3096 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x39
1000     3097 8078d73: cmp al, 0x2  (2 bytes)
1000     3098 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3099 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a3
1000     3100 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a3]=0x72  eax <- 0x72
1000     3101 8078d7c: test al, al  (2 bytes)
1000     3102 8078d7e: jne 8078d70  (2 bytes)
1000     3103 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x38
1000     3104 8078d73: cmp al, 0x2  (2 bytes)
1000     3105 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3106 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a4
1000     3107 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a4]=0x2f  eax <- 0x2f
1000     3108 8078d7c: test al, al  (2 bytes)
1000     3109 8078d7e: jne 8078d70  (2 bytes)
1000     3110 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3111 8078d73: cmp al, 0x2  (2 bytes)
1000     3112 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3113 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a5
1000     3114 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a5]=0x6c  eax <- 0x6c
1000     3115 8078d7c: test al, al  (2 bytes)
1000     3116 8078d7e: jne 8078d70  (2 bytes)
1000     3117 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3118 8078d73: cmp al, 0x2  (2 bytes)
1000     3119 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3120 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a6
1000     3121 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a6]=0x6f  eax <- 0x6f
1000     3122 8078d7c: test al, al  (2 bytes)
1000     3123 8078d7e: jne 8078d70  (2 bytes)
1000     3124 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x35
1000     3125 8078d73: cmp al, 0x2  (2 bytes)
1000     3126 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3127 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a7
1000     3128 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a7]=0x63  eax <- 0x63
1000     3129 8078d7c: test al, al  (2 bytes)
1000     3130 8078d7e: jne 8078d70  (2 bytes)
1000     3131 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x29
1000     3132 8078d73: cmp al, 0x2  (2 bytes)
1000     3133 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3134 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a8
1000     3135 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a8]=0x61  eax <- 0x61
1000     3136 8078d7c: test al, al  (2 bytes)
1000     3137 8078d7e: jne 8078d70  (2 bytes)
1000     3138 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x27
1000     3139 8078d73: cmp al, 0x2  (2 bytes)
1000     3140 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3141 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01a9
1000     3142 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01a9]=0x6c  eax <- 0x6c
1000     3143 8078d7c: test al, al  (2 bytes)
1000     3144 8078d7e: jne 8078d70  (2 bytes)
1000     3145 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3146 8078d73: cmp al, 0x2  (2 bytes)
1000     3147 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3148 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01aa
1000     3149 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01aa]=0x2f  eax <- 0x2f
1000     3150 8078d7c: test al, al  (2 bytes)
1000     3151 8078d7e: jne 8078d70  (2 bytes)
1000     3152 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3153 8078d73: cmp al, 0x2  (2 bytes)
1000     3154 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3155 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ab
1000     3156 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ab]=0x6e  eax <- 0x6e
1000     3157 8078d7c: test al, al  (2 bytes)
1000     3158 8078d7e: jne 8078d70  (2 bytes)
1000     3159 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x34
1000     3160 8078d73: cmp al, 0x2  (2 bytes)
1000     3161 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3162 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ac
1000     3163 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ac]=0x73  eax <- 0x73
1000     3164 8078d7c: test al, al  (2 bytes)
1000     3165 8078d7e: jne 8078d70  (2 bytes)
1000     3166 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x39
1000     3167 8078d73: cmp al, 0x2  (2 bytes)
1000     3168 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3169 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ad
1000     3170 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ad]=0x2d  eax <- 0x2d
1000     3171 8078d7c: test al, al  (2 bytes)
1000     3172 8078d7e: jne 8078d70  (2 bytes)
1000     3173 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff3
1000     3174 8078d73: cmp al, 0x2  (2 bytes)
1000     3175 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3176 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ae
1000     3177 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ae]=0x61  eax <- 0x61
1000     3178 8078d7c: test al, al  (2 bytes)
1000     3179 8078d7e: jne 8078d70  (2 bytes)
1000     3180 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x27
1000     3181 8078d73: cmp al, 0x2  (2 bytes)
1000     3182 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3183 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01af
1000     3184 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01af]=0x6c  eax <- 0x6c
1000     3185 8078d7c: test al, al  (2 bytes)
1000     3186 8078d7e: jne 8078d70  (2 bytes)
1000     3187 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3188 8078d73: cmp al, 0x2  (2 bytes)
1000     3189 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3190 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b0
1000     3191 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b0]=0x6c  eax <- 0x6c
1000     3192 8078d7c: test al, al  (2 bytes)
1000     3193 8078d7e: jne 8078d70  (2 bytes)
1000     3194 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3195 8078d73: cmp al, 0x2  (2 bytes)
1000     3196 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3197 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b1
1000     3198 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b1]=0x69  eax <- 0x69
1000     3199 8078d7c: test al, al  (2 bytes)
1000     3200 8078d7e: jne 8078d70  (2 bytes)
1000     3201 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x2f
1000     3202 8078d73: cmp al, 0x2  (2 bytes)
1000     3203 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3204 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b2
1000     3205 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b2]=0x6e  eax <- 0x6e
1000     3206 8078d7c: test al, al  (2 bytes)
1000     3207 8078d7e: jne 8078d70  (2 bytes)
1000     3208 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x34
1000     3209 8078d73: cmp al, 0x2  (2 bytes)
1000     3210 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3211 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b3
1000     3212 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b3]=0x6f  eax <- 0x6f
1000     3213 8078d7c: test al, al  (2 bytes)
1000     3214 8078d7e: jne 8078d70  (2 bytes)
1000     3215 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x35
1000     3216 8078d73: cmp al, 0x2  (2 bytes)
1000     3217 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3218 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b4
1000     3219 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b4]=0x6e  eax <- 0x6e
1000     3220 8078d7c: test al, al  (2 bytes)
1000     3221 8078d7e: jne 8078d70  (2 bytes)
1000     3222 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x34
1000     3223 8078d73: cmp al, 0x2  (2 bytes)
1000     3224 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3225 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b5
1000     3226 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b5]=0x65  eax <- 0x65
1000     3227 8078d7c: test al, al  (2 bytes)
1000     3228 8078d7e: jne 8078d70  (2 bytes)
1000     3229 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x2b
1000     3230 8078d73: cmp al, 0x2  (2 bytes)
1000     3231 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3232 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b6
1000     3233 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b6]=0x2d  eax <- 0x2d
1000     3234 8078d7c: test al, al  (2 bytes)
1000     3235 8078d7e: jne 8078d70  (2 bytes)
1000     3236 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff3
1000     3237 8078d73: cmp al, 0x2  (2 bytes)
1000     3238 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3239 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b7
1000     3240 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b7]=0x32  eax <- 0x32
1000     3241 8078d7c: test al, al  (2 bytes)
1000     3242 8078d7e: jne 8078d70  (2 bytes)
1000     3243 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff8
1000     3244 8078d73: cmp al, 0x2  (2 bytes)
1000     3245 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3246 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b8
1000     3247 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b8]=0x2e  eax <- 0x2e
1000     3248 8078d7c: test al, al  (2 bytes)
1000     3249 8078d7e: jne 8078d70  (2 bytes)
1000     3250 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff4
1000     3251 8078d73: cmp al, 0x2  (2 bytes)
1000     3252 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3253 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01b9
1000     3254 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01b9]=0x33  eax <- 0x33
1000     3255 8078d7c: test al, al  (2 bytes)
1000     3256 8078d7e: jne 8078d70  (2 bytes)
1000     3257 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff9
1000     3258 8078d73: cmp al, 0x2  (2 bytes)
1000     3259 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3260 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ba
1000     3261 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ba]=0x35  eax <- 0x35
1000     3262 8078d7c: test al, al  (2 bytes)
1000     3263 8078d7e: jne 8078d70  (2 bytes)
1000     3264 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffffb
1000     3265 8078d73: cmp al, 0x2  (2 bytes)
1000     3266 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3267 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01bb
1000     3268 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01bb]=0x2f  eax <- 0x2f
1000     3269 8078d7c: test al, al  (2 bytes)
1000     3270 8078d7e: jne 8078d70  (2 bytes)
1000     3271 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3272 8078d73: cmp al, 0x2  (2 bytes)
1000     3273 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3274 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01bc
1000     3275 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01bc]=0x6f  eax <- 0x6f
1000     3276 8078d7c: test al, al  (2 bytes)
1000     3277 8078d7e: jne 8078d70  (2 bytes)
1000     3278 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x35
1000     3279 8078d73: cmp al, 0x2  (2 bytes)
1000     3280 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3281 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01bd
1000     3282 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01bd]=0x74  eax <- 0x74
1000     3283 8078d7c: test al, al  (2 bytes)
1000     3284 8078d7e: jne 8078d70  (2 bytes)
1000     3285 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x3a
1000     3286 8078d73: cmp al, 0x2  (2 bytes)
1000     3287 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3288 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01be
1000     3289 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01be]=0x63  eax <- 0x63
1000     3290 8078d7c: test al, al  (2 bytes)
1000     3291 8078d7e: jne 8078d70  (2 bytes)
1000     3292 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x29
1000     3293 8078d73: cmp al, 0x2  (2 bytes)
1000     3294 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3295 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01bf
1000     3296 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01bf]=0x6c  eax <- 0x6c
1000     3297 8078d7c: test al, al  (2 bytes)
1000     3298 8078d7e: jne 8078d70  (2 bytes)
1000     3299 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3300 8078d73: cmp al, 0x2  (2 bytes)
1000     3301 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3302 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c0
1000     3303 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c0]=0x2d  eax <- 0x2d
1000     3304 8078d7c: test al, al  (2 bytes)
1000     3305 8078d7e: jne 8078d70  (2 bytes)
1000     3306 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff3
1000     3307 8078d73: cmp al, 0x2  (2 bytes)
1000     3308 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3309 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c1
1000     3310 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c1]=0x31  eax <- 0x31
1000     3311 8078d7c: test al, al  (2 bytes)
1000     3312 8078d7e: jne 8078d70  (2 bytes)
1000     3313 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff7
1000     3314 8078d73: cmp al, 0x2  (2 bytes)
1000     3315 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3316 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c2
1000     3317 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c2]=0x2e  eax <- 0x2e
1000     3318 8078d7c: test al, al  (2 bytes)
1000     3319 8078d7e: jne 8078d70  (2 bytes)
1000     3320 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff4
1000     3321 8078d73: cmp al, 0x2  (2 bytes)
1000     3322 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3323 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c3
1000     3324 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c3]=0x31  eax <- 0x31
1000     3325 8078d7c: test al, al  (2 bytes)
1000     3326 8078d7e: jne 8078d70  (2 bytes)
1000     3327 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff7
1000     3328 8078d73: cmp al, 0x2  (2 bytes)
1000     3329 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3330 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c4
1000     3331 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c4]=0x34  eax <- 0x34
1000     3332 8078d7c: test al, al  (2 bytes)
1000     3333 8078d7e: jne 8078d70  (2 bytes)
1000     3334 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffffa
1000     3335 8078d73: cmp al, 0x2  (2 bytes)
1000     3336 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x2
1000     3337 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c5
1000     3338 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c5]=0x3a  eax <- 0x3a
1000     3339 8078d7c: test al, al  (2 bytes)
1000     3340 8078d7e: jne 8078d70  (2 bytes)
1000     3341 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x0
1000     3342 8078d73: cmp al, 0x2  (2 bytes)
1000     3343 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3344 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c6
1000     3345 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c6]=0x2f  eax <- 0x2f
1000     3346 8078d7c: test al, al  (2 bytes)
1000     3347 8078d7e: jne 8078d70  (2 bytes)
1000     3348 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3349 8078d73: cmp al, 0x2  (2 bytes)
1000     3350 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3351 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c7
1000     3352 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c7]=0x75  eax <- 0x75
1000     3353 8078d7c: test al, al  (2 bytes)
1000     3354 8078d7e: jne 8078d70  (2 bytes)
1000     3355 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x3b
1000     3356 8078d73: cmp al, 0x2  (2 bytes)
1000     3357 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3358 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c8
1000     3359 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c8]=0x73  eax <- 0x73
1000     3360 8078d7c: test al, al  (2 bytes)
1000     3361 8078d7e: jne 8078d70  (2 bytes)
1000     3362 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x39
1000     3363 8078d73: cmp al, 0x2  (2 bytes)
1000     3364 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3365 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01c9
1000     3366 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01c9]=0x72  eax <- 0x72
1000     3367 8078d7c: test al, al  (2 bytes)
1000     3368 8078d7e: jne 8078d70  (2 bytes)
1000     3369 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x38
1000     3370 8078d73: cmp al, 0x2  (2 bytes)
1000     3371 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3372 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ca
1000     3373 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ca]=0x2f  eax <- 0x2f
1000     3374 8078d7c: test al, al  (2 bytes)
1000     3375 8078d7e: jne 8078d70  (2 bytes)
1000     3376 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3377 8078d73: cmp al, 0x2  (2 bytes)
1000     3378 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3379 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01cb
1000     3380 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01cb]=0x6c  eax <- 0x6c
1000     3381 8078d7c: test al, al  (2 bytes)
1000     3382 8078d7e: jne 8078d70  (2 bytes)
1000     3383 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3384 8078d73: cmp al, 0x2  (2 bytes)
1000     3385 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3386 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01cc
1000     3387 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01cc]=0x6f  eax <- 0x6f
1000     3388 8078d7c: test al, al  (2 bytes)
1000     3389 8078d7e: jne 8078d70  (2 bytes)
1000     3390 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x35
1000     3391 8078d73: cmp al, 0x2  (2 bytes)
1000     3392 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3393 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01cd
1000     3394 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01cd]=0x63  eax <- 0x63
1000     3395 8078d7c: test al, al  (2 bytes)
1000     3396 8078d7e: jne 8078d70  (2 bytes)
1000     3397 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x29
1000     3398 8078d73: cmp al, 0x2  (2 bytes)
1000     3399 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3400 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01ce
1000     3401 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01ce]=0x61  eax <- 0x61
1000     3402 8078d7c: test al, al  (2 bytes)
1000     3403 8078d7e: jne 8078d70  (2 bytes)
1000     3404 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x27
1000     3405 8078d73: cmp al, 0x2  (2 bytes)
1000     3406 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3407 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01cf
1000     3408 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01cf]=0x6c  eax <- 0x6c
1000     3409 8078d7c: test al, al  (2 bytes)
1000     3410 8078d7e: jne 8078d70  (2 bytes)
1000     3411 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3412 8078d73: cmp al, 0x2  (2 bytes)
1000     3413 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3414 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d0
1000     3415 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d0]=0x2f  eax <- 0x2f
1000     3416 8078d7c: test al, al  (2 bytes)
1000     3417 8078d7e: jne 8078d70  (2 bytes)
1000     3418 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3419 8078d73: cmp al, 0x2  (2 bytes)
1000     3420 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3421 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d1
1000     3422 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d1]=0x6e  eax <- 0x6e
1000     3423 8078d7c: test al, al  (2 bytes)
1000     3424 8078d7e: jne 8078d70  (2 bytes)
1000     3425 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x34
1000     3426 8078d73: cmp al, 0x2  (2 bytes)
1000     3427 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3428 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d2
1000     3429 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d2]=0x73  eax <- 0x73
1000     3430 8078d7c: test al, al  (2 bytes)
1000     3431 8078d7e: jne 8078d70  (2 bytes)
1000     3432 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x39
1000     3433 8078d73: cmp al, 0x2  (2 bytes)
1000     3434 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3435 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d3
1000     3436 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d3]=0x2d  eax <- 0x2d
1000     3437 8078d7c: test al, al  (2 bytes)
1000     3438 8078d7e: jne 8078d70  (2 bytes)
1000     3439 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff3
1000     3440 8078d73: cmp al, 0x2  (2 bytes)
1000     3441 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3442 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d4
1000     3443 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d4]=0x61  eax <- 0x61
1000     3444 8078d7c: test al, al  (2 bytes)
1000     3445 8078d7e: jne 8078d70  (2 bytes)
1000     3446 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x27
1000     3447 8078d73: cmp al, 0x2  (2 bytes)
1000     3448 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3449 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d5
1000     3450 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d5]=0x6c  eax <- 0x6c
1000     3451 8078d7c: test al, al  (2 bytes)
1000     3452 8078d7e: jne 8078d70  (2 bytes)
1000     3453 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3454 8078d73: cmp al, 0x2  (2 bytes)
1000     3455 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3456 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d6
1000     3457 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d6]=0x6c  eax <- 0x6c
1000     3458 8078d7c: test al, al  (2 bytes)
1000     3459 8078d7e: jne 8078d70  (2 bytes)
1000     3460 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3461 8078d73: cmp al, 0x2  (2 bytes)
1000     3462 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3463 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d7
1000     3464 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d7]=0x69  eax <- 0x69
1000     3465 8078d7c: test al, al  (2 bytes)
1000     3466 8078d7e: jne 8078d70  (2 bytes)
1000     3467 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x2f
1000     3468 8078d73: cmp al, 0x2  (2 bytes)
1000     3469 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3470 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d8
1000     3471 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d8]=0x6e  eax <- 0x6e
1000     3472 8078d7c: test al, al  (2 bytes)
1000     3473 8078d7e: jne 8078d70  (2 bytes)
1000     3474 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x34
1000     3475 8078d73: cmp al, 0x2  (2 bytes)
1000     3476 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3477 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01d9
1000     3478 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01d9]=0x6f  eax <- 0x6f
1000     3479 8078d7c: test al, al  (2 bytes)
1000     3480 8078d7e: jne 8078d70  (2 bytes)
1000     3481 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x35
1000     3482 8078d73: cmp al, 0x2  (2 bytes)
1000     3483 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3484 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01da
1000     3485 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01da]=0x6e  eax <- 0x6e
1000     3486 8078d7c: test al, al  (2 bytes)
1000     3487 8078d7e: jne 8078d70  (2 bytes)
1000     3488 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x34
1000     3489 8078d73: cmp al, 0x2  (2 bytes)
1000     3490 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3491 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01db
1000     3492 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01db]=0x65  eax <- 0x65
1000     3493 8078d7c: test al, al  (2 bytes)
1000     3494 8078d7e: jne 8078d70  (2 bytes)
1000     3495 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x2b
1000     3496 8078d73: cmp al, 0x2  (2 bytes)
1000     3497 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3498 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01dc
1000     3499 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01dc]=0x2d  eax <- 0x2d
1000     3500 8078d7c: test al, al  (2 bytes)
1000     3501 8078d7e: jne 8078d70  (2 bytes)
1000     3502 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff3
1000     3503 8078d73: cmp al, 0x2  (2 bytes)
1000     3504 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3505 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01dd
1000     3506 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01dd]=0x32  eax <- 0x32
1000     3507 8078d7c: test al, al  (2 bytes)
1000     3508 8078d7e: jne 8078d70  (2 bytes)
1000     3509 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff8
1000     3510 8078d73: cmp al, 0x2  (2 bytes)
1000     3511 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3512 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01de
1000     3513 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01de]=0x2e  eax <- 0x2e
1000     3514 8078d7c: test al, al  (2 bytes)
1000     3515 8078d7e: jne 8078d70  (2 bytes)
1000     3516 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff4
1000     3517 8078d73: cmp al, 0x2  (2 bytes)
1000     3518 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3519 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01df
1000     3520 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01df]=0x33  eax <- 0x33
1000     3521 8078d7c: test al, al  (2 bytes)
1000     3522 8078d7e: jne 8078d70  (2 bytes)
1000     3523 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff9
1000     3524 8078d73: cmp al, 0x2  (2 bytes)
1000     3525 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3526 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01e0
1000     3527 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01e0]=0x35  eax <- 0x35
1000     3528 8078d7c: test al, al  (2 bytes)
1000     3529 8078d7e: jne 8078d70  (2 bytes)
1000     3530 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffffb
1000     3531 8078d73: cmp al, 0x2  (2 bytes)
1000     3532 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3533 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01e1
1000     3534 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01e1]=0x2f  eax <- 0x2f
1000     3535 8078d7c: test al, al  (2 bytes)
1000     3536 8078d7e: jne 8078d70  (2 bytes)
1000     3537 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0xfffffff5
1000     3538 8078d73: cmp al, 0x2  (2 bytes)
1000     3539 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3540 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01e2
1000     3541 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01e2]=0x6c  eax <- 0x6c
1000     3542 8078d7c: test al, al  (2 bytes)
1000     3543 8078d7e: jne 8078d70  (2 bytes)
1000     3544 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x32
1000     3545 8078d73: cmp al, 0x2  (2 bytes)
1000     3546 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3547 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01e3
1000     3548 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01e3]=0x69  eax <- 0x69
1000     3549 8078d7c: test al, al  (2 bytes)
1000     3550 8078d7e: jne 8078d70  (2 bytes)
1000     3551 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x2f
1000     3552 8078d73: cmp al, 0x2  (2 bytes)
1000     3553 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3554 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01e4
1000     3555 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01e4]=0x62  eax <- 0x62
1000     3556 8078d7c: test al, al  (2 bytes)
1000     3557 8078d7e: jne 8078d70  (2 bytes)
1000     3558 8078d70: sub eax, 0x3a  (3 bytes)  eax <- 0x28
1000     3559 8078d73: cmp al, 0x2  (2 bytes)
1000     3560 8078d75: adc ecx, 0x0  (3 bytes)  ecx <- 0x3
1000     3561 8078d78: inc edx  (1 bytes)  edx <- 0xfffe01e5
1000     3562 8078d79: movzx eax, BYTE PTR [edx]  (3 bytes)  [0xfffe01e5]=0x0  eax <- 0x0
1000     3563 8078d7c: test al, al  (2 bytes)
1000     3564 8078d7e: jne 8078d70  (2 bytes)
1000     3565 8078d80: lea esi, [ecx*4+0x4]  (7 bytes)  esi <- 0x10
1000     3566 8078d87: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfe9c] <- 0x10
1000     3567 8078d8a: call 8050320  (5 bytes)
1000     3568 8050320: push ebp  (1 bytes)  esp <- 0xfffdfe94
1000     3569 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe94
1000     3570 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfe64
1000     3571 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfe90] <- 0xfffe019f
1000     3572 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x0
1000     3573 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfe88] <- 0xfffdfeb0
1000     3574 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfe8c] <- 0x10
1000     3575 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe9c]=0x10  edi <- 0x10
1000     3576 8050337: test eax, eax  (2 bytes)
1000     3577 8050339: jne 8050535  (6 bytes)
1000     3578 805033f: mov edx, 0xffffffec  (6 bytes)  edx <- 0xffffffec
1000     3579 8050345: mov ebx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d681c]=0x80d4c80  ebx <- 0x80d4c80
1000     3580 8050348: test ebx, ebx  (2 bytes)
1000     3581 805034a: je 8050428  (6 bytes)
1000     3582 8050350: mov edx, 0x1  (5 bytes)  edx <- 0x1
1000     3583 8050355: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     3584 805035d: je 8050360  (2 bytes)
1000     3585 8050360: cmpxchg DWORD PTR [ebx], edx  (3 bytes)  [0x80d4c80]=0x0  eax <- 0x0  [0x80d4c80] <- 0x1
1000     3586 8050363: test eax, eax  (2 bytes)
1000     3587 8050365: jne 8050428  (6 bytes)
1000     3588 805036b: mov edx, edi  (2 bytes)  edx <- 0x10
1000     3589 805036d: mov eax, ebx  (2 bytes)  eax <- 0x80d4c80
1000     3590 805036f: call 804ef60  (5 bytes)
1000     3591 804ef60: push ebp  (1 bytes)  esp <- 0xfffdfe5c
1000     3592 804ef61: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe5c
1000     3593 804ef63: push edi  (1 bytes)  esp <- 0xfffdfe58
1000     3594 804ef64: push esi  (1 bytes)  esp <- 0xfffdfe54
1000     3595 804ef65: mov esi, eax  (2 bytes)  esi <- 0x80d4c80
1000     3596 804ef67: push ebx  (1 bytes)  esp <- 0xfffdfe50
1000     3597 804ef68: sub esp, 0x68  (3 bytes)  esp <- 0xfffdfde8
1000     3598 804ef6b: mov DWORD PTR [ebp-0x14], edx  (3 bytes)  [0xfffdfe48] <- 0x10
1000     3599 804ef6e: cmp edx, 0xdf  (3 bytes)
1000     3600 804ef71: ja 804f3d8  (6 bytes)
1000     3601 804ef77: mov eax, edx  (2 bytes)  eax <- 0x10
1000     3602 804ef79: mov edi, 0x10  (5 bytes)  edi <- 0x10
1000     3603 804ef7e: add eax, 0xb  (3 bytes)  eax <- 0x1b
1000     3604 804ef81: cmp eax, 0xf  (3 bytes)
1000     3605 804ef84: ja 804f060  (6 bytes)
1000     3606 804f060: mov edi, eax  (2 bytes)  edi <- 0x1b
1000     3607 804f062: and edi, 0xf8  (3 bytes)  edi <- 0x18
1000     3608 804f065: cmp edi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x40
1000     3609 804f06b: ja 804efe0  (6 bytes)
1000     3610 804f071: jmp 804ef92  (5 bytes)
1000     3611 804ef92: mov eax, edi  (2 bytes)  eax <- 0x18
1000     3612 804ef94: shr eax, 0x3  (3 bytes)  eax <- 0x3
1000     3613 804ef97: sub eax, 0x2  (3 bytes)  eax <- 0x1
1000     3614 804ef9a: lea edx, [esi+eax*4+0x8]  (4 bytes)  edx <- 0x80d4c8c
1000     3615 804ef9e: mov ebx, DWORD PTR [esi+eax*4+0x8]  (4 bytes)  [0x80d4c8c]=0x0  ebx <- 0x0
1000     3616 804efa2: mov DWORD PTR [ebp-0x30], edx  (3 bytes)  [0xfffdfe2c] <- 0x80d4c8c
1000     3617 804efa5: test ebx, ebx  (2 bytes)
1000     3618 804efa7: je 804efe0  (2 bytes)
1000     3619 804efe0: cmp edi, 0x1ff  (6 bytes)
1000     3620 804efe6: ja 804f080  (6 bytes)
1000     3621 804efec: lea edx, [esi+0x38]  (3 bytes)  edx <- 0x80d4cb8
1000     3622 804efef: mov eax, edi  (2 bytes)  eax <- 0x18
1000     3623 804eff1: mov DWORD PTR [ebp-0x24], edx  (3 bytes)  [0xfffdfe38] <- 0x80d4cb8
1000     3624 804eff4: shr eax, 0x3  (3 bytes)  eax <- 0x3
1000     3625 804eff7: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdfe30] <- 0x3
1000     3626 804effa: lea eax, [edx+eax*8-0x10]  (4 bytes)  eax <- 0x80d4cc0
1000     3627 804effe: mov ebx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80d4ccc]=0x80d4cc0  ebx <- 0x80d4cc0
1000     3628 804f001: cmp ebx, eax  (2 bytes)
1000     3629 804f003: je 804f0b5  (6 bytes)
1000     3630 804f0b5: lea eax, [esi+0x30]  (3 bytes)  eax <- 0x80d4cb0
1000     3631 804f0b8: mov edx, edi  (2 bytes)  edx <- 0x18
1000     3632 804f0ba: lea ecx, [edi+0x10]  (3 bytes)  ecx <- 0x28
1000     3633 804f0bd: shr edx, 0x3  (3 bytes)  edx <- 0x3
1000     3634 804f0c0: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdfe4c] <- 0x80d4c80
1000     3635 804f0c3: mov DWORD PTR [ebp-0x38], eax  (3 bytes)  [0xfffdfe24] <- 0x80d4cb0
1000     3636 804f0c6: mov DWORD PTR [ebp-0x40], edx  (3 bytes)  [0xfffdfe1c] <- 0x3
1000     3637 804f0c9: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdfe20] <- 0x28
1000     3638 804f0cc: mov DWORD PTR [ebp-0x1c], edi  (3 bytes)  [0xfffdfe40] <- 0x18
1000     3639 804f0cf: mov esi, eax  (2 bytes)  esi <- 0x80d4cb0
1000     3640 804f0d1: mov DWORD PTR [ebp-0x18], 0x0  (7 bytes)  [0xfffdfe44] <- 0x0
1000     3641 804f0d8: mov ebx, DWORD PTR [esi+0xc]  (3 bytes)  [0x80d4cbc]=0x80d4cb0  ebx <- 0x80d4cb0
1000     3642 804f0db: cmp esi, ebx  (2 bytes)
1000     3643 804f0dd: je 804f17e  (6 bytes)
1000     3644 804f17e: cmp DWORD PTR [ebp-0x1c], 0x1ff  (7 bytes)  [0xfffdfe40]=0x18
1000     3645 804f185: jbe 804f1a4  (2 bytes)
1000     3646 804f1a4: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe30]=0x3  eax <- 0x3
1000     3647 804f1a7: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfe38]=0x80d4cb8  edx <- 0x80d4cb8
1000     3648 804f1aa: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe4c]=0x80d4c80  edi <- 0x80d4c80
1000     3649 804f1ad: lea ebx, [edx+eax*8-0x8]  (4 bytes)  ebx <- 0x80d4cc8
1000     3650 804f1b1: mov ecx, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfe30]=0x3  ecx <- 0x3
1000     3651 804f1b4: inc ecx  (1 bytes)  ecx <- 0x4
1000     3652 804f1b5: mov eax, ecx  (2 bytes)  eax <- 0x4
1000     3653 804f1b7: and ecx, 0x1f  (3 bytes)  ecx <- 0x4
1000     3654 804f1ba: shr eax, 0x5  (3 bytes)  eax <- 0x0
1000     3655 804f1bd: mov edx, DWORD PTR [edi+eax*4+0x430]  (7 bytes)  [0x80d50b0]=0x0  edx <- 0x0
1000     3656 804f1c4: mov edi, 0x1  (5 bytes)  edi <- 0x1
1000     3657 804f1c9: shl edi, cl  (2 bytes)  edi <- 0x10
1000     3658 804f1cb: mov ecx, edi  (2 bytes)  ecx <- 0x10
1000     3659 804f1cd: test ecx, ecx  (2 bytes)
1000     3660 804f1cf: je 804f1d5  (2 bytes)
1000     3661 804f1d1: cmp ecx, edx  (2 bytes)
1000     3662 804f1d3: jbe 804f204  (2 bytes)
1000     3663 804f1d5: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe4c]=0x80d4c80  edx <- 0x80d4c80
1000     3664 804f1d8: lea ecx, [edx+eax*4+0x434]  (7 bytes)  ecx <- 0x80d50b4
1000     3665 804f1df: nop  (1 bytes)
1000     3666 804f1e0: inc eax  (1 bytes)  eax <- 0x1
1000     3667 804f1e1: cmp eax, 0x3  (3 bytes)
1000     3668 804f1e4: ja 804f668  (6 bytes)
1000     3669 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b4]=0x0  edx <- 0x0
1000     3670 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50b8
1000     3671 804f1ef: test edx, edx  (2 bytes)
1000     3672 804f1f1: je 804f1e0  (2 bytes)
1000     3673 804f1e0: inc eax  (1 bytes)  eax <- 0x2
1000     3674 804f1e1: cmp eax, 0x3  (3 bytes)
1000     3675 804f1e4: ja 804f668  (6 bytes)
1000     3676 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b8]=0x0  edx <- 0x0
1000     3677 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50bc
1000     3678 804f1ef: test edx, edx  (2 bytes)
1000     3679 804f1f1: je 804f1e0  (2 bytes)
1000     3680 804f1e0: inc eax  (1 bytes)  eax <- 0x3
1000     3681 804f1e1: cmp eax, 0x3  (3 bytes)
1000     3682 804f1e4: ja 804f668  (6 bytes)
1000     3683 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50bc]=0x0  edx <- 0x0
1000     3684 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50c0
1000     3685 804f1ef: test edx, edx  (2 bytes)
1000     3686 804f1f1: je 804f1e0  (2 bytes)
1000     3687 804f1e0: inc eax  (1 bytes)  eax <- 0x4
1000     3688 804f1e1: cmp eax, 0x3  (3 bytes)
1000     3689 804f1e4: ja 804f668  (6 bytes)
1000     3690 804f668: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe4c]=0x80d4c80  eax <- 0x80d4c80
1000     3691 804f66b: mov ebx, DWORD PTR [eax+0x30]  (3 bytes)  [0x80d4cb0]=0x80d6f68  ebx <- 0x80d6f68
1000     3692 804f66e: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d6f6c]=0x21099  eax <- 0x21099
1000     3693 804f671: mov edx, eax  (2 bytes)  edx <- 0x21099
1000     3694 804f673: and edx, 0xf8  (3 bytes)  edx <- 0x21098
1000     3695 804f676: cmp edx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdfe20]=0x28
1000     3696 804f679: jae 804fb29  (6 bytes)
1000     3697 804fb29: mov edi, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe40]=0x18  edi <- 0x18
1000     3698 804fb2c: mov esi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe4c]=0x80d4c80  esi <- 0x80d4c80
1000     3699 804fb2f: lea ecx, [ebx+edi]  (3 bytes)  ecx <- 0x80d6f80
1000     3700 804fb32: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe44] <- 0x21098
1000     3701 804fb35: mov eax, edi  (2 bytes)  eax <- 0x18
1000     3702 804fb37: xor edx, edx  (2 bytes)  edx <- 0x0
1000     3703 804fb39: mov DWORD PTR [esi+0x30], ecx  (3 bytes)  [0x80d4cb0] <- 0x80d6f80
1000     3704 804fb3c: cmp esi, 0x80d4c80  (6 bytes)
1000     3705 804fb42: setne dl  (3 bytes)  dl <- 0x0
1000     3706 804fb45: or eax, 0x1  (3 bytes)  eax <- 0x19
1000     3707 804fb48: shl edx, 0x2  (3 bytes)  edx <- 0x0
1000     3708 804fb4b: or eax, edx  (2 bytes)  eax <- 0x19
1000     3709 804fb4d: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe44]=0x21098  edx <- 0x21098
1000     3710 804fb50: mov DWORD PTR [ebx+0x4], eax  (3 bytes)  [0x80d6f6c] <- 0x19
1000     3711 804fb53: sub edx, edi  (2 bytes)  edx <- 0x21080
1000     3712 804fb55: add ebx, 0x8  (3 bytes)  ebx <- 0x80d6f70
1000     3713 804fb58: mov edi, edx  (2 bytes)  edi <- 0x21080
1000     3714 804fb5a: mov eax, ds:0x80d5114  (5 bytes)  eax <- 0x0
1000     3715 804fb5f: or edi, 0x1  (3 bytes)  edi <- 0x21081
1000     3716 804fb62: mov esi, ebx  (2 bytes)  esi <- 0x80d6f70
1000     3717 804fb64: mov DWORD PTR [ecx+0x4], edi  (3 bytes)  [0x80d6f84] <- 0x21081
1000     3718 804fb67: test eax, eax  (2 bytes)
1000     3719 804fb69: je 804efd2  (6 bytes)
1000     3720 804efd2: add esp, 0x68  (3 bytes)  esp <- 0xfffdfe50
1000     3721 804efd5: mov eax, esi  (2 bytes)  eax <- 0x80d6f70
1000     3722 804efd7: pop ebx  (1 bytes)  ebx <- 0x80d4c80
1000     3723 804efd8: pop esi  (1 bytes)  esi <- 0x10
1000     3724 804efd9: pop edi  (1 bytes)  edi <- 0x10
1000     3725 804efda: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     3726 804efdb: ret  (1 bytes)
1000     3727 8050374: mov esi, eax  (2 bytes)  esi <- 0x80d6f70
1000     3728 8050376: test eax, eax  (2 bytes)
1000     3729 8050378: je 8050460  (6 bytes)
1000     3730 805037e: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     3731 8050386: je 8050389  (2 bytes)
1000     3732 8050389: sub DWORD PTR [ebx], 0x1  (3 bytes)  [0x80d4c80]=0x1  [0x80d4c80] <- 0x0
1000     3733 805038c: jne 8052501  (6 bytes)
1000     3734 8050392: lea edx, [esi-0x8]  (3 bytes)  edx <- 0x80d6f68
1000     3735 8050395: mov eax, DWORD PTR [edx+0x4]  (3 bytes)  [0x80d6f6c]=0x19  eax <- 0x19
1000     3736 8050398: test al, 0x2  (2 bytes)
1000     3737 805039a: jne 805043d  (6 bytes)
1000     3738 80503a0: mov ecx, 0x80d4c80  (5 bytes)  ecx <- 0x80d4c80
1000     3739 80503a5: test al, 0x4  (2 bytes)
1000     3740 80503a7: je 80503b1  (2 bytes)
1000     3741 80503b1: cmp ecx, ebx  (2 bytes)
1000     3742 80503b3: je 805043d  (6 bytes)
1000     3743 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6f70
1000     3744 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfe88]=0xfffdfeb0  ebx <- 0xfffdfeb0
1000     3745 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe8c]=0x10  esi <- 0x10
1000     3746 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe90]=0xfffe019f  edi <- 0xfffe019f
1000     3747 8050448: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     3748 8050449: ret  (1 bytes)
1000     3749 8078d8f: mov ds:0x80d3bc4, eax  (5 bytes)
1000     3750 8078d94: test eax, eax  (2 bytes)
1000     3751 8078d96: je 8078e11  (2 bytes)
1000     3752 8078d98: mov edx, DWORD PTR ds:0x80d3bbc  (6 bytes)  [0x80d3bbc]=0x0  edx <- 0x0
1000     3753 8078d9e: mov DWORD PTR [esp+0x8], 0x0  (8 bytes)  [0xfffdfea4] <- 0x0
1000     3754 8078da6: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdfe9c] <- 0x0
1000     3755 8078da9: mov DWORD PTR [esp+0x4], 0x80b67d2  (8 bytes)  [0xfffdfea0] <- 0x80b67d2
1000     3756 8078db1: mov edx, eax  (2 bytes)  edx <- 0x80d6f70
1000     3757 8078db3: mov ecx, 0x80baa85  (5 bytes)  ecx <- 0x80baa85
1000     3758 8078db8: mov eax, ebx  (2 bytes)  eax <- 0xfffdfeb0
1000     3759 8078dba: call 8076d50  (5 bytes)
1000     3760 8076d50: push ebp  (1 bytes)  esp <- 0xfffdfe94
1000     3761 8076d51: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe94
1000     3762 8076d53: push edi  (1 bytes)  esp <- 0xfffdfe90
1000     3763 8076d54: push esi  (1 bytes)  esp <- 0xfffdfe8c
1000     3764 8076d55: push ebx  (1 bytes)  esp <- 0xfffdfe88
1000     3765 8076d56: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe60
1000     3766 8076d59: mov DWORD PTR [ebp-0x10], eax  (3 bytes)  [0xfffdfe84] <- 0xfffdfeb0
1000     3767 8076d5c: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe7c] <- 0x80d6f70
1000     3768 8076d5f: mov DWORD PTR [ebp-0x1c], ecx  (3 bytes)  [0xfffdfe78] <- 0x80baa85
1000     3769 8076d62: mov DWORD PTR [ebp-0x14], 0x0  (7 bytes)  [0xfffdfe80] <- 0x0
1000     3770 8076d69: lea esi, [esi]  (7 bytes)  esi <- 0x10
1000     3771 8076d70: mov ecx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe78]=0x80baa85  ecx <- 0x80baa85
1000     3772 8076d73: lea eax, [ebp-0x10]  (3 bytes)  eax <- 0xfffdfe84
1000     3773 8076d76: mov DWORD PTR [esp+0x4], ecx  (4 bytes)  [0xfffdfe64] <- 0x80baa85
1000     3774 8076d7a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0xfffdfe84
1000     3775 8076d7d: call 8094110  (5 bytes)
1000     3776 8094110: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     3777 8094111: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     3778 8094113: sub esp, 0x10  (3 bytes)  esp <- 0xfffdfe48
1000     3779 8094116: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdfe54] <- 0x10
1000     3780 8094119: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdfe50] <- 0xfffdfeb0
1000     3781 809411c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0xfffdfe84  esi <- 0xfffdfe84
1000     3782 809411f: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfe64]=0x80baa85  eax <- 0x80baa85
1000     3783 8094122: mov ebx, DWORD PTR [esi]  (2 bytes)  [0xfffdfe84]=0xfffdfeb0  ebx <- 0xfffdfeb0
1000     3784 8094124: test ebx, ebx  (2 bytes)
1000     3785 8094126: je 809414b  (2 bytes)
1000     3786 8094128: movzx edx, BYTE PTR [eax]  (3 bytes)  [0x80baa85]=0x3a  edx <- 0x3a
1000     3787 809412b: test dl, dl  (2 bytes)
1000     3788 809412d: je 8094165  (2 bytes)
1000     3789 809412f: cmp BYTE PTR [eax+0x1], 0x0  (4 bytes)  [0x80baa86]=0x3b
1000     3790 8094133: je 8094158  (2 bytes)
1000     3791 8094135: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdfe4c] <- 0x80baa85
1000     3792 8094139: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdfe48] <- 0xfffdfeb0
1000     3793 809413c: call 809f020  (5 bytes)
1000     3794 809f020: mov edx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe48]=0xfffdfeb0  edx <- 0xfffdfeb0
1000     3795 809f024: mov eax, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfe4c]=0x80baa85  eax <- 0x80baa85
1000     3796 809f028: xor ecx, ecx  (2 bytes)  ecx <- 0x0
1000     3797 809f02a: push ecx  (1 bytes)  esp <- 0xfffdfe40
1000     3798 809f02b: push ecx  (1 bytes)  esp <- 0xfffdfe3c
1000     3799 809f02c: push ecx  (1 bytes)  esp <- 0xfffdfe38
1000     3800 809f02d: push ecx  (1 bytes)  esp <- 0xfffdfe34
1000     3801 809f02e: push ecx  (1 bytes)  esp <- 0xfffdfe30
1000     3802 809f02f: push ecx  (1 bytes)  esp <- 0xfffdfe2c
1000     3803 809f030: push ecx  (1 bytes)  esp <- 0xfffdfe28
1000     3804 809f031: push ecx  (1 bytes)  esp <- 0xfffdfe24
1000     3805 809f032: push ecx  (1 bytes)  esp <- 0xfffdfe20
1000     3806 809f033: push ecx  (1 bytes)  esp <- 0xfffdfe1c
1000     3807 809f034: push ecx  (1 bytes)  esp <- 0xfffdfe18
1000     3808 809f035: push ecx  (1 bytes)  esp <- 0xfffdfe14
1000     3809 809f036: push ecx  (1 bytes)  esp <- 0xfffdfe10
1000     3810 809f037: push ecx  (1 bytes)  esp <- 0xfffdfe0c
1000     3811 809f038: push ecx  (1 bytes)  esp <- 0xfffdfe08
1000     3812 809f039: push ecx  (1 bytes)  esp <- 0xfffdfe04
1000     3813 809f03a: push ecx  (1 bytes)  esp <- 0xfffdfe00
1000     3814 809f03b: push ecx  (1 bytes)  esp <- 0xfffdfdfc
1000     3815 809f03c: push ecx  (1 bytes)  esp <- 0xfffdfdf8
1000     3816 809f03d: push ecx  (1 bytes)  esp <- 0xfffdfdf4
1000     3817 809f03e: push ecx  (1 bytes)  esp <- 0xfffdfdf0
1000     3818 809f03f: push ecx  (1 bytes)  esp <- 0xfffdfdec
1000     3819 809f040: push ecx  (1 bytes)  esp <- 0xfffdfde8
1000     3820 809f041: push ecx  (1 bytes)  esp <- 0xfffdfde4
1000     3821 809f042: push ecx  (1 bytes)  esp <- 0xfffdfde0
1000     3822 809f043: push ecx  (1 bytes)  esp <- 0xfffdfddc
1000     3823 809f044: push ecx  (1 bytes)  esp <- 0xfffdfdd8
1000     3824 809f045: push ecx  (1 bytes)  esp <- 0xfffdfdd4
1000     3825 809f046: push ecx  (1 bytes)  esp <- 0xfffdfdd0
1000     3826 809f047: push ecx  (1 bytes)  esp <- 0xfffdfdcc
1000     3827 809f048: push ecx  (1 bytes)  esp <- 0xfffdfdc8
1000     3828 809f049: push ecx  (1 bytes)  esp <- 0xfffdfdc4
1000     3829 809f04a: push ecx  (1 bytes)  esp <- 0xfffdfdc0
1000     3830 809f04b: push ecx  (1 bytes)  esp <- 0xfffdfdbc
1000     3831 809f04c: push ecx  (1 bytes)  esp <- 0xfffdfdb8
1000     3832 809f04d: push ecx  (1 bytes)  esp <- 0xfffdfdb4
1000     3833 809f04e: push ecx  (1 bytes)  esp <- 0xfffdfdb0
1000     3834 809f04f: push ecx  (1 bytes)  esp <- 0xfffdfdac
1000     3835 809f050: push ecx  (1 bytes)  esp <- 0xfffdfda8
1000     3836 809f051: push ecx  (1 bytes)  esp <- 0xfffdfda4
1000     3837 809f052: push ecx  (1 bytes)  esp <- 0xfffdfda0
1000     3838 809f053: push ecx  (1 bytes)  esp <- 0xfffdfd9c
1000     3839 809f054: push ecx  (1 bytes)  esp <- 0xfffdfd98
1000     3840 809f055: push ecx  (1 bytes)  esp <- 0xfffdfd94
1000     3841 809f056: push ecx  (1 bytes)  esp <- 0xfffdfd90
1000     3842 809f057: push ecx  (1 bytes)  esp <- 0xfffdfd8c
1000     3843 809f058: push ecx  (1 bytes)  esp <- 0xfffdfd88
1000     3844 809f059: push ecx  (1 bytes)  esp <- 0xfffdfd84
1000     3845 809f05a: push ecx  (1 bytes)  esp <- 0xfffdfd80
1000     3846 809f05b: push ecx  (1 bytes)  esp <- 0xfffdfd7c
1000     3847 809f05c: push ecx  (1 bytes)  esp <- 0xfffdfd78
1000     3848 809f05d: push ecx  (1 bytes)  esp <- 0xfffdfd74
1000     3849 809f05e: push ecx  (1 bytes)  esp <- 0xfffdfd70
1000     3850 809f05f: push ecx  (1 bytes)  esp <- 0xfffdfd6c
1000     3851 809f060: push ecx  (1 bytes)  esp <- 0xfffdfd68
1000     3852 809f061: push ecx  (1 bytes)  esp <- 0xfffdfd64
1000     3853 809f062: push ecx  (1 bytes)  esp <- 0xfffdfd60
1000     3854 809f063: push ecx  (1 bytes)  esp <- 0xfffdfd5c
1000     3855 809f064: push 0x0  (2 bytes)  esp <- 0xfffdfd58
1000     3856 809f066: push 0x0  (2 bytes)  esp <- 0xfffdfd54
1000     3857 809f068: push 0x0  (2 bytes)  esp <- 0xfffdfd50
1000     3858 809f06a: push 0x0  (2 bytes)  esp <- 0xfffdfd4c
1000     3859 809f06c: push 0x0  (2 bytes)  esp <- 0xfffdfd48
1000     3860 809f06e: push 0x0  (2 bytes)  esp <- 0xfffdfd44
1000     3861 809f070: mov cl, BYTE PTR [eax]  (2 bytes)  [0x80baa85]=0x3a  cl <- 0x3a
1000     3862 809f072: test cl, cl  (2 bytes)
1000     3863 809f074: je 809f09d  (2 bytes)
1000     3864 809f076: mov BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7e] <- 0x3a
1000     3865 809f079: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0x80baa86]=0x3b  cl <- 0x3b
1000     3866 809f07c: test cl, 0xff  (3 bytes)
1000     3867 809f07f: je 809f09d  (2 bytes)
1000     3868 809f081: mov BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7f] <- 0x3b
1000     3869 809f084: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0x80baa87]=0x0  cl <- 0x0
1000     3870 809f087: test cl, 0xff  (3 bytes)
1000     3871 809f08a: je 809f09d  (2 bytes)
1000     3872 809f09d: lea eax, [edx-0x4]  (3 bytes)  eax <- 0xfffdfeac
1000     3873 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeb0
1000     3874 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfeb0]=0x3a  cl <- 0x3a
1000     3875 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7e]=0x3a
1000     3876 809f0a8: je 809f0c5  (2 bytes)
1000     3877 809f0c5: add esp, 0x100  (6 bytes)  esp <- 0xfffdfe44
1000     3878 809f0cb: or cl, cl  (2 bytes)  cl <- 0x3a
1000     3879 809f0cd: jne 809f0d2  (2 bytes)
1000     3880 809f0d2: ret  (1 bytes)
1000     3881 8094141: test eax, eax  (2 bytes)
1000     3882 8094143: je 8094165  (2 bytes)
1000     3883 8094145: mov BYTE PTR [eax], 0x0  (3 bytes)  [0xfffdfeb0] <- 0x0
1000     3884 8094148: inc eax  (1 bytes)  eax <- 0xfffdfeb1
1000     3885 8094149: mov DWORD PTR [esi], eax  (2 bytes)  [0xfffdfe84] <- 0xfffdfeb1
1000     3886 809414b: mov eax, ebx  (2 bytes)  eax <- 0xfffdfeb0
1000     3887 809414d: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x10  esi <- 0x10
1000     3888 8094150: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0xfffdfeb0  ebx <- 0xfffdfeb0
1000     3889 8094153: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     3890 8094154: ret  (1 bytes)
1000     3891 8076d82: mov edx, eax  (2 bytes)  edx <- 0xfffdfeb0
1000     3892 8076d84: test eax, eax  (2 bytes)
1000     3893 8076d86: je 8076f6a  (6 bytes)
1000     3894 8076d8c: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdfe60] <- 0xfffdfeb0
1000     3895 8076d8f: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfeb0
1000     3896 8076d92: call 80527a0  (5 bytes)
1000     3897 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0xfffdfeb0  ecx <- 0xfffdfeb0
1000     3898 80527a4: mov eax, ecx  (2 bytes)  eax <- 0xfffdfeb0
1000     3899 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x0
1000     3900 80527a9: je 80527d3  (2 bytes)
1000     3901 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffdfeb0]=0x73752f00  ecx <- 0x73752f00
1000     3902 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     3903 80527da: add edx, ecx  (2 bytes)  edx <- 0x72742dff
1000     3904 80527dc: jae 8052837  (2 bytes)
1000     3905 80527de: xor edx, ecx  (2 bytes)  edx <- 0x10102ff
1000     3906 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffffeff
1000     3907 80527e6: inc edx  (1 bytes)  edx <- 0xffffff00
1000     3908 80527e7: jne 8052837  (2 bytes)
1000     3909 8052837: test cl, cl  (2 bytes)
1000     3910 8052839: je 805284a  (2 bytes)
1000     3911 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0xfffdfeb0  eax <- 0x0
1000     3912 805284e: ret  (1 bytes)
1000     3913 8076d97: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfeb0  edx <- 0xfffdfeb0
1000     3914 8076d9a: mov ebx, eax  (2 bytes)  ebx <- 0x0
1000     3915 8076d9c: test eax, eax  (2 bytes)
1000     3916 8076d9e: jne 8076f20  (6 bytes)
1000     3917 8076da4: mov edx, 0x80b8b75  (5 bytes)  edx <- 0x80b8b75
1000     3918 8076da9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe9c]=0x0  esi <- 0x0
1000     3919 8076dac: test esi, esi  (2 bytes)
1000     3920 8076dae: jne 8076f8f  (6 bytes)
1000     3921 8076db4: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6ce8
1000     3922 8076db9: test eax, eax  (2 bytes)
1000     3923 8076dbb: je 8076e33  (2 bytes)
1000     3924 8076dbd: mov DWORD PTR [ebp-0x28], edx  (3 bytes)  [0xfffdfe6c] <- 0x80b8b75
1000     3925 8076dc0: jmp 8076dce  (2 bytes)
1000     3926 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6cf8]=0x5
1000     3927 8076dd1: jne 8076dc8  (2 bytes)
1000     3928 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6ce8]=0x80d6d10  eax <- 0x80d6d10
1000     3929 8076dca: test eax, eax  (2 bytes)
1000     3930 8076dcc: je 8076e30  (2 bytes)
1000     3931 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6d20]=0x9
1000     3932 8076dd1: jne 8076dc8  (2 bytes)
1000     3933 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6d10]=0x0  eax <- 0x0
1000     3934 8076dca: test eax, eax  (2 bytes)
1000     3935 8076dcc: je 8076e30  (2 bytes)
1000     3936 8076e30: mov edx, DWORD PTR [ebp-0x28]  (3 bytes)  [0xfffdfe6c]=0x80b8b75  edx <- 0x80b8b75
1000     3937 8076e33: xor edi, edi  (2 bytes)  edi <- 0x0
1000     3938 8076e35: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdfea4]=0x0  ecx <- 0x0
1000     3939 8076e38: test ecx, ecx  (2 bytes)
1000     3940 8076e3a: je 8076e50  (2 bytes)
1000     3941 8076e50: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     3942 8076e55: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0x80b8b75
1000     3943 8076e58: lea eax, [ebx+eax*4+0x15]  (4 bytes)  eax <- 0x19
1000     3944 8076e5c: add eax, edi  (2 bytes)  eax <- 0x19
1000     3945 8076e5e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0x19
1000     3946 8076e61: call 8050320  (5 bytes)
1000     3947 8050320: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     3948 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     3949 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfe28
1000     3950 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfe54] <- 0x0
1000     3951 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x0
1000     3952 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfe4c] <- 0x0
1000     3953 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfe50] <- 0x0
1000     3954 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0x19  edi <- 0x19
1000     3955 8050337: test eax, eax  (2 bytes)
1000     3956 8050339: jne 8050535  (6 bytes)
1000     3957 805033f: mov edx, 0xffffffec  (6 bytes)  edx <- 0xffffffec
1000     3958 8050345: mov ebx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d681c]=0x80d4c80  ebx <- 0x80d4c80
1000     3959 8050348: test ebx, ebx  (2 bytes)
1000     3960 805034a: je 8050428  (6 bytes)
1000     3961 8050350: mov edx, 0x1  (5 bytes)  edx <- 0x1
1000     3962 8050355: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     3963 805035d: je 8050360  (2 bytes)
1000     3964 8050360: cmpxchg DWORD PTR [ebx], edx  (3 bytes)  [0x80d4c80]=0x0  eax <- 0x0  [0x80d4c80] <- 0x1
1000     3965 8050363: test eax, eax  (2 bytes)
1000     3966 8050365: jne 8050428  (6 bytes)
1000     3967 805036b: mov edx, edi  (2 bytes)  edx <- 0x19
1000     3968 805036d: mov eax, ebx  (2 bytes)  eax <- 0x80d4c80
1000     3969 805036f: call 804ef60  (5 bytes)
1000     3970 804ef60: push ebp  (1 bytes)  esp <- 0xfffdfe20
1000     3971 804ef61: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe20
1000     3972 804ef63: push edi  (1 bytes)  esp <- 0xfffdfe1c
1000     3973 804ef64: push esi  (1 bytes)  esp <- 0xfffdfe18
1000     3974 804ef65: mov esi, eax  (2 bytes)  esi <- 0x80d4c80
1000     3975 804ef67: push ebx  (1 bytes)  esp <- 0xfffdfe14
1000     3976 804ef68: sub esp, 0x68  (3 bytes)  esp <- 0xfffdfdac
1000     3977 804ef6b: mov DWORD PTR [ebp-0x14], edx  (3 bytes)  [0xfffdfe0c] <- 0x19
1000     3978 804ef6e: cmp edx, 0xdf  (3 bytes)
1000     3979 804ef71: ja 804f3d8  (6 bytes)
1000     3980 804ef77: mov eax, edx  (2 bytes)  eax <- 0x19
1000     3981 804ef79: mov edi, 0x10  (5 bytes)  edi <- 0x10
1000     3982 804ef7e: add eax, 0xb  (3 bytes)  eax <- 0x24
1000     3983 804ef81: cmp eax, 0xf  (3 bytes)
1000     3984 804ef84: ja 804f060  (6 bytes)
1000     3985 804f060: mov edi, eax  (2 bytes)  edi <- 0x24
1000     3986 804f062: and edi, 0xf8  (3 bytes)  edi <- 0x20
1000     3987 804f065: cmp edi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x40
1000     3988 804f06b: ja 804efe0  (6 bytes)
1000     3989 804f071: jmp 804ef92  (5 bytes)
1000     3990 804ef92: mov eax, edi  (2 bytes)  eax <- 0x20
1000     3991 804ef94: shr eax, 0x3  (3 bytes)  eax <- 0x4
1000     3992 804ef97: sub eax, 0x2  (3 bytes)  eax <- 0x2
1000     3993 804ef9a: lea edx, [esi+eax*4+0x8]  (4 bytes)  edx <- 0x80d4c90
1000     3994 804ef9e: mov ebx, DWORD PTR [esi+eax*4+0x8]  (4 bytes)  [0x80d4c90]=0x0  ebx <- 0x0
1000     3995 804efa2: mov DWORD PTR [ebp-0x30], edx  (3 bytes)  [0xfffdfdf0] <- 0x80d4c90
1000     3996 804efa5: test ebx, ebx  (2 bytes)
1000     3997 804efa7: je 804efe0  (2 bytes)
1000     3998 804efe0: cmp edi, 0x1ff  (6 bytes)
1000     3999 804efe6: ja 804f080  (6 bytes)
1000     4000 804efec: lea edx, [esi+0x38]  (3 bytes)  edx <- 0x80d4cb8
1000     4001 804efef: mov eax, edi  (2 bytes)  eax <- 0x20
1000     4002 804eff1: mov DWORD PTR [ebp-0x24], edx  (3 bytes)  [0xfffdfdfc] <- 0x80d4cb8
1000     4003 804eff4: shr eax, 0x3  (3 bytes)  eax <- 0x4
1000     4004 804eff7: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdfdf4] <- 0x4
1000     4005 804effa: lea eax, [edx+eax*8-0x10]  (4 bytes)  eax <- 0x80d4cc8
1000     4006 804effe: mov ebx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80d4cd4]=0x80d4cc8  ebx <- 0x80d4cc8
1000     4007 804f001: cmp ebx, eax  (2 bytes)
1000     4008 804f003: je 804f0b5  (6 bytes)
1000     4009 804f0b5: lea eax, [esi+0x30]  (3 bytes)  eax <- 0x80d4cb0
1000     4010 804f0b8: mov edx, edi  (2 bytes)  edx <- 0x20
1000     4011 804f0ba: lea ecx, [edi+0x10]  (3 bytes)  ecx <- 0x30
1000     4012 804f0bd: shr edx, 0x3  (3 bytes)  edx <- 0x4
1000     4013 804f0c0: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdfe10] <- 0x80d4c80
1000     4014 804f0c3: mov DWORD PTR [ebp-0x38], eax  (3 bytes)  [0xfffdfde8] <- 0x80d4cb0
1000     4015 804f0c6: mov DWORD PTR [ebp-0x40], edx  (3 bytes)  [0xfffdfde0] <- 0x4
1000     4016 804f0c9: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdfde4] <- 0x30
1000     4017 804f0cc: mov DWORD PTR [ebp-0x1c], edi  (3 bytes)  [0xfffdfe04] <- 0x20
1000     4018 804f0cf: mov esi, eax  (2 bytes)  esi <- 0x80d4cb0
1000     4019 804f0d1: mov DWORD PTR [ebp-0x18], 0x0  (7 bytes)  [0xfffdfe08] <- 0x0
1000     4020 804f0d8: mov ebx, DWORD PTR [esi+0xc]  (3 bytes)  [0x80d4cbc]=0x80d4cb0  ebx <- 0x80d4cb0
1000     4021 804f0db: cmp esi, ebx  (2 bytes)
1000     4022 804f0dd: je 804f17e  (6 bytes)
1000     4023 804f17e: cmp DWORD PTR [ebp-0x1c], 0x1ff  (7 bytes)  [0xfffdfe04]=0x20
1000     4024 804f185: jbe 804f1a4  (2 bytes)
1000     4025 804f1a4: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfdf4]=0x4  eax <- 0x4
1000     4026 804f1a7: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfdfc]=0x80d4cb8  edx <- 0x80d4cb8
1000     4027 804f1aa: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  edi <- 0x80d4c80
1000     4028 804f1ad: lea ebx, [edx+eax*8-0x8]  (4 bytes)  ebx <- 0x80d4cd0
1000     4029 804f1b1: mov ecx, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfdf4]=0x4  ecx <- 0x4
1000     4030 804f1b4: inc ecx  (1 bytes)  ecx <- 0x5
1000     4031 804f1b5: mov eax, ecx  (2 bytes)  eax <- 0x5
1000     4032 804f1b7: and ecx, 0x1f  (3 bytes)  ecx <- 0x5
1000     4033 804f1ba: shr eax, 0x5  (3 bytes)  eax <- 0x0
1000     4034 804f1bd: mov edx, DWORD PTR [edi+eax*4+0x430]  (7 bytes)  [0x80d50b0]=0x0  edx <- 0x0
1000     4035 804f1c4: mov edi, 0x1  (5 bytes)  edi <- 0x1
1000     4036 804f1c9: shl edi, cl  (2 bytes)  edi <- 0x20
1000     4037 804f1cb: mov ecx, edi  (2 bytes)  ecx <- 0x20
1000     4038 804f1cd: test ecx, ecx  (2 bytes)
1000     4039 804f1cf: je 804f1d5  (2 bytes)
1000     4040 804f1d1: cmp ecx, edx  (2 bytes)
1000     4041 804f1d3: jbe 804f204  (2 bytes)
1000     4042 804f1d5: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  edx <- 0x80d4c80
1000     4043 804f1d8: lea ecx, [edx+eax*4+0x434]  (7 bytes)  ecx <- 0x80d50b4
1000     4044 804f1df: nop  (1 bytes)
1000     4045 804f1e0: inc eax  (1 bytes)  eax <- 0x1
1000     4046 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4047 804f1e4: ja 804f668  (6 bytes)
1000     4048 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b4]=0x0  edx <- 0x0
1000     4049 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50b8
1000     4050 804f1ef: test edx, edx  (2 bytes)
1000     4051 804f1f1: je 804f1e0  (2 bytes)
1000     4052 804f1e0: inc eax  (1 bytes)  eax <- 0x2
1000     4053 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4054 804f1e4: ja 804f668  (6 bytes)
1000     4055 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b8]=0x0  edx <- 0x0
1000     4056 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50bc
1000     4057 804f1ef: test edx, edx  (2 bytes)
1000     4058 804f1f1: je 804f1e0  (2 bytes)
1000     4059 804f1e0: inc eax  (1 bytes)  eax <- 0x3
1000     4060 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4061 804f1e4: ja 804f668  (6 bytes)
1000     4062 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50bc]=0x0  edx <- 0x0
1000     4063 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50c0
1000     4064 804f1ef: test edx, edx  (2 bytes)
1000     4065 804f1f1: je 804f1e0  (2 bytes)
1000     4066 804f1e0: inc eax  (1 bytes)  eax <- 0x4
1000     4067 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4068 804f1e4: ja 804f668  (6 bytes)
1000     4069 804f668: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  eax <- 0x80d4c80
1000     4070 804f66b: mov ebx, DWORD PTR [eax+0x30]  (3 bytes)  [0x80d4cb0]=0x80d6f80  ebx <- 0x80d6f80
1000     4071 804f66e: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d6f84]=0x21081  eax <- 0x21081
1000     4072 804f671: mov edx, eax  (2 bytes)  edx <- 0x21081
1000     4073 804f673: and edx, 0xf8  (3 bytes)  edx <- 0x21080
1000     4074 804f676: cmp edx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdfde4]=0x30
1000     4075 804f679: jae 804fb29  (6 bytes)
1000     4076 804fb29: mov edi, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe04]=0x20  edi <- 0x20
1000     4077 804fb2c: mov esi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  esi <- 0x80d4c80
1000     4078 804fb2f: lea ecx, [ebx+edi]  (3 bytes)  ecx <- 0x80d6fa0
1000     4079 804fb32: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe08] <- 0x21080
1000     4080 804fb35: mov eax, edi  (2 bytes)  eax <- 0x20
1000     4081 804fb37: xor edx, edx  (2 bytes)  edx <- 0x0
1000     4082 804fb39: mov DWORD PTR [esi+0x30], ecx  (3 bytes)  [0x80d4cb0] <- 0x80d6fa0
1000     4083 804fb3c: cmp esi, 0x80d4c80  (6 bytes)
1000     4084 804fb42: setne dl  (3 bytes)  dl <- 0x0
1000     4085 804fb45: or eax, 0x1  (3 bytes)  eax <- 0x21
1000     4086 804fb48: shl edx, 0x2  (3 bytes)  edx <- 0x0
1000     4087 804fb4b: or eax, edx  (2 bytes)  eax <- 0x21
1000     4088 804fb4d: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe08]=0x21080  edx <- 0x21080
1000     4089 804fb50: mov DWORD PTR [ebx+0x4], eax  (3 bytes)  [0x80d6f84] <- 0x21
1000     4090 804fb53: sub edx, edi  (2 bytes)  edx <- 0x21060
1000     4091 804fb55: add ebx, 0x8  (3 bytes)  ebx <- 0x80d6f88
1000     4092 804fb58: mov edi, edx  (2 bytes)  edi <- 0x21060
1000     4093 804fb5a: mov eax, ds:0x80d5114  (5 bytes)  eax <- 0x0
1000     4094 804fb5f: or edi, 0x1  (3 bytes)  edi <- 0x21061
1000     4095 804fb62: mov esi, ebx  (2 bytes)  esi <- 0x80d6f88
1000     4096 804fb64: mov DWORD PTR [ecx+0x4], edi  (3 bytes)  [0x80d6fa4] <- 0x21061
1000     4097 804fb67: test eax, eax  (2 bytes)
1000     4098 804fb69: je 804efd2  (6 bytes)
1000     4099 804efd2: add esp, 0x68  (3 bytes)  esp <- 0xfffdfe14
1000     4100 804efd5: mov eax, esi  (2 bytes)  eax <- 0x80d6f88
1000     4101 804efd7: pop ebx  (1 bytes)  ebx <- 0x80d4c80
1000     4102 804efd8: pop esi  (1 bytes)  esi <- 0x0
1000     4103 804efd9: pop edi  (1 bytes)  edi <- 0x19
1000     4104 804efda: leave  (1 bytes)  ebp <- 0xfffdfe58
1000     4105 804efdb: ret  (1 bytes)
1000     4106 8050374: mov esi, eax  (2 bytes)  esi <- 0x80d6f88
1000     4107 8050376: test eax, eax  (2 bytes)
1000     4108 8050378: je 8050460  (6 bytes)
1000     4109 805037e: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     4110 8050386: je 8050389  (2 bytes)
1000     4111 8050389: sub DWORD PTR [ebx], 0x1  (3 bytes)  [0x80d4c80]=0x1  [0x80d4c80] <- 0x0
1000     4112 805038c: jne 8052501  (6 bytes)
1000     4113 8050392: lea edx, [esi-0x8]  (3 bytes)  edx <- 0x80d6f80
1000     4114 8050395: mov eax, DWORD PTR [edx+0x4]  (3 bytes)  [0x80d6f84]=0x21  eax <- 0x21
1000     4115 8050398: test al, 0x2  (2 bytes)
1000     4116 805039a: jne 805043d  (6 bytes)
1000     4117 80503a0: mov ecx, 0x80d4c80  (5 bytes)  ecx <- 0x80d4c80
1000     4118 80503a5: test al, 0x4  (2 bytes)
1000     4119 80503a7: je 80503b1  (2 bytes)
1000     4120 80503b1: cmp ecx, ebx  (2 bytes)
1000     4121 80503b3: je 805043d  (6 bytes)
1000     4122 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6f88
1000     4123 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfe4c]=0x0  ebx <- 0x0
1000     4124 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0x0  esi <- 0x0
1000     4125 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x0  edi <- 0x0
1000     4126 8050448: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     4127 8050449: ret  (1 bytes)
1000     4128 8076e66: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0x80b8b75  edx <- 0x80b8b75
1000     4129 8076e69: mov esi, eax  (2 bytes)  esi <- 0x80d6f88
1000     4130 8076e6b: test eax, eax  (2 bytes)
1000     4131 8076e6d: je 8076fbd  (6 bytes)
1000     4132 8076e73: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     4133 8076e78: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0x80b8b75
1000     4134 8076e7b: lea eax, [esi+eax*4+0x14]  (4 bytes)  eax <- 0x80d6fa0
1000     4135 8076e7f: mov DWORD PTR [esi+0xc], eax  (3 bytes)  [0x80d6f94] <- 0x80d6fa0
1000     4136 8076e82: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfe64] <- 0x80b8b75
1000     4137 8076e86: mov DWORD PTR [esp+0x8], ebx  (4 bytes)  [0xfffdfe68] <- 0x0
1000     4138 8076e8a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0x80d6fa0
1000     4139 8076e8d: call 8052bf0  (5 bytes)
1000     4140 8052bf0: mov ecx, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdfe68]=0x0  ecx <- 0x0
1000     4141 8052bf4: mov eax, edi  (2 bytes)  eax <- 0x0
1000     4142 8052bf6: mov edi, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0x80d6fa0  edi <- 0x80d6fa0
1000     4143 8052bfa: mov edx, esi  (2 bytes)  edx <- 0x80d6f88
1000     4144 8052bfc: mov esi, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfe64]=0x80b8b75  esi <- 0x80b8b75
1000     4145 8052c00: cld  (1 bytes)
1000     4146 8052c01: shr ecx, 1  (2 bytes)  ecx <- 0x0
1000     4147 8052c03: jae 8052c06  (2 bytes)
1000     4148 8052c06: shr ecx, 1  (2 bytes)  ecx <- 0x0
1000     4149 8052c08: jae 8052c0c  (2 bytes)
1000     4150 8052c0c: rep movsd  (2 bytes)
1000     4151 8052c0e: xchg edi, eax  (1 bytes)  eax <- 0x80d6fa0  edi <- 0x0
1000     4152 8052c0f: mov esi, edx  (2 bytes)  esi <- 0x80d6f88
1000     4153 8052c11: ret  (1 bytes)
1000     4154 8076e92: mov BYTE PTR [eax], 0x0  (3 bytes)  [0x80d6fa0] <- 0x0
1000     4155 8076e95: mov DWORD PTR [esi+0x10], ebx  (3 bytes)  [0x80d6f98] <- 0x0
1000     4156 8076e98: cmp ebx, DWORD PTR ds:0x80d5950  (6 bytes)  [0x80d5950]=0x9
1000     4157 8076e9e: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0x80b8b75  edx <- 0x80b8b75
1000     4158 8076ea1: jbe 8076ea9  (2 bytes)
1000     4159 8076ea9: cmp BYTE PTR [edx], 0x2f  (3 bytes)  [0x80b8b75]=0x2e
1000     4160 8076eac: mov ecx, DWORD PTR ds:0x80d3bd0  (6 bytes)  [0x80d3bd0]=0x1  ecx <- 0x1
1000     4161 8076eb2: setne dl  (3 bytes)  dl <- 0x1
1000     4162 8076eb5: movzx edx, dl  (3 bytes)  edx <- 0x1
1000     4163 8076eb8: add edx, edx  (2 bytes)  edx <- 0x2
1000     4164 8076eba: test ecx, ecx  (2 bytes)
1000     4165 8076ebc: je 8076ec9  (2 bytes)
1000     4166 8076ebe: xor eax, eax  (2 bytes)  eax <- 0x0
1000     4167 8076ec0: mov DWORD PTR [esi+eax*4+0x14], edx  (4 bytes)  [0x80d6f9c] <- 0x2
1000     4168 8076ec4: inc eax  (1 bytes)  eax <- 0x1
1000     4169 8076ec5: cmp ecx, eax  (2 bytes)
1000     4170 8076ec7: ja 8076ec0  (2 bytes)
1000     4171 8076ec9: mov edx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfea0]=0x80b67d2  edx <- 0x80b67d2
1000     4172 8076ecc: mov eax, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdfea4]=0x0  eax <- 0x0
1000     4173 8076ecf: mov DWORD PTR [esi+0x4], edx  (3 bytes)  [0x80d6f8c] <- 0x80b67d2
1000     4174 8076ed2: test eax, eax  (2 bytes)
1000     4175 8076ed4: je 8076fb1  (6 bytes)
1000     4176 8076fb1: mov DWORD PTR [esi+0x8], 0x0  (7 bytes)  [0x80d6f90] <- 0x0
1000     4177 8076fb8: jmp 8076ef7  (5 bytes)
1000     4178 8076ef7: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6ce8
1000     4179 8076efc: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe7c]=0x80d6f70  edx <- 0x80d6f70
1000     4180 8076eff: mov DWORD PTR [esi], eax  (2 bytes)  [0x80d6f88] <- 0x80d6ce8
1000     4181 8076f01: mov eax, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfe80]=0x0  eax <- 0x0
1000     4182 8076f04: mov DWORD PTR ds:0x80d5d50, esi  (6 bytes)  [0x80d5d50] <- 0x80d6f88
1000     4183 8076f0a: mov DWORD PTR [edx+eax*4], esi  (3 bytes)  [0x80d6f70] <- 0x80d6f88
1000     4184 8076f0d: inc eax  (1 bytes)  eax <- 0x1
1000     4185 8076f0e: mov DWORD PTR [ebp-0x14], eax  (3 bytes)  [0xfffdfe80] <- 0x1
1000     4186 8076f11: jmp 8076d70  (5 bytes)
1000     4187 8076d70: mov ecx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe78]=0x80baa85  ecx <- 0x80baa85
1000     4188 8076d73: lea eax, [ebp-0x10]  (3 bytes)  eax <- 0xfffdfe84
1000     4189 8076d76: mov DWORD PTR [esp+0x4], ecx  (4 bytes)  [0xfffdfe64] <- 0x80baa85
1000     4190 8076d7a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0xfffdfe84
1000     4191 8076d7d: call 8094110  (5 bytes)
1000     4192 8094110: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     4193 8094111: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     4194 8094113: sub esp, 0x10  (3 bytes)  esp <- 0xfffdfe48
1000     4195 8094116: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdfe54] <- 0x80d6f88
1000     4196 8094119: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdfe50] <- 0x0
1000     4197 809411c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0xfffdfe84  esi <- 0xfffdfe84
1000     4198 809411f: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfe64]=0x80baa85  eax <- 0x80baa85
1000     4199 8094122: mov ebx, DWORD PTR [esi]  (2 bytes)  [0xfffdfe84]=0xfffdfeb1  ebx <- 0xfffdfeb1
1000     4200 8094124: test ebx, ebx  (2 bytes)
1000     4201 8094126: je 809414b  (2 bytes)
1000     4202 8094128: movzx edx, BYTE PTR [eax]  (3 bytes)  [0x80baa85]=0x3a  edx <- 0x3a
1000     4203 809412b: test dl, dl  (2 bytes)
1000     4204 809412d: je 8094165  (2 bytes)
1000     4205 809412f: cmp BYTE PTR [eax+0x1], 0x0  (4 bytes)  [0x80baa86]=0x3b
1000     4206 8094133: je 8094158  (2 bytes)
1000     4207 8094135: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdfe4c] <- 0x80baa85
1000     4208 8094139: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdfe48] <- 0xfffdfeb1
1000     4209 809413c: call 809f020  (5 bytes)
1000     4210 809f020: mov edx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe48]=0xfffdfeb1  edx <- 0xfffdfeb1
1000     4211 809f024: mov eax, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfe4c]=0x80baa85  eax <- 0x80baa85
1000     4212 809f028: xor ecx, ecx  (2 bytes)  ecx <- 0x0
1000     4213 809f02a: push ecx  (1 bytes)  esp <- 0xfffdfe40
1000     4214 809f02b: push ecx  (1 bytes)  esp <- 0xfffdfe3c
1000     4215 809f02c: push ecx  (1 bytes)  esp <- 0xfffdfe38
1000     4216 809f02d: push ecx  (1 bytes)  esp <- 0xfffdfe34
1000     4217 809f02e: push ecx  (1 bytes)  esp <- 0xfffdfe30
1000     4218 809f02f: push ecx  (1 bytes)  esp <- 0xfffdfe2c
1000     4219 809f030: push ecx  (1 bytes)  esp <- 0xfffdfe28
1000     4220 809f031: push ecx  (1 bytes)  esp <- 0xfffdfe24
1000     4221 809f032: push ecx  (1 bytes)  esp <- 0xfffdfe20
1000     4222 809f033: push ecx  (1 bytes)  esp <- 0xfffdfe1c
1000     4223 809f034: push ecx  (1 bytes)  esp <- 0xfffdfe18
1000     4224 809f035: push ecx  (1 bytes)  esp <- 0xfffdfe14
1000     4225 809f036: push ecx  (1 bytes)  esp <- 0xfffdfe10
1000     4226 809f037: push ecx  (1 bytes)  esp <- 0xfffdfe0c
1000     4227 809f038: push ecx  (1 bytes)  esp <- 0xfffdfe08
1000     4228 809f039: push ecx  (1 bytes)  esp <- 0xfffdfe04
1000     4229 809f03a: push ecx  (1 bytes)  esp <- 0xfffdfe00
1000     4230 809f03b: push ecx  (1 bytes)  esp <- 0xfffdfdfc
1000     4231 809f03c: push ecx  (1 bytes)  esp <- 0xfffdfdf8
1000     4232 809f03d: push ecx  (1 bytes)  esp <- 0xfffdfdf4
1000     4233 809f03e: push ecx  (1 bytes)  esp <- 0xfffdfdf0
1000     4234 809f03f: push ecx  (1 bytes)  esp <- 0xfffdfdec
1000     4235 809f040: push ecx  (1 bytes)  esp <- 0xfffdfde8
1000     4236 809f041: push ecx  (1 bytes)  esp <- 0xfffdfde4
1000     4237 809f042: push ecx  (1 bytes)  esp <- 0xfffdfde0
1000     4238 809f043: push ecx  (1 bytes)  esp <- 0xfffdfddc
1000     4239 809f044: push ecx  (1 bytes)  esp <- 0xfffdfdd8
1000     4240 809f045: push ecx  (1 bytes)  esp <- 0xfffdfdd4
1000     4241 809f046: push ecx  (1 bytes)  esp <- 0xfffdfdd0
1000     4242 809f047: push ecx  (1 bytes)  esp <- 0xfffdfdcc
1000     4243 809f048: push ecx  (1 bytes)  esp <- 0xfffdfdc8
1000     4244 809f049: push ecx  (1 bytes)  esp <- 0xfffdfdc4
1000     4245 809f04a: push ecx  (1 bytes)  esp <- 0xfffdfdc0
1000     4246 809f04b: push ecx  (1 bytes)  esp <- 0xfffdfdbc
1000     4247 809f04c: push ecx  (1 bytes)  esp <- 0xfffdfdb8
1000     4248 809f04d: push ecx  (1 bytes)  esp <- 0xfffdfdb4
1000     4249 809f04e: push ecx  (1 bytes)  esp <- 0xfffdfdb0
1000     4250 809f04f: push ecx  (1 bytes)  esp <- 0xfffdfdac
1000     4251 809f050: push ecx  (1 bytes)  esp <- 0xfffdfda8
1000     4252 809f051: push ecx  (1 bytes)  esp <- 0xfffdfda4
1000     4253 809f052: push ecx  (1 bytes)  esp <- 0xfffdfda0
1000     4254 809f053: push ecx  (1 bytes)  esp <- 0xfffdfd9c
1000     4255 809f054: push ecx  (1 bytes)  esp <- 0xfffdfd98
1000     4256 809f055: push ecx  (1 bytes)  esp <- 0xfffdfd94
1000     4257 809f056: push ecx  (1 bytes)  esp <- 0xfffdfd90
1000     4258 809f057: push ecx  (1 bytes)  esp <- 0xfffdfd8c
1000     4259 809f058: push ecx  (1 bytes)  esp <- 0xfffdfd88
1000     4260 809f059: push ecx  (1 bytes)  esp <- 0xfffdfd84
1000     4261 809f05a: push ecx  (1 bytes)  esp <- 0xfffdfd80
1000     4262 809f05b: push ecx  (1 bytes)  esp <- 0xfffdfd7c
1000     4263 809f05c: push ecx  (1 bytes)  esp <- 0xfffdfd78
1000     4264 809f05d: push ecx  (1 bytes)  esp <- 0xfffdfd74
1000     4265 809f05e: push ecx  (1 bytes)  esp <- 0xfffdfd70
1000     4266 809f05f: push ecx  (1 bytes)  esp <- 0xfffdfd6c
1000     4267 809f060: push ecx  (1 bytes)  esp <- 0xfffdfd68
1000     4268 809f061: push ecx  (1 bytes)  esp <- 0xfffdfd64
1000     4269 809f062: push ecx  (1 bytes)  esp <- 0xfffdfd60
1000     4270 809f063: push ecx  (1 bytes)  esp <- 0xfffdfd5c
1000     4271 809f064: push 0x0  (2 bytes)  esp <- 0xfffdfd58
1000     4272 809f066: push 0x0  (2 bytes)  esp <- 0xfffdfd54
1000     4273 809f068: push 0x0  (2 bytes)  esp <- 0xfffdfd50
1000     4274 809f06a: push 0x0  (2 bytes)  esp <- 0xfffdfd4c
1000     4275 809f06c: push 0x0  (2 bytes)  esp <- 0xfffdfd48
1000     4276 809f06e: push 0x0  (2 bytes)  esp <- 0xfffdfd44
1000     4277 809f070: mov cl, BYTE PTR [eax]  (2 bytes)  [0x80baa85]=0x3a  cl <- 0x3a
1000     4278 809f072: test cl, cl  (2 bytes)
1000     4279 809f074: je 809f09d  (2 bytes)
1000     4280 809f076: mov BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7e] <- 0x3a
1000     4281 809f079: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0x80baa86]=0x3b  cl <- 0x3b
1000     4282 809f07c: test cl, 0xff  (3 bytes)
1000     4283 809f07f: je 809f09d  (2 bytes)
1000     4284 809f081: mov BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7f] <- 0x3b
1000     4285 809f084: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0x80baa87]=0x0  cl <- 0x0
1000     4286 809f087: test cl, 0xff  (3 bytes)
1000     4287 809f08a: je 809f09d  (2 bytes)
1000     4288 809f09d: lea eax, [edx-0x4]  (3 bytes)  eax <- 0xfffdfead
1000     4289 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeb1
1000     4290 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfeb1]=0x2f  cl <- 0x2f
1000     4291 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4292 809f0a8: je 809f0c5  (2 bytes)
1000     4293 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfeb2]=0x75  cl <- 0x75
1000     4294 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb9]=0x0
1000     4295 809f0b0: je 809f0c4  (2 bytes)
1000     4296 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfeb3]=0x73  cl <- 0x73
1000     4297 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb7]=0x0
1000     4298 809f0b8: je 809f0c3  (2 bytes)
1000     4299 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfeb4]=0x72  cl <- 0x72
1000     4300 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb6]=0x0
1000     4301 809f0c0: jne 809f0a0  (2 bytes)
1000     4302 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeb5
1000     4303 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfeb5]=0x2f  cl <- 0x2f
1000     4304 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4305 809f0a8: je 809f0c5  (2 bytes)
1000     4306 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfeb6]=0x6c  cl <- 0x6c
1000     4307 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4308 809f0b0: je 809f0c4  (2 bytes)
1000     4309 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfeb7]=0x6f  cl <- 0x6f
1000     4310 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb3]=0x0
1000     4311 809f0b8: je 809f0c3  (2 bytes)
1000     4312 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfeb8]=0x63  cl <- 0x63
1000     4313 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda7]=0x0
1000     4314 809f0c0: jne 809f0a0  (2 bytes)
1000     4315 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeb9
1000     4316 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfeb9]=0x61  cl <- 0x61
1000     4317 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda5]=0x0
1000     4318 809f0a8: je 809f0c5  (2 bytes)
1000     4319 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfeba]=0x6c  cl <- 0x6c
1000     4320 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4321 809f0b0: je 809f0c4  (2 bytes)
1000     4322 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfebb]=0x2f  cl <- 0x2f
1000     4323 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4324 809f0b8: je 809f0c3  (2 bytes)
1000     4325 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfebc]=0x6e  cl <- 0x6e
1000     4326 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb2]=0x0
1000     4327 809f0c0: jne 809f0a0  (2 bytes)
1000     4328 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfebd
1000     4329 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfebd]=0x73  cl <- 0x73
1000     4330 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb7]=0x0
1000     4331 809f0a8: je 809f0c5  (2 bytes)
1000     4332 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfebe]=0x2d  cl <- 0x2d
1000     4333 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd71]=0x0
1000     4334 809f0b0: je 809f0c4  (2 bytes)
1000     4335 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfebf]=0x61  cl <- 0x61
1000     4336 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda5]=0x0
1000     4337 809f0b8: je 809f0c3  (2 bytes)
1000     4338 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfec0]=0x6c  cl <- 0x6c
1000     4339 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4340 809f0c0: jne 809f0a0  (2 bytes)
1000     4341 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfec1
1000     4342 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfec1]=0x6c  cl <- 0x6c
1000     4343 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4344 809f0a8: je 809f0c5  (2 bytes)
1000     4345 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfec2]=0x69  cl <- 0x69
1000     4346 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdad]=0x0
1000     4347 809f0b0: je 809f0c4  (2 bytes)
1000     4348 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfec3]=0x6e  cl <- 0x6e
1000     4349 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb2]=0x0
1000     4350 809f0b8: je 809f0c3  (2 bytes)
1000     4351 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfec4]=0x6f  cl <- 0x6f
1000     4352 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb3]=0x0
1000     4353 809f0c0: jne 809f0a0  (2 bytes)
1000     4354 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfec5
1000     4355 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfec5]=0x6e  cl <- 0x6e
1000     4356 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb2]=0x0
1000     4357 809f0a8: je 809f0c5  (2 bytes)
1000     4358 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfec6]=0x65  cl <- 0x65
1000     4359 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda9]=0x0
1000     4360 809f0b0: je 809f0c4  (2 bytes)
1000     4361 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfec7]=0x2d  cl <- 0x2d
1000     4362 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd71]=0x0
1000     4363 809f0b8: je 809f0c3  (2 bytes)
1000     4364 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfec8]=0x32  cl <- 0x32
1000     4365 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd76]=0x0
1000     4366 809f0c0: jne 809f0a0  (2 bytes)
1000     4367 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfec9
1000     4368 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfec9]=0x2e  cl <- 0x2e
1000     4369 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd72]=0x0
1000     4370 809f0a8: je 809f0c5  (2 bytes)
1000     4371 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfeca]=0x33  cl <- 0x33
1000     4372 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd77]=0x0
1000     4373 809f0b0: je 809f0c4  (2 bytes)
1000     4374 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfecb]=0x35  cl <- 0x35
1000     4375 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd79]=0x0
1000     4376 809f0b8: je 809f0c3  (2 bytes)
1000     4377 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfecc]=0x2f  cl <- 0x2f
1000     4378 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4379 809f0c0: jne 809f0a0  (2 bytes)
1000     4380 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfecd
1000     4381 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfecd]=0x6f  cl <- 0x6f
1000     4382 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb3]=0x0
1000     4383 809f0a8: je 809f0c5  (2 bytes)
1000     4384 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfece]=0x74  cl <- 0x74
1000     4385 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb8]=0x0
1000     4386 809f0b0: je 809f0c4  (2 bytes)
1000     4387 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfecf]=0x63  cl <- 0x63
1000     4388 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda7]=0x0
1000     4389 809f0b8: je 809f0c3  (2 bytes)
1000     4390 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfed0]=0x6c  cl <- 0x6c
1000     4391 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4392 809f0c0: jne 809f0a0  (2 bytes)
1000     4393 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfed1
1000     4394 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfed1]=0x2d  cl <- 0x2d
1000     4395 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd71]=0x0
1000     4396 809f0a8: je 809f0c5  (2 bytes)
1000     4397 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfed2]=0x31  cl <- 0x31
1000     4398 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd75]=0x0
1000     4399 809f0b0: je 809f0c4  (2 bytes)
1000     4400 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfed3]=0x2e  cl <- 0x2e
1000     4401 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd72]=0x0
1000     4402 809f0b8: je 809f0c3  (2 bytes)
1000     4403 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfed4]=0x31  cl <- 0x31
1000     4404 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd75]=0x0
1000     4405 809f0c0: jne 809f0a0  (2 bytes)
1000     4406 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfed5
1000     4407 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfed5]=0x34  cl <- 0x34
1000     4408 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd78]=0x0
1000     4409 809f0a8: je 809f0c5  (2 bytes)
1000     4410 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfed6]=0x3a  cl <- 0x3a
1000     4411 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7e]=0x3a
1000     4412 809f0b0: je 809f0c4  (2 bytes)
1000     4413 809f0c4: inc eax  (1 bytes)  eax <- 0xfffdfed6
1000     4414 809f0c5: add esp, 0x100  (6 bytes)  esp <- 0xfffdfe44
1000     4415 809f0cb: or cl, cl  (2 bytes)  cl <- 0x3a
1000     4416 809f0cd: jne 809f0d2  (2 bytes)
1000     4417 809f0d2: ret  (1 bytes)
1000     4418 8094141: test eax, eax  (2 bytes)
1000     4419 8094143: je 8094165  (2 bytes)
1000     4420 8094145: mov BYTE PTR [eax], 0x0  (3 bytes)  [0xfffdfed6] <- 0x0
1000     4421 8094148: inc eax  (1 bytes)  eax <- 0xfffdfed7
1000     4422 8094149: mov DWORD PTR [esi], eax  (2 bytes)  [0xfffdfe84] <- 0xfffdfed7
1000     4423 809414b: mov eax, ebx  (2 bytes)  eax <- 0xfffdfeb1
1000     4424 809414d: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x80d6f88  esi <- 0x80d6f88
1000     4425 8094150: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0x0  ebx <- 0x0
1000     4426 8094153: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     4427 8094154: ret  (1 bytes)
1000     4428 8076d82: mov edx, eax  (2 bytes)  edx <- 0xfffdfeb1
1000     4429 8076d84: test eax, eax  (2 bytes)
1000     4430 8076d86: je 8076f6a  (6 bytes)
1000     4431 8076d8c: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdfe60] <- 0xfffdfeb1
1000     4432 8076d8f: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfeb1
1000     4433 8076d92: call 80527a0  (5 bytes)
1000     4434 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0xfffdfeb1  ecx <- 0xfffdfeb1
1000     4435 80527a4: mov eax, ecx  (2 bytes)  eax <- 0xfffdfeb1
1000     4436 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     4437 80527a9: je 80527d3  (2 bytes)
1000     4438 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0xfffdfeb1]=0x2f
1000     4439 80527ad: je 805284a  (6 bytes)
1000     4440 80527b3: inc eax  (1 bytes)  eax <- 0xfffdfeb2
1000     4441 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     4442 80527b7: je 80527d3  (2 bytes)
1000     4443 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0xfffdfeb2]=0x75
1000     4444 80527bb: je 805284a  (6 bytes)
1000     4445 80527c1: add eax, 0x1  (3 bytes)  eax <- 0xfffdfeb3
1000     4446 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x1
1000     4447 80527c7: je 80527d3  (2 bytes)
1000     4448 80527c9: cmp BYTE PTR [eax], ch  (2 bytes)  [0xfffdfeb3]=0x73
1000     4449 80527cb: je 805284a  (2 bytes)
1000     4450 80527cd: sub eax, 0xf  (3 bytes)  eax <- 0xfffdfea4
1000     4451 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffdfeb4
1000     4452 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffdfeb4]=0x6f6c2f72  ecx <- 0x6f6c2f72
1000     4453 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4454 80527da: add edx, ecx  (2 bytes)  edx <- 0x6e6b2e71
1000     4455 80527dc: jae 8052837  (2 bytes)
1000     4456 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1070103
1000     4457 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4458 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     4459 80527e7: jne 8052837  (2 bytes)
1000     4460 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffdfeb8]=0x2f6c6163  ecx <- 0x2f6c6163
1000     4461 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4462 80527f1: add edx, ecx  (2 bytes)  edx <- 0x2e6b6062
1000     4463 80527f3: jae 8052834  (2 bytes)
1000     4464 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1070101
1000     4465 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4466 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     4467 80527fe: jne 8052834  (2 bytes)
1000     4468 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffdfebc]=0x612d736e  ecx <- 0x612d736e
1000     4469 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4470 8052808: add edx, ecx  (2 bytes)  edx <- 0x602c726d
1000     4471 805280a: jae 8052831  (2 bytes)
1000     4472 805280c: xor edx, ecx  (2 bytes)  edx <- 0x1010103
1000     4473 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4474 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     4475 8052815: jne 8052831  (2 bytes)
1000     4476 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffdfec0]=0x6e696c6c  ecx <- 0x6e696c6c
1000     4477 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4478 805281f: add edx, ecx  (2 bytes)  edx <- 0x6d686b6b
1000     4479 8052821: jae 805282e  (2 bytes)
1000     4480 8052823: xor edx, ecx  (2 bytes)  edx <- 0x3010707
1000     4481 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4482 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     4483 805282c: je 80527d0  (2 bytes)
1000     4484 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffdfec4
1000     4485 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffdfec4]=0x2d656e6f  ecx <- 0x2d656e6f
1000     4486 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4487 80527da: add edx, ecx  (2 bytes)  edx <- 0x2c646d6e
1000     4488 80527dc: jae 8052837  (2 bytes)
1000     4489 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1010301
1000     4490 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4491 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     4492 80527e7: jne 8052837  (2 bytes)
1000     4493 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffdfec8]=0x35332e32  ecx <- 0x35332e32
1000     4494 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4495 80527f1: add edx, ecx  (2 bytes)  edx <- 0x34322d31
1000     4496 80527f3: jae 8052834  (2 bytes)
1000     4497 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1010303
1000     4498 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4499 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     4500 80527fe: jne 8052834  (2 bytes)
1000     4501 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffdfecc]=0x63746f2f  ecx <- 0x63746f2f
1000     4502 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4503 8052808: add edx, ecx  (2 bytes)  edx <- 0x62736e2e
1000     4504 805280a: jae 8052831  (2 bytes)
1000     4505 805280c: xor edx, ecx  (2 bytes)  edx <- 0x1070101
1000     4506 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4507 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     4508 8052815: jne 8052831  (2 bytes)
1000     4509 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffdfed0]=0x2e312d6c  ecx <- 0x2e312d6c
1000     4510 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4511 805281f: add edx, ecx  (2 bytes)  edx <- 0x2d302c6b
1000     4512 8052821: jae 805282e  (2 bytes)
1000     4513 8052823: xor edx, ecx  (2 bytes)  edx <- 0x3010107
1000     4514 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     4515 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     4516 805282c: je 80527d0  (2 bytes)
1000     4517 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffdfed4
1000     4518 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffdfed4]=0x2f003431  ecx <- 0x2f003431
1000     4519 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     4520 80527da: add edx, ecx  (2 bytes)  edx <- 0x2dff3330
1000     4521 80527dc: jae 8052837  (2 bytes)
1000     4522 80527de: xor edx, ecx  (2 bytes)  edx <- 0x2ff0701
1000     4523 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfeffffff
1000     4524 80527e6: inc edx  (1 bytes)  edx <- 0xff000000
1000     4525 80527e7: jne 8052837  (2 bytes)
1000     4526 8052837: test cl, cl  (2 bytes)
1000     4527 8052839: je 805284a  (2 bytes)
1000     4528 805283b: inc eax  (1 bytes)  eax <- 0xfffdfed5
1000     4529 805283c: test ch, ch  (2 bytes)
1000     4530 805283e: je 805284a  (2 bytes)
1000     4531 8052840: inc eax  (1 bytes)  eax <- 0xfffdfed6
1000     4532 8052841: test ecx, 0xff0000  (6 bytes)
1000     4533 8052847: je 805284a  (2 bytes)
1000     4534 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0xfffdfeb1  eax <- 0x25
1000     4535 805284e: ret  (1 bytes)
1000     4536 8076d97: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfeb1  edx <- 0xfffdfeb1
1000     4537 8076d9a: mov ebx, eax  (2 bytes)  ebx <- 0x25
1000     4538 8076d9c: test eax, eax  (2 bytes)
1000     4539 8076d9e: jne 8076f20  (6 bytes)
1000     4540 8076f20: cmp eax, 0x1  (3 bytes)
1000     4541 8076f23: jbe 8076f50  (2 bytes)
1000     4542 8076f25: cmp BYTE PTR [edx+eax-0x1], 0x2f  (5 bytes)  [0xfffdfed5]=0x34
1000     4543 8076f2a: jne 8076f60  (2 bytes)
1000     4544 8076f60: mov BYTE PTR [edx+ebx], 0x2f  (4 bytes)  [0xfffdfed6] <- 0x2f
1000     4545 8076f64: inc ebx  (1 bytes)  ebx <- 0x26
1000     4546 8076f65: jmp 8076da9  (5 bytes)
1000     4547 8076da9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe9c]=0x0  esi <- 0x0
1000     4548 8076dac: test esi, esi  (2 bytes)
1000     4549 8076dae: jne 8076f8f  (6 bytes)
1000     4550 8076db4: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6f88
1000     4551 8076db9: test eax, eax  (2 bytes)
1000     4552 8076dbb: je 8076e33  (2 bytes)
1000     4553 8076dbd: mov DWORD PTR [ebp-0x28], edx  (3 bytes)  [0xfffdfe6c] <- 0xfffdfeb1
1000     4554 8076dc0: jmp 8076dce  (2 bytes)
1000     4555 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6f98]=0x0
1000     4556 8076dd1: jne 8076dc8  (2 bytes)
1000     4557 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6f88]=0x80d6ce8  eax <- 0x80d6ce8
1000     4558 8076dca: test eax, eax  (2 bytes)
1000     4559 8076dcc: je 8076e30  (2 bytes)
1000     4560 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6cf8]=0x5
1000     4561 8076dd1: jne 8076dc8  (2 bytes)
1000     4562 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6ce8]=0x80d6d10  eax <- 0x80d6d10
1000     4563 8076dca: test eax, eax  (2 bytes)
1000     4564 8076dcc: je 8076e30  (2 bytes)
1000     4565 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6d20]=0x9
1000     4566 8076dd1: jne 8076dc8  (2 bytes)
1000     4567 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6d10]=0x0  eax <- 0x0
1000     4568 8076dca: test eax, eax  (2 bytes)
1000     4569 8076dcc: je 8076e30  (2 bytes)
1000     4570 8076e30: mov edx, DWORD PTR [ebp-0x28]  (3 bytes)  [0xfffdfe6c]=0xfffdfeb1  edx <- 0xfffdfeb1
1000     4571 8076e33: xor edi, edi  (2 bytes)  edi <- 0x0
1000     4572 8076e35: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdfea4]=0x0  ecx <- 0x0
1000     4573 8076e38: test ecx, ecx  (2 bytes)
1000     4574 8076e3a: je 8076e50  (2 bytes)
1000     4575 8076e50: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     4576 8076e55: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfeb1
1000     4577 8076e58: lea eax, [ebx+eax*4+0x15]  (4 bytes)  eax <- 0x3f
1000     4578 8076e5c: add eax, edi  (2 bytes)  eax <- 0x3f
1000     4579 8076e5e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0x3f
1000     4580 8076e61: call 8050320  (5 bytes)
1000     4581 8050320: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     4582 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     4583 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfe28
1000     4584 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfe54] <- 0x0
1000     4585 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x0
1000     4586 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfe4c] <- 0x26
1000     4587 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfe50] <- 0x0
1000     4588 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0x3f  edi <- 0x3f
1000     4589 8050337: test eax, eax  (2 bytes)
1000     4590 8050339: jne 8050535  (6 bytes)
1000     4591 805033f: mov edx, 0xffffffec  (6 bytes)  edx <- 0xffffffec
1000     4592 8050345: mov ebx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d681c]=0x80d4c80  ebx <- 0x80d4c80
1000     4593 8050348: test ebx, ebx  (2 bytes)
1000     4594 805034a: je 8050428  (6 bytes)
1000     4595 8050350: mov edx, 0x1  (5 bytes)  edx <- 0x1
1000     4596 8050355: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     4597 805035d: je 8050360  (2 bytes)
1000     4598 8050360: cmpxchg DWORD PTR [ebx], edx  (3 bytes)  [0x80d4c80]=0x0  eax <- 0x0  [0x80d4c80] <- 0x1
1000     4599 8050363: test eax, eax  (2 bytes)
1000     4600 8050365: jne 8050428  (6 bytes)
1000     4601 805036b: mov edx, edi  (2 bytes)  edx <- 0x3f
1000     4602 805036d: mov eax, ebx  (2 bytes)  eax <- 0x80d4c80
1000     4603 805036f: call 804ef60  (5 bytes)
1000     4604 804ef60: push ebp  (1 bytes)  esp <- 0xfffdfe20
1000     4605 804ef61: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe20
1000     4606 804ef63: push edi  (1 bytes)  esp <- 0xfffdfe1c
1000     4607 804ef64: push esi  (1 bytes)  esp <- 0xfffdfe18
1000     4608 804ef65: mov esi, eax  (2 bytes)  esi <- 0x80d4c80
1000     4609 804ef67: push ebx  (1 bytes)  esp <- 0xfffdfe14
1000     4610 804ef68: sub esp, 0x68  (3 bytes)  esp <- 0xfffdfdac
1000     4611 804ef6b: mov DWORD PTR [ebp-0x14], edx  (3 bytes)  [0xfffdfe0c] <- 0x3f
1000     4612 804ef6e: cmp edx, 0xdf  (3 bytes)
1000     4613 804ef71: ja 804f3d8  (6 bytes)
1000     4614 804ef77: mov eax, edx  (2 bytes)  eax <- 0x3f
1000     4615 804ef79: mov edi, 0x10  (5 bytes)  edi <- 0x10
1000     4616 804ef7e: add eax, 0xb  (3 bytes)  eax <- 0x4a
1000     4617 804ef81: cmp eax, 0xf  (3 bytes)
1000     4618 804ef84: ja 804f060  (6 bytes)
1000     4619 804f060: mov edi, eax  (2 bytes)  edi <- 0x4a
1000     4620 804f062: and edi, 0xf8  (3 bytes)  edi <- 0x48
1000     4621 804f065: cmp edi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x40
1000     4622 804f06b: ja 804efe0  (6 bytes)
1000     4623 804efe0: cmp edi, 0x1ff  (6 bytes)
1000     4624 804efe6: ja 804f080  (6 bytes)
1000     4625 804efec: lea edx, [esi+0x38]  (3 bytes)  edx <- 0x80d4cb8
1000     4626 804efef: mov eax, edi  (2 bytes)  eax <- 0x48
1000     4627 804eff1: mov DWORD PTR [ebp-0x24], edx  (3 bytes)  [0xfffdfdfc] <- 0x80d4cb8
1000     4628 804eff4: shr eax, 0x3  (3 bytes)  eax <- 0x9
1000     4629 804eff7: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdfdf4] <- 0x9
1000     4630 804effa: lea eax, [edx+eax*8-0x10]  (4 bytes)  eax <- 0x80d4cf0
1000     4631 804effe: mov ebx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80d4cfc]=0x80d4cf0  ebx <- 0x80d4cf0
1000     4632 804f001: cmp ebx, eax  (2 bytes)
1000     4633 804f003: je 804f0b5  (6 bytes)
1000     4634 804f0b5: lea eax, [esi+0x30]  (3 bytes)  eax <- 0x80d4cb0
1000     4635 804f0b8: mov edx, edi  (2 bytes)  edx <- 0x48
1000     4636 804f0ba: lea ecx, [edi+0x10]  (3 bytes)  ecx <- 0x58
1000     4637 804f0bd: shr edx, 0x3  (3 bytes)  edx <- 0x9
1000     4638 804f0c0: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdfe10] <- 0x80d4c80
1000     4639 804f0c3: mov DWORD PTR [ebp-0x38], eax  (3 bytes)  [0xfffdfde8] <- 0x80d4cb0
1000     4640 804f0c6: mov DWORD PTR [ebp-0x40], edx  (3 bytes)  [0xfffdfde0] <- 0x9
1000     4641 804f0c9: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdfde4] <- 0x58
1000     4642 804f0cc: mov DWORD PTR [ebp-0x1c], edi  (3 bytes)  [0xfffdfe04] <- 0x48
1000     4643 804f0cf: mov esi, eax  (2 bytes)  esi <- 0x80d4cb0
1000     4644 804f0d1: mov DWORD PTR [ebp-0x18], 0x0  (7 bytes)  [0xfffdfe08] <- 0x0
1000     4645 804f0d8: mov ebx, DWORD PTR [esi+0xc]  (3 bytes)  [0x80d4cbc]=0x80d4cb0  ebx <- 0x80d4cb0
1000     4646 804f0db: cmp esi, ebx  (2 bytes)
1000     4647 804f0dd: je 804f17e  (6 bytes)
1000     4648 804f17e: cmp DWORD PTR [ebp-0x1c], 0x1ff  (7 bytes)  [0xfffdfe04]=0x48
1000     4649 804f185: jbe 804f1a4  (2 bytes)
1000     4650 804f1a4: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfdf4]=0x9  eax <- 0x9
1000     4651 804f1a7: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfdfc]=0x80d4cb8  edx <- 0x80d4cb8
1000     4652 804f1aa: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  edi <- 0x80d4c80
1000     4653 804f1ad: lea ebx, [edx+eax*8-0x8]  (4 bytes)  ebx <- 0x80d4cf8
1000     4654 804f1b1: mov ecx, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfdf4]=0x9  ecx <- 0x9
1000     4655 804f1b4: inc ecx  (1 bytes)  ecx <- 0xa
1000     4656 804f1b5: mov eax, ecx  (2 bytes)  eax <- 0xa
1000     4657 804f1b7: and ecx, 0x1f  (3 bytes)  ecx <- 0xa
1000     4658 804f1ba: shr eax, 0x5  (3 bytes)  eax <- 0x0
1000     4659 804f1bd: mov edx, DWORD PTR [edi+eax*4+0x430]  (7 bytes)  [0x80d50b0]=0x0  edx <- 0x0
1000     4660 804f1c4: mov edi, 0x1  (5 bytes)  edi <- 0x1
1000     4661 804f1c9: shl edi, cl  (2 bytes)  edi <- 0x400
1000     4662 804f1cb: mov ecx, edi  (2 bytes)  ecx <- 0x400
1000     4663 804f1cd: test ecx, ecx  (2 bytes)
1000     4664 804f1cf: je 804f1d5  (2 bytes)
1000     4665 804f1d1: cmp ecx, edx  (2 bytes)
1000     4666 804f1d3: jbe 804f204  (2 bytes)
1000     4667 804f1d5: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  edx <- 0x80d4c80
1000     4668 804f1d8: lea ecx, [edx+eax*4+0x434]  (7 bytes)  ecx <- 0x80d50b4
1000     4669 804f1df: nop  (1 bytes)
1000     4670 804f1e0: inc eax  (1 bytes)  eax <- 0x1
1000     4671 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4672 804f1e4: ja 804f668  (6 bytes)
1000     4673 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b4]=0x0  edx <- 0x0
1000     4674 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50b8
1000     4675 804f1ef: test edx, edx  (2 bytes)
1000     4676 804f1f1: je 804f1e0  (2 bytes)
1000     4677 804f1e0: inc eax  (1 bytes)  eax <- 0x2
1000     4678 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4679 804f1e4: ja 804f668  (6 bytes)
1000     4680 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b8]=0x0  edx <- 0x0
1000     4681 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50bc
1000     4682 804f1ef: test edx, edx  (2 bytes)
1000     4683 804f1f1: je 804f1e0  (2 bytes)
1000     4684 804f1e0: inc eax  (1 bytes)  eax <- 0x3
1000     4685 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4686 804f1e4: ja 804f668  (6 bytes)
1000     4687 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50bc]=0x0  edx <- 0x0
1000     4688 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50c0
1000     4689 804f1ef: test edx, edx  (2 bytes)
1000     4690 804f1f1: je 804f1e0  (2 bytes)
1000     4691 804f1e0: inc eax  (1 bytes)  eax <- 0x4
1000     4692 804f1e1: cmp eax, 0x3  (3 bytes)
1000     4693 804f1e4: ja 804f668  (6 bytes)
1000     4694 804f668: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  eax <- 0x80d4c80
1000     4695 804f66b: mov ebx, DWORD PTR [eax+0x30]  (3 bytes)  [0x80d4cb0]=0x80d6fa0  ebx <- 0x80d6fa0
1000     4696 804f66e: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d6fa4]=0x21061  eax <- 0x21061
1000     4697 804f671: mov edx, eax  (2 bytes)  edx <- 0x21061
1000     4698 804f673: and edx, 0xf8  (3 bytes)  edx <- 0x21060
1000     4699 804f676: cmp edx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdfde4]=0x58
1000     4700 804f679: jae 804fb29  (6 bytes)
1000     4701 804fb29: mov edi, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe04]=0x48  edi <- 0x48
1000     4702 804fb2c: mov esi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  esi <- 0x80d4c80
1000     4703 804fb2f: lea ecx, [ebx+edi]  (3 bytes)  ecx <- 0x80d6fe8
1000     4704 804fb32: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe08] <- 0x21060
1000     4705 804fb35: mov eax, edi  (2 bytes)  eax <- 0x48
1000     4706 804fb37: xor edx, edx  (2 bytes)  edx <- 0x0
1000     4707 804fb39: mov DWORD PTR [esi+0x30], ecx  (3 bytes)  [0x80d4cb0] <- 0x80d6fe8
1000     4708 804fb3c: cmp esi, 0x80d4c80  (6 bytes)
1000     4709 804fb42: setne dl  (3 bytes)  dl <- 0x0
1000     4710 804fb45: or eax, 0x1  (3 bytes)  eax <- 0x49
1000     4711 804fb48: shl edx, 0x2  (3 bytes)  edx <- 0x0
1000     4712 804fb4b: or eax, edx  (2 bytes)  eax <- 0x49
1000     4713 804fb4d: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe08]=0x21060  edx <- 0x21060
1000     4714 804fb50: mov DWORD PTR [ebx+0x4], eax  (3 bytes)  [0x80d6fa4] <- 0x49
1000     4715 804fb53: sub edx, edi  (2 bytes)  edx <- 0x21018
1000     4716 804fb55: add ebx, 0x8  (3 bytes)  ebx <- 0x80d6fa8
1000     4717 804fb58: mov edi, edx  (2 bytes)  edi <- 0x21018
1000     4718 804fb5a: mov eax, ds:0x80d5114  (5 bytes)  eax <- 0x0
1000     4719 804fb5f: or edi, 0x1  (3 bytes)  edi <- 0x21019
1000     4720 804fb62: mov esi, ebx  (2 bytes)  esi <- 0x80d6fa8
1000     4721 804fb64: mov DWORD PTR [ecx+0x4], edi  (3 bytes)  [0x80d6fec] <- 0x21019
1000     4722 804fb67: test eax, eax  (2 bytes)
1000     4723 804fb69: je 804efd2  (6 bytes)
1000     4724 804efd2: add esp, 0x68  (3 bytes)  esp <- 0xfffdfe14
1000     4725 804efd5: mov eax, esi  (2 bytes)  eax <- 0x80d6fa8
1000     4726 804efd7: pop ebx  (1 bytes)  ebx <- 0x80d4c80
1000     4727 804efd8: pop esi  (1 bytes)  esi <- 0x0
1000     4728 804efd9: pop edi  (1 bytes)  edi <- 0x3f
1000     4729 804efda: leave  (1 bytes)  ebp <- 0xfffdfe58
1000     4730 804efdb: ret  (1 bytes)
1000     4731 8050374: mov esi, eax  (2 bytes)  esi <- 0x80d6fa8
1000     4732 8050376: test eax, eax  (2 bytes)
1000     4733 8050378: je 8050460  (6 bytes)
1000     4734 805037e: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     4735 8050386: je 8050389  (2 bytes)
1000     4736 8050389: sub DWORD PTR [ebx], 0x1  (3 bytes)  [0x80d4c80]=0x1  [0x80d4c80] <- 0x0
1000     4737 805038c: jne 8052501  (6 bytes)
1000     4738 8050392: lea edx, [esi-0x8]  (3 bytes)  edx <- 0x80d6fa0
1000     4739 8050395: mov eax, DWORD PTR [edx+0x4]  (3 bytes)  [0x80d6fa4]=0x49  eax <- 0x49
1000     4740 8050398: test al, 0x2  (2 bytes)
1000     4741 805039a: jne 805043d  (6 bytes)
1000     4742 80503a0: mov ecx, 0x80d4c80  (5 bytes)  ecx <- 0x80d4c80
1000     4743 80503a5: test al, 0x4  (2 bytes)
1000     4744 80503a7: je 80503b1  (2 bytes)
1000     4745 80503b1: cmp ecx, ebx  (2 bytes)
1000     4746 80503b3: je 805043d  (6 bytes)
1000     4747 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6fa8
1000     4748 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfe4c]=0x26  ebx <- 0x26
1000     4749 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0x0  esi <- 0x0
1000     4750 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x0  edi <- 0x0
1000     4751 8050448: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     4752 8050449: ret  (1 bytes)
1000     4753 8076e66: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfeb1  edx <- 0xfffdfeb1
1000     4754 8076e69: mov esi, eax  (2 bytes)  esi <- 0x80d6fa8
1000     4755 8076e6b: test eax, eax  (2 bytes)
1000     4756 8076e6d: je 8076fbd  (6 bytes)
1000     4757 8076e73: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     4758 8076e78: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfeb1
1000     4759 8076e7b: lea eax, [esi+eax*4+0x14]  (4 bytes)  eax <- 0x80d6fc0
1000     4760 8076e7f: mov DWORD PTR [esi+0xc], eax  (3 bytes)  [0x80d6fb4] <- 0x80d6fc0
1000     4761 8076e82: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfe64] <- 0xfffdfeb1
1000     4762 8076e86: mov DWORD PTR [esp+0x8], ebx  (4 bytes)  [0xfffdfe68] <- 0x26
1000     4763 8076e8a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0x80d6fc0
1000     4764 8076e8d: call 8052bf0  (5 bytes)
1000     4765 8052bf0: mov ecx, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdfe68]=0x26  ecx <- 0x26
1000     4766 8052bf4: mov eax, edi  (2 bytes)  eax <- 0x0
1000     4767 8052bf6: mov edi, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0x80d6fc0  edi <- 0x80d6fc0
1000     4768 8052bfa: mov edx, esi  (2 bytes)  edx <- 0x80d6fa8
1000     4769 8052bfc: mov esi, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfe64]=0xfffdfeb1  esi <- 0xfffdfeb1
1000     4770 8052c00: cld  (1 bytes)
1000     4771 8052c01: shr ecx, 1  (2 bytes)  ecx <- 0x13
1000     4772 8052c03: jae 8052c06  (2 bytes)
1000     4773 8052c06: shr ecx, 1  (2 bytes)  ecx <- 0x9
1000     4774 8052c08: jae 8052c0c  (2 bytes)
1000     4775 8052c0a: movsw  (2 bytes)
1000     4776 8052c0c: rep movsd  (2 bytes)
1000     4777 8052c0e: xchg edi, eax  (1 bytes)  eax <- 0x80d6fe6  edi <- 0x0
1000     4778 8052c0f: mov esi, edx  (2 bytes)  esi <- 0x80d6fa8
1000     4779 8052c11: ret  (1 bytes)
1000     4780 8076e92: mov BYTE PTR [eax], 0x0  (3 bytes)  [0x80d6fe6] <- 0x0
1000     4781 8076e95: mov DWORD PTR [esi+0x10], ebx  (3 bytes)  [0x80d6fb8] <- 0x26
1000     4782 8076e98: cmp ebx, DWORD PTR ds:0x80d5950  (6 bytes)  [0x80d5950]=0x9
1000     4783 8076e9e: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfeb1  edx <- 0xfffdfeb1
1000     4784 8076ea1: jbe 8076ea9  (2 bytes)
1000     4785 8076ea3: mov DWORD PTR ds:0x80d5950, ebx  (6 bytes)  [0x80d5950] <- 0x26
1000     4786 8076ea9: cmp BYTE PTR [edx], 0x2f  (3 bytes)  [0xfffdfeb1]=0x2f
1000     4787 8076eac: mov ecx, DWORD PTR ds:0x80d3bd0  (6 bytes)  [0x80d3bd0]=0x1  ecx <- 0x1
1000     4788 8076eb2: setne dl  (3 bytes)  dl <- 0x0
1000     4789 8076eb5: movzx edx, dl  (3 bytes)  edx <- 0x0
1000     4790 8076eb8: add edx, edx  (2 bytes)  edx <- 0x0
1000     4791 8076eba: test ecx, ecx  (2 bytes)
1000     4792 8076ebc: je 8076ec9  (2 bytes)
1000     4793 8076ebe: xor eax, eax  (2 bytes)  eax <- 0x0
1000     4794 8076ec0: mov DWORD PTR [esi+eax*4+0x14], edx  (4 bytes)  [0x80d6fbc] <- 0x0
1000     4795 8076ec4: inc eax  (1 bytes)  eax <- 0x1
1000     4796 8076ec5: cmp ecx, eax  (2 bytes)
1000     4797 8076ec7: ja 8076ec0  (2 bytes)
1000     4798 8076ec9: mov edx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfea0]=0x80b67d2  edx <- 0x80b67d2
1000     4799 8076ecc: mov eax, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdfea4]=0x0  eax <- 0x0
1000     4800 8076ecf: mov DWORD PTR [esi+0x4], edx  (3 bytes)  [0x80d6fac] <- 0x80b67d2
1000     4801 8076ed2: test eax, eax  (2 bytes)
1000     4802 8076ed4: je 8076fb1  (6 bytes)
1000     4803 8076fb1: mov DWORD PTR [esi+0x8], 0x0  (7 bytes)  [0x80d6fb0] <- 0x0
1000     4804 8076fb8: jmp 8076ef7  (5 bytes)
1000     4805 8076ef7: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6f88
1000     4806 8076efc: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe7c]=0x80d6f70  edx <- 0x80d6f70
1000     4807 8076eff: mov DWORD PTR [esi], eax  (2 bytes)  [0x80d6fa8] <- 0x80d6f88
1000     4808 8076f01: mov eax, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfe80]=0x1  eax <- 0x1
1000     4809 8076f04: mov DWORD PTR ds:0x80d5d50, esi  (6 bytes)  [0x80d5d50] <- 0x80d6fa8
1000     4810 8076f0a: mov DWORD PTR [edx+eax*4], esi  (3 bytes)  [0x80d6f74] <- 0x80d6fa8
1000     4811 8076f0d: inc eax  (1 bytes)  eax <- 0x2
1000     4812 8076f0e: mov DWORD PTR [ebp-0x14], eax  (3 bytes)  [0xfffdfe80] <- 0x2
1000     4813 8076f11: jmp 8076d70  (5 bytes)
1000     4814 8076d70: mov ecx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe78]=0x80baa85  ecx <- 0x80baa85
1000     4815 8076d73: lea eax, [ebp-0x10]  (3 bytes)  eax <- 0xfffdfe84
1000     4816 8076d76: mov DWORD PTR [esp+0x4], ecx  (4 bytes)  [0xfffdfe64] <- 0x80baa85
1000     4817 8076d7a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0xfffdfe84
1000     4818 8076d7d: call 8094110  (5 bytes)
1000     4819 8094110: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     4820 8094111: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     4821 8094113: sub esp, 0x10  (3 bytes)  esp <- 0xfffdfe48
1000     4822 8094116: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdfe54] <- 0x80d6fa8
1000     4823 8094119: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdfe50] <- 0x26
1000     4824 809411c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0xfffdfe84  esi <- 0xfffdfe84
1000     4825 809411f: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfe64]=0x80baa85  eax <- 0x80baa85
1000     4826 8094122: mov ebx, DWORD PTR [esi]  (2 bytes)  [0xfffdfe84]=0xfffdfed7  ebx <- 0xfffdfed7
1000     4827 8094124: test ebx, ebx  (2 bytes)
1000     4828 8094126: je 809414b  (2 bytes)
1000     4829 8094128: movzx edx, BYTE PTR [eax]  (3 bytes)  [0x80baa85]=0x3a  edx <- 0x3a
1000     4830 809412b: test dl, dl  (2 bytes)
1000     4831 809412d: je 8094165  (2 bytes)
1000     4832 809412f: cmp BYTE PTR [eax+0x1], 0x0  (4 bytes)  [0x80baa86]=0x3b
1000     4833 8094133: je 8094158  (2 bytes)
1000     4834 8094135: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdfe4c] <- 0x80baa85
1000     4835 8094139: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdfe48] <- 0xfffdfed7
1000     4836 809413c: call 809f020  (5 bytes)
1000     4837 809f020: mov edx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe48]=0xfffdfed7  edx <- 0xfffdfed7
1000     4838 809f024: mov eax, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfe4c]=0x80baa85  eax <- 0x80baa85
1000     4839 809f028: xor ecx, ecx  (2 bytes)  ecx <- 0x0
1000     4840 809f02a: push ecx  (1 bytes)  esp <- 0xfffdfe40
1000     4841 809f02b: push ecx  (1 bytes)  esp <- 0xfffdfe3c
1000     4842 809f02c: push ecx  (1 bytes)  esp <- 0xfffdfe38
1000     4843 809f02d: push ecx  (1 bytes)  esp <- 0xfffdfe34
1000     4844 809f02e: push ecx  (1 bytes)  esp <- 0xfffdfe30
1000     4845 809f02f: push ecx  (1 bytes)  esp <- 0xfffdfe2c
1000     4846 809f030: push ecx  (1 bytes)  esp <- 0xfffdfe28
1000     4847 809f031: push ecx  (1 bytes)  esp <- 0xfffdfe24
1000     4848 809f032: push ecx  (1 bytes)  esp <- 0xfffdfe20
1000     4849 809f033: push ecx  (1 bytes)  esp <- 0xfffdfe1c
1000     4850 809f034: push ecx  (1 bytes)  esp <- 0xfffdfe18
1000     4851 809f035: push ecx  (1 bytes)  esp <- 0xfffdfe14
1000     4852 809f036: push ecx  (1 bytes)  esp <- 0xfffdfe10
1000     4853 809f037: push ecx  (1 bytes)  esp <- 0xfffdfe0c
1000     4854 809f038: push ecx  (1 bytes)  esp <- 0xfffdfe08
1000     4855 809f039: push ecx  (1 bytes)  esp <- 0xfffdfe04
1000     4856 809f03a: push ecx  (1 bytes)  esp <- 0xfffdfe00
1000     4857 809f03b: push ecx  (1 bytes)  esp <- 0xfffdfdfc
1000     4858 809f03c: push ecx  (1 bytes)  esp <- 0xfffdfdf8
1000     4859 809f03d: push ecx  (1 bytes)  esp <- 0xfffdfdf4
1000     4860 809f03e: push ecx  (1 bytes)  esp <- 0xfffdfdf0
1000     4861 809f03f: push ecx  (1 bytes)  esp <- 0xfffdfdec
1000     4862 809f040: push ecx  (1 bytes)  esp <- 0xfffdfde8
1000     4863 809f041: push ecx  (1 bytes)  esp <- 0xfffdfde4
1000     4864 809f042: push ecx  (1 bytes)  esp <- 0xfffdfde0
1000     4865 809f043: push ecx  (1 bytes)  esp <- 0xfffdfddc
1000     4866 809f044: push ecx  (1 bytes)  esp <- 0xfffdfdd8
1000     4867 809f045: push ecx  (1 bytes)  esp <- 0xfffdfdd4
1000     4868 809f046: push ecx  (1 bytes)  esp <- 0xfffdfdd0
1000     4869 809f047: push ecx  (1 bytes)  esp <- 0xfffdfdcc
1000     4870 809f048: push ecx  (1 bytes)  esp <- 0xfffdfdc8
1000     4871 809f049: push ecx  (1 bytes)  esp <- 0xfffdfdc4
1000     4872 809f04a: push ecx  (1 bytes)  esp <- 0xfffdfdc0
1000     4873 809f04b: push ecx  (1 bytes)  esp <- 0xfffdfdbc
1000     4874 809f04c: push ecx  (1 bytes)  esp <- 0xfffdfdb8
1000     4875 809f04d: push ecx  (1 bytes)  esp <- 0xfffdfdb4
1000     4876 809f04e: push ecx  (1 bytes)  esp <- 0xfffdfdb0
1000     4877 809f04f: push ecx  (1 bytes)  esp <- 0xfffdfdac
1000     4878 809f050: push ecx  (1 bytes)  esp <- 0xfffdfda8
1000     4879 809f051: push ecx  (1 bytes)  esp <- 0xfffdfda4
1000     4880 809f052: push ecx  (1 bytes)  esp <- 0xfffdfda0
1000     4881 809f053: push ecx  (1 bytes)  esp <- 0xfffdfd9c
1000     4882 809f054: push ecx  (1 bytes)  esp <- 0xfffdfd98
1000     4883 809f055: push ecx  (1 bytes)  esp <- 0xfffdfd94
1000     4884 809f056: push ecx  (1 bytes)  esp <- 0xfffdfd90
1000     4885 809f057: push ecx  (1 bytes)  esp <- 0xfffdfd8c
1000     4886 809f058: push ecx  (1 bytes)  esp <- 0xfffdfd88
1000     4887 809f059: push ecx  (1 bytes)  esp <- 0xfffdfd84
1000     4888 809f05a: push ecx  (1 bytes)  esp <- 0xfffdfd80
1000     4889 809f05b: push ecx  (1 bytes)  esp <- 0xfffdfd7c
1000     4890 809f05c: push ecx  (1 bytes)  esp <- 0xfffdfd78
1000     4891 809f05d: push ecx  (1 bytes)  esp <- 0xfffdfd74
1000     4892 809f05e: push ecx  (1 bytes)  esp <- 0xfffdfd70
1000     4893 809f05f: push ecx  (1 bytes)  esp <- 0xfffdfd6c
1000     4894 809f060: push ecx  (1 bytes)  esp <- 0xfffdfd68
1000     4895 809f061: push ecx  (1 bytes)  esp <- 0xfffdfd64
1000     4896 809f062: push ecx  (1 bytes)  esp <- 0xfffdfd60
1000     4897 809f063: push ecx  (1 bytes)  esp <- 0xfffdfd5c
1000     4898 809f064: push 0x0  (2 bytes)  esp <- 0xfffdfd58
1000     4899 809f066: push 0x0  (2 bytes)  esp <- 0xfffdfd54
1000     4900 809f068: push 0x0  (2 bytes)  esp <- 0xfffdfd50
1000     4901 809f06a: push 0x0  (2 bytes)  esp <- 0xfffdfd4c
1000     4902 809f06c: push 0x0  (2 bytes)  esp <- 0xfffdfd48
1000     4903 809f06e: push 0x0  (2 bytes)  esp <- 0xfffdfd44
1000     4904 809f070: mov cl, BYTE PTR [eax]  (2 bytes)  [0x80baa85]=0x3a  cl <- 0x3a
1000     4905 809f072: test cl, cl  (2 bytes)
1000     4906 809f074: je 809f09d  (2 bytes)
1000     4907 809f076: mov BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7e] <- 0x3a
1000     4908 809f079: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0x80baa86]=0x3b  cl <- 0x3b
1000     4909 809f07c: test cl, 0xff  (3 bytes)
1000     4910 809f07f: je 809f09d  (2 bytes)
1000     4911 809f081: mov BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd7f] <- 0x3b
1000     4912 809f084: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0x80baa87]=0x0  cl <- 0x0
1000     4913 809f087: test cl, 0xff  (3 bytes)
1000     4914 809f08a: je 809f09d  (2 bytes)
1000     4915 809f09d: lea eax, [edx-0x4]  (3 bytes)  eax <- 0xfffdfed3
1000     4916 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfed7
1000     4917 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfed7]=0x2f  cl <- 0x2f
1000     4918 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4919 809f0a8: je 809f0c5  (2 bytes)
1000     4920 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfed8]=0x75  cl <- 0x75
1000     4921 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb9]=0x0
1000     4922 809f0b0: je 809f0c4  (2 bytes)
1000     4923 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfed9]=0x73  cl <- 0x73
1000     4924 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb7]=0x0
1000     4925 809f0b8: je 809f0c3  (2 bytes)
1000     4926 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfeda]=0x72  cl <- 0x72
1000     4927 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb6]=0x0
1000     4928 809f0c0: jne 809f0a0  (2 bytes)
1000     4929 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfedb
1000     4930 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfedb]=0x2f  cl <- 0x2f
1000     4931 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4932 809f0a8: je 809f0c5  (2 bytes)
1000     4933 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfedc]=0x6c  cl <- 0x6c
1000     4934 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4935 809f0b0: je 809f0c4  (2 bytes)
1000     4936 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfedd]=0x6f  cl <- 0x6f
1000     4937 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb3]=0x0
1000     4938 809f0b8: je 809f0c3  (2 bytes)
1000     4939 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfede]=0x63  cl <- 0x63
1000     4940 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda7]=0x0
1000     4941 809f0c0: jne 809f0a0  (2 bytes)
1000     4942 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfedf
1000     4943 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfedf]=0x61  cl <- 0x61
1000     4944 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda5]=0x0
1000     4945 809f0a8: je 809f0c5  (2 bytes)
1000     4946 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfee0]=0x6c  cl <- 0x6c
1000     4947 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4948 809f0b0: je 809f0c4  (2 bytes)
1000     4949 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfee1]=0x2f  cl <- 0x2f
1000     4950 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     4951 809f0b8: je 809f0c3  (2 bytes)
1000     4952 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfee2]=0x6e  cl <- 0x6e
1000     4953 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb2]=0x0
1000     4954 809f0c0: jne 809f0a0  (2 bytes)
1000     4955 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfee3
1000     4956 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfee3]=0x73  cl <- 0x73
1000     4957 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb7]=0x0
1000     4958 809f0a8: je 809f0c5  (2 bytes)
1000     4959 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfee4]=0x2d  cl <- 0x2d
1000     4960 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd71]=0x0
1000     4961 809f0b0: je 809f0c4  (2 bytes)
1000     4962 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfee5]=0x61  cl <- 0x61
1000     4963 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda5]=0x0
1000     4964 809f0b8: je 809f0c3  (2 bytes)
1000     4965 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfee6]=0x6c  cl <- 0x6c
1000     4966 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4967 809f0c0: jne 809f0a0  (2 bytes)
1000     4968 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfee7
1000     4969 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfee7]=0x6c  cl <- 0x6c
1000     4970 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     4971 809f0a8: je 809f0c5  (2 bytes)
1000     4972 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfee8]=0x69  cl <- 0x69
1000     4973 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdad]=0x0
1000     4974 809f0b0: je 809f0c4  (2 bytes)
1000     4975 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfee9]=0x6e  cl <- 0x6e
1000     4976 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb2]=0x0
1000     4977 809f0b8: je 809f0c3  (2 bytes)
1000     4978 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfeea]=0x6f  cl <- 0x6f
1000     4979 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb3]=0x0
1000     4980 809f0c0: jne 809f0a0  (2 bytes)
1000     4981 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeeb
1000     4982 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfeeb]=0x6e  cl <- 0x6e
1000     4983 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb2]=0x0
1000     4984 809f0a8: je 809f0c5  (2 bytes)
1000     4985 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfeec]=0x65  cl <- 0x65
1000     4986 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda9]=0x0
1000     4987 809f0b0: je 809f0c4  (2 bytes)
1000     4988 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfeed]=0x2d  cl <- 0x2d
1000     4989 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd71]=0x0
1000     4990 809f0b8: je 809f0c3  (2 bytes)
1000     4991 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfeee]=0x32  cl <- 0x32
1000     4992 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd76]=0x0
1000     4993 809f0c0: jne 809f0a0  (2 bytes)
1000     4994 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeef
1000     4995 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfeef]=0x2e  cl <- 0x2e
1000     4996 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd72]=0x0
1000     4997 809f0a8: je 809f0c5  (2 bytes)
1000     4998 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfef0]=0x33  cl <- 0x33
1000     4999 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd77]=0x0
1000     5000 809f0b0: je 809f0c4  (2 bytes)
1000     5001 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfef1]=0x35  cl <- 0x35
1000     5002 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd79]=0x0
1000     5003 809f0b8: je 809f0c3  (2 bytes)
1000     5004 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfef2]=0x2f  cl <- 0x2f
1000     5005 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd73]=0x0
1000     5006 809f0c0: jne 809f0a0  (2 bytes)
1000     5007 809f0a0: add eax, 0x4  (3 bytes)  eax <- 0xfffdfef3
1000     5008 809f0a3: mov cl, BYTE PTR [eax]  (2 bytes)  [0xfffdfef3]=0x6c  cl <- 0x6c
1000     5009 809f0a5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdb0]=0x0
1000     5010 809f0a8: je 809f0c5  (2 bytes)
1000     5011 809f0aa: mov cl, BYTE PTR [eax+0x1]  (3 bytes)  [0xfffdfef4]=0x69  cl <- 0x69
1000     5012 809f0ad: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfdad]=0x0
1000     5013 809f0b0: je 809f0c4  (2 bytes)
1000     5014 809f0b2: mov cl, BYTE PTR [eax+0x2]  (3 bytes)  [0xfffdfef5]=0x62  cl <- 0x62
1000     5015 809f0b5: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfda6]=0x0
1000     5016 809f0b8: je 809f0c3  (2 bytes)
1000     5017 809f0ba: mov cl, BYTE PTR [eax+0x3]  (3 bytes)  [0xfffdfef6]=0x0  cl <- 0x0
1000     5018 809f0bd: cmp BYTE PTR [esp+ecx], cl  (3 bytes)  [0xfffdfd44]=0x0
1000     5019 809f0c0: jne 809f0a0  (2 bytes)
1000     5020 809f0c2: inc eax  (1 bytes)  eax <- 0xfffdfef4
1000     5021 809f0c3: inc eax  (1 bytes)  eax <- 0xfffdfef5
1000     5022 809f0c4: inc eax  (1 bytes)  eax <- 0xfffdfef6
1000     5023 809f0c5: add esp, 0x100  (6 bytes)  esp <- 0xfffdfe44
1000     5024 809f0cb: or cl, cl  (2 bytes)  cl <- 0x0
1000     5025 809f0cd: jne 809f0d2  (2 bytes)
1000     5026 809f0cf: xor eax, eax  (2 bytes)  eax <- 0x0
1000     5027 809f0d1: ret  (1 bytes)
1000     5028 8094141: test eax, eax  (2 bytes)
1000     5029 8094143: je 8094165  (2 bytes)
1000     5030 8094165: mov DWORD PTR [esi], 0x0  (6 bytes)  [0xfffdfe84] <- 0x0
1000     5031 809416b: mov eax, ebx  (2 bytes)  eax <- 0xfffdfed7
1000     5032 809416d: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x80d6fa8  esi <- 0x80d6fa8
1000     5033 8094170: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0x26  ebx <- 0x26
1000     5034 8094173: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     5035 8094174: ret  (1 bytes)
1000     5036 8076d82: mov edx, eax  (2 bytes)  edx <- 0xfffdfed7
1000     5037 8076d84: test eax, eax  (2 bytes)
1000     5038 8076d86: je 8076f6a  (6 bytes)
1000     5039 8076d8c: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdfe60] <- 0xfffdfed7
1000     5040 8076d8f: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfed7
1000     5041 8076d92: call 80527a0  (5 bytes)
1000     5042 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0xfffdfed7  ecx <- 0xfffdfed7
1000     5043 80527a4: mov eax, ecx  (2 bytes)  eax <- 0xfffdfed7
1000     5044 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x3
1000     5045 80527a9: je 80527d3  (2 bytes)
1000     5046 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0xfffdfed7]=0x2f
1000     5047 80527ad: je 805284a  (6 bytes)
1000     5048 80527b3: inc eax  (1 bytes)  eax <- 0xfffdfed8
1000     5049 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x0
1000     5050 80527b7: je 80527d3  (2 bytes)
1000     5051 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffdfed8]=0x2f727375  ecx <- 0x2f727375
1000     5052 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5053 80527da: add edx, ecx  (2 bytes)  edx <- 0x2e717274
1000     5054 80527dc: jae 8052837  (2 bytes)
1000     5055 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1030101
1000     5056 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5057 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     5058 80527e7: jne 8052837  (2 bytes)
1000     5059 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffdfedc]=0x61636f6c  ecx <- 0x61636f6c
1000     5060 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5061 80527f1: add edx, ecx  (2 bytes)  edx <- 0x60626e6b
1000     5062 80527f3: jae 8052834  (2 bytes)
1000     5063 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1010107
1000     5064 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5065 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     5066 80527fe: jne 8052834  (2 bytes)
1000     5067 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffdfee0]=0x736e2f6c  ecx <- 0x736e2f6c
1000     5068 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5069 8052808: add edx, ecx  (2 bytes)  edx <- 0x726d2e6b
1000     5070 805280a: jae 8052831  (2 bytes)
1000     5071 805280c: xor edx, ecx  (2 bytes)  edx <- 0x1030107
1000     5072 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5073 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     5074 8052815: jne 8052831  (2 bytes)
1000     5075 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffdfee4]=0x6c6c612d  ecx <- 0x6c6c612d
1000     5076 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5077 805281f: add edx, ecx  (2 bytes)  edx <- 0x6b6b602c
1000     5078 8052821: jae 805282e  (2 bytes)
1000     5079 8052823: xor edx, ecx  (2 bytes)  edx <- 0x7070101
1000     5080 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5081 805282b: inc edx  (1 bytes)  edx <- 0x0
1000     5082 805282c: je 80527d0  (2 bytes)
1000     5083 80527d0: add eax, 0x10  (3 bytes)  eax <- 0xfffdfee8
1000     5084 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0xfffdfee8]=0x6e6f6e69  ecx <- 0x6e6f6e69
1000     5085 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5086 80527da: add edx, ecx  (2 bytes)  edx <- 0x6d6e6d68
1000     5087 80527dc: jae 8052837  (2 bytes)
1000     5088 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010301
1000     5089 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5090 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     5091 80527e7: jne 8052837  (2 bytes)
1000     5092 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0xfffdfeec]=0x2e322d65  ecx <- 0x2e322d65
1000     5093 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5094 80527f1: add edx, ecx  (2 bytes)  edx <- 0x2d312c64
1000     5095 80527f3: jae 8052834  (2 bytes)
1000     5096 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x3030101
1000     5097 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5098 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     5099 80527fe: jne 8052834  (2 bytes)
1000     5100 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0xfffdfef0]=0x6c2f3533  ecx <- 0x6c2f3533
1000     5101 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5102 8052808: add edx, ecx  (2 bytes)  edx <- 0x6b2e3432
1000     5103 805280a: jae 8052831  (2 bytes)
1000     5104 805280c: xor edx, ecx  (2 bytes)  edx <- 0x7010101
1000     5105 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5106 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     5107 8052815: jne 8052831  (2 bytes)
1000     5108 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0xfffdfef4]=0xff006269  ecx <- 0xff006269
1000     5109 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5110 805281f: add edx, ecx  (2 bytes)  edx <- 0xfdff6168
1000     5111 8052821: jae 805282e  (2 bytes)
1000     5112 8052823: xor edx, ecx  (2 bytes)  edx <- 0x2ff0301
1000     5113 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfeffffff
1000     5114 805282b: inc edx  (1 bytes)  edx <- 0xff000000
1000     5115 805282c: je 80527d0  (2 bytes)
1000     5116 805282e: add eax, 0x4  (3 bytes)  eax <- 0xfffdfeec
1000     5117 8052831: add eax, 0x4  (3 bytes)  eax <- 0xfffdfef0
1000     5118 8052834: add eax, 0x4  (3 bytes)  eax <- 0xfffdfef4
1000     5119 8052837: test cl, cl  (2 bytes)
1000     5120 8052839: je 805284a  (2 bytes)
1000     5121 805283b: inc eax  (1 bytes)  eax <- 0xfffdfef5
1000     5122 805283c: test ch, ch  (2 bytes)
1000     5123 805283e: je 805284a  (2 bytes)
1000     5124 8052840: inc eax  (1 bytes)  eax <- 0xfffdfef6
1000     5125 8052841: test ecx, 0xff0000  (6 bytes)
1000     5126 8052847: je 805284a  (2 bytes)
1000     5127 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0xfffdfed7  eax <- 0x1f
1000     5128 805284e: ret  (1 bytes)
1000     5129 8076d97: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfed7  edx <- 0xfffdfed7
1000     5130 8076d9a: mov ebx, eax  (2 bytes)  ebx <- 0x1f
1000     5131 8076d9c: test eax, eax  (2 bytes)
1000     5132 8076d9e: jne 8076f20  (6 bytes)
1000     5133 8076f20: cmp eax, 0x1  (3 bytes)
1000     5134 8076f23: jbe 8076f50  (2 bytes)
1000     5135 8076f25: cmp BYTE PTR [edx+eax-0x1], 0x2f  (5 bytes)  [0xfffdfef5]=0x62
1000     5136 8076f2a: jne 8076f60  (2 bytes)
1000     5137 8076f60: mov BYTE PTR [edx+ebx], 0x2f  (4 bytes)  [0xfffdfef6] <- 0x2f
1000     5138 8076f64: inc ebx  (1 bytes)  ebx <- 0x20
1000     5139 8076f65: jmp 8076da9  (5 bytes)
1000     5140 8076da9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe9c]=0x0  esi <- 0x0
1000     5141 8076dac: test esi, esi  (2 bytes)
1000     5142 8076dae: jne 8076f8f  (6 bytes)
1000     5143 8076db4: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6fa8
1000     5144 8076db9: test eax, eax  (2 bytes)
1000     5145 8076dbb: je 8076e33  (2 bytes)
1000     5146 8076dbd: mov DWORD PTR [ebp-0x28], edx  (3 bytes)  [0xfffdfe6c] <- 0xfffdfed7
1000     5147 8076dc0: jmp 8076dce  (2 bytes)
1000     5148 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6fb8]=0x26
1000     5149 8076dd1: jne 8076dc8  (2 bytes)
1000     5150 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6fa8]=0x80d6f88  eax <- 0x80d6f88
1000     5151 8076dca: test eax, eax  (2 bytes)
1000     5152 8076dcc: je 8076e30  (2 bytes)
1000     5153 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6f98]=0x0
1000     5154 8076dd1: jne 8076dc8  (2 bytes)
1000     5155 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6f88]=0x80d6ce8  eax <- 0x80d6ce8
1000     5156 8076dca: test eax, eax  (2 bytes)
1000     5157 8076dcc: je 8076e30  (2 bytes)
1000     5158 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6cf8]=0x5
1000     5159 8076dd1: jne 8076dc8  (2 bytes)
1000     5160 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6ce8]=0x80d6d10  eax <- 0x80d6d10
1000     5161 8076dca: test eax, eax  (2 bytes)
1000     5162 8076dcc: je 8076e30  (2 bytes)
1000     5163 8076dce: cmp DWORD PTR [eax+0x10], ebx  (3 bytes)  [0x80d6d20]=0x9
1000     5164 8076dd1: jne 8076dc8  (2 bytes)
1000     5165 8076dc8: mov eax, DWORD PTR [eax]  (2 bytes)  [0x80d6d10]=0x0  eax <- 0x0
1000     5166 8076dca: test eax, eax  (2 bytes)
1000     5167 8076dcc: je 8076e30  (2 bytes)
1000     5168 8076e30: mov edx, DWORD PTR [ebp-0x28]  (3 bytes)  [0xfffdfe6c]=0xfffdfed7  edx <- 0xfffdfed7
1000     5169 8076e33: xor edi, edi  (2 bytes)  edi <- 0x0
1000     5170 8076e35: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdfea4]=0x0  ecx <- 0x0
1000     5171 8076e38: test ecx, ecx  (2 bytes)
1000     5172 8076e3a: je 8076e50  (2 bytes)
1000     5173 8076e50: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     5174 8076e55: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfed7
1000     5175 8076e58: lea eax, [ebx+eax*4+0x15]  (4 bytes)  eax <- 0x39
1000     5176 8076e5c: add eax, edi  (2 bytes)  eax <- 0x39
1000     5177 8076e5e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0x39
1000     5178 8076e61: call 8050320  (5 bytes)
1000     5179 8050320: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     5180 8050321: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     5181 8050323: sub esp, 0x30  (3 bytes)  esp <- 0xfffdfe28
1000     5182 8050326: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdfe54] <- 0x0
1000     5183 8050329: mov eax, ds:0x80d404c  (5 bytes)  eax <- 0x0
1000     5184 805032e: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfe4c] <- 0x20
1000     5185 8050331: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdfe50] <- 0x0
1000     5186 8050334: mov edi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0x39  edi <- 0x39
1000     5187 8050337: test eax, eax  (2 bytes)
1000     5188 8050339: jne 8050535  (6 bytes)
1000     5189 805033f: mov edx, 0xffffffec  (6 bytes)  edx <- 0xffffffec
1000     5190 8050345: mov ebx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d681c]=0x80d4c80  ebx <- 0x80d4c80
1000     5191 8050348: test ebx, ebx  (2 bytes)
1000     5192 805034a: je 8050428  (6 bytes)
1000     5193 8050350: mov edx, 0x1  (5 bytes)  edx <- 0x1
1000     5194 8050355: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     5195 805035d: je 8050360  (2 bytes)
1000     5196 8050360: cmpxchg DWORD PTR [ebx], edx  (3 bytes)  [0x80d4c80]=0x0  eax <- 0x0  [0x80d4c80] <- 0x1
1000     5197 8050363: test eax, eax  (2 bytes)
1000     5198 8050365: jne 8050428  (6 bytes)
1000     5199 805036b: mov edx, edi  (2 bytes)  edx <- 0x39
1000     5200 805036d: mov eax, ebx  (2 bytes)  eax <- 0x80d4c80
1000     5201 805036f: call 804ef60  (5 bytes)
1000     5202 804ef60: push ebp  (1 bytes)  esp <- 0xfffdfe20
1000     5203 804ef61: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe20
1000     5204 804ef63: push edi  (1 bytes)  esp <- 0xfffdfe1c
1000     5205 804ef64: push esi  (1 bytes)  esp <- 0xfffdfe18
1000     5206 804ef65: mov esi, eax  (2 bytes)  esi <- 0x80d4c80
1000     5207 804ef67: push ebx  (1 bytes)  esp <- 0xfffdfe14
1000     5208 804ef68: sub esp, 0x68  (3 bytes)  esp <- 0xfffdfdac
1000     5209 804ef6b: mov DWORD PTR [ebp-0x14], edx  (3 bytes)  [0xfffdfe0c] <- 0x39
1000     5210 804ef6e: cmp edx, 0xdf  (3 bytes)
1000     5211 804ef71: ja 804f3d8  (6 bytes)
1000     5212 804ef77: mov eax, edx  (2 bytes)  eax <- 0x39
1000     5213 804ef79: mov edi, 0x10  (5 bytes)  edi <- 0x10
1000     5214 804ef7e: add eax, 0xb  (3 bytes)  eax <- 0x44
1000     5215 804ef81: cmp eax, 0xf  (3 bytes)
1000     5216 804ef84: ja 804f060  (6 bytes)
1000     5217 804f060: mov edi, eax  (2 bytes)  edi <- 0x44
1000     5218 804f062: and edi, 0xf8  (3 bytes)  edi <- 0x40
1000     5219 804f065: cmp edi, DWORD PTR ds:0x80d5110  (6 bytes)  [0x80d5110]=0x40
1000     5220 804f06b: ja 804efe0  (6 bytes)
1000     5221 804f071: jmp 804ef92  (5 bytes)
1000     5222 804ef92: mov eax, edi  (2 bytes)  eax <- 0x40
1000     5223 804ef94: shr eax, 0x3  (3 bytes)  eax <- 0x8
1000     5224 804ef97: sub eax, 0x2  (3 bytes)  eax <- 0x6
1000     5225 804ef9a: lea edx, [esi+eax*4+0x8]  (4 bytes)  edx <- 0x80d4ca0
1000     5226 804ef9e: mov ebx, DWORD PTR [esi+eax*4+0x8]  (4 bytes)  [0x80d4ca0]=0x0  ebx <- 0x0
1000     5227 804efa2: mov DWORD PTR [ebp-0x30], edx  (3 bytes)  [0xfffdfdf0] <- 0x80d4ca0
1000     5228 804efa5: test ebx, ebx  (2 bytes)
1000     5229 804efa7: je 804efe0  (2 bytes)
1000     5230 804efe0: cmp edi, 0x1ff  (6 bytes)
1000     5231 804efe6: ja 804f080  (6 bytes)
1000     5232 804efec: lea edx, [esi+0x38]  (3 bytes)  edx <- 0x80d4cb8
1000     5233 804efef: mov eax, edi  (2 bytes)  eax <- 0x40
1000     5234 804eff1: mov DWORD PTR [ebp-0x24], edx  (3 bytes)  [0xfffdfdfc] <- 0x80d4cb8
1000     5235 804eff4: shr eax, 0x3  (3 bytes)  eax <- 0x8
1000     5236 804eff7: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdfdf4] <- 0x8
1000     5237 804effa: lea eax, [edx+eax*8-0x10]  (4 bytes)  eax <- 0x80d4ce8
1000     5238 804effe: mov ebx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80d4cf4]=0x80d4ce8  ebx <- 0x80d4ce8
1000     5239 804f001: cmp ebx, eax  (2 bytes)
1000     5240 804f003: je 804f0b5  (6 bytes)
1000     5241 804f0b5: lea eax, [esi+0x30]  (3 bytes)  eax <- 0x80d4cb0
1000     5242 804f0b8: mov edx, edi  (2 bytes)  edx <- 0x40
1000     5243 804f0ba: lea ecx, [edi+0x10]  (3 bytes)  ecx <- 0x50
1000     5244 804f0bd: shr edx, 0x3  (3 bytes)  edx <- 0x8
1000     5245 804f0c0: mov DWORD PTR [ebp-0x10], esi  (3 bytes)  [0xfffdfe10] <- 0x80d4c80
1000     5246 804f0c3: mov DWORD PTR [ebp-0x38], eax  (3 bytes)  [0xfffdfde8] <- 0x80d4cb0
1000     5247 804f0c6: mov DWORD PTR [ebp-0x40], edx  (3 bytes)  [0xfffdfde0] <- 0x8
1000     5248 804f0c9: mov DWORD PTR [ebp-0x3c], ecx  (3 bytes)  [0xfffdfde4] <- 0x50
1000     5249 804f0cc: mov DWORD PTR [ebp-0x1c], edi  (3 bytes)  [0xfffdfe04] <- 0x40
1000     5250 804f0cf: mov esi, eax  (2 bytes)  esi <- 0x80d4cb0
1000     5251 804f0d1: mov DWORD PTR [ebp-0x18], 0x0  (7 bytes)  [0xfffdfe08] <- 0x0
1000     5252 804f0d8: mov ebx, DWORD PTR [esi+0xc]  (3 bytes)  [0x80d4cbc]=0x80d4cb0  ebx <- 0x80d4cb0
1000     5253 804f0db: cmp esi, ebx  (2 bytes)
1000     5254 804f0dd: je 804f17e  (6 bytes)
1000     5255 804f17e: cmp DWORD PTR [ebp-0x1c], 0x1ff  (7 bytes)  [0xfffdfe04]=0x40
1000     5256 804f185: jbe 804f1a4  (2 bytes)
1000     5257 804f1a4: mov eax, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfdf4]=0x8  eax <- 0x8
1000     5258 804f1a7: mov edx, DWORD PTR [ebp-0x24]  (3 bytes)  [0xfffdfdfc]=0x80d4cb8  edx <- 0x80d4cb8
1000     5259 804f1aa: mov edi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  edi <- 0x80d4c80
1000     5260 804f1ad: lea ebx, [edx+eax*8-0x8]  (4 bytes)  ebx <- 0x80d4cf0
1000     5261 804f1b1: mov ecx, DWORD PTR [ebp-0x2c]  (3 bytes)  [0xfffdfdf4]=0x8  ecx <- 0x8
1000     5262 804f1b4: inc ecx  (1 bytes)  ecx <- 0x9
1000     5263 804f1b5: mov eax, ecx  (2 bytes)  eax <- 0x9
1000     5264 804f1b7: and ecx, 0x1f  (3 bytes)  ecx <- 0x9
1000     5265 804f1ba: shr eax, 0x5  (3 bytes)  eax <- 0x0
1000     5266 804f1bd: mov edx, DWORD PTR [edi+eax*4+0x430]  (7 bytes)  [0x80d50b0]=0x0  edx <- 0x0
1000     5267 804f1c4: mov edi, 0x1  (5 bytes)  edi <- 0x1
1000     5268 804f1c9: shl edi, cl  (2 bytes)  edi <- 0x200
1000     5269 804f1cb: mov ecx, edi  (2 bytes)  ecx <- 0x200
1000     5270 804f1cd: test ecx, ecx  (2 bytes)
1000     5271 804f1cf: je 804f1d5  (2 bytes)
1000     5272 804f1d1: cmp ecx, edx  (2 bytes)
1000     5273 804f1d3: jbe 804f204  (2 bytes)
1000     5274 804f1d5: mov edx, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  edx <- 0x80d4c80
1000     5275 804f1d8: lea ecx, [edx+eax*4+0x434]  (7 bytes)  ecx <- 0x80d50b4
1000     5276 804f1df: nop  (1 bytes)
1000     5277 804f1e0: inc eax  (1 bytes)  eax <- 0x1
1000     5278 804f1e1: cmp eax, 0x3  (3 bytes)
1000     5279 804f1e4: ja 804f668  (6 bytes)
1000     5280 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b4]=0x0  edx <- 0x0
1000     5281 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50b8
1000     5282 804f1ef: test edx, edx  (2 bytes)
1000     5283 804f1f1: je 804f1e0  (2 bytes)
1000     5284 804f1e0: inc eax  (1 bytes)  eax <- 0x2
1000     5285 804f1e1: cmp eax, 0x3  (3 bytes)
1000     5286 804f1e4: ja 804f668  (6 bytes)
1000     5287 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50b8]=0x0  edx <- 0x0
1000     5288 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50bc
1000     5289 804f1ef: test edx, edx  (2 bytes)
1000     5290 804f1f1: je 804f1e0  (2 bytes)
1000     5291 804f1e0: inc eax  (1 bytes)  eax <- 0x3
1000     5292 804f1e1: cmp eax, 0x3  (3 bytes)
1000     5293 804f1e4: ja 804f668  (6 bytes)
1000     5294 804f1ea: mov edx, DWORD PTR [ecx]  (2 bytes)  [0x80d50bc]=0x0  edx <- 0x0
1000     5295 804f1ec: add ecx, 0x4  (3 bytes)  ecx <- 0x80d50c0
1000     5296 804f1ef: test edx, edx  (2 bytes)
1000     5297 804f1f1: je 804f1e0  (2 bytes)
1000     5298 804f1e0: inc eax  (1 bytes)  eax <- 0x4
1000     5299 804f1e1: cmp eax, 0x3  (3 bytes)
1000     5300 804f1e4: ja 804f668  (6 bytes)
1000     5301 804f668: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  eax <- 0x80d4c80
1000     5302 804f66b: mov ebx, DWORD PTR [eax+0x30]  (3 bytes)  [0x80d4cb0]=0x80d6fe8  ebx <- 0x80d6fe8
1000     5303 804f66e: mov eax, DWORD PTR [ebx+0x4]  (3 bytes)  [0x80d6fec]=0x21019  eax <- 0x21019
1000     5304 804f671: mov edx, eax  (2 bytes)  edx <- 0x21019
1000     5305 804f673: and edx, 0xf8  (3 bytes)  edx <- 0x21018
1000     5306 804f676: cmp edx, DWORD PTR [ebp-0x3c]  (3 bytes)  [0xfffdfde4]=0x50
1000     5307 804f679: jae 804fb29  (6 bytes)
1000     5308 804fb29: mov edi, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe04]=0x40  edi <- 0x40
1000     5309 804fb2c: mov esi, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdfe10]=0x80d4c80  esi <- 0x80d4c80
1000     5310 804fb2f: lea ecx, [ebx+edi]  (3 bytes)  ecx <- 0x80d7028
1000     5311 804fb32: mov DWORD PTR [ebp-0x18], edx  (3 bytes)  [0xfffdfe08] <- 0x21018
1000     5312 804fb35: mov eax, edi  (2 bytes)  eax <- 0x40
1000     5313 804fb37: xor edx, edx  (2 bytes)  edx <- 0x0
1000     5314 804fb39: mov DWORD PTR [esi+0x30], ecx  (3 bytes)  [0x80d4cb0] <- 0x80d7028
1000     5315 804fb3c: cmp esi, 0x80d4c80  (6 bytes)
1000     5316 804fb42: setne dl  (3 bytes)  dl <- 0x0
1000     5317 804fb45: or eax, 0x1  (3 bytes)  eax <- 0x41
1000     5318 804fb48: shl edx, 0x2  (3 bytes)  edx <- 0x0
1000     5319 804fb4b: or eax, edx  (2 bytes)  eax <- 0x41
1000     5320 804fb4d: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe08]=0x21018  edx <- 0x21018
1000     5321 804fb50: mov DWORD PTR [ebx+0x4], eax  (3 bytes)  [0x80d6fec] <- 0x41
1000     5322 804fb53: sub edx, edi  (2 bytes)  edx <- 0x20fd8
1000     5323 804fb55: add ebx, 0x8  (3 bytes)  ebx <- 0x80d6ff0
1000     5324 804fb58: mov edi, edx  (2 bytes)  edi <- 0x20fd8
1000     5325 804fb5a: mov eax, ds:0x80d5114  (5 bytes)  eax <- 0x0
1000     5326 804fb5f: or edi, 0x1  (3 bytes)  edi <- 0x20fd9
1000     5327 804fb62: mov esi, ebx  (2 bytes)  esi <- 0x80d6ff0
1000     5328 804fb64: mov DWORD PTR [ecx+0x4], edi  (3 bytes)  [0x80d702c] <- 0x20fd9
1000     5329 804fb67: test eax, eax  (2 bytes)
1000     5330 804fb69: je 804efd2  (6 bytes)
1000     5331 804efd2: add esp, 0x68  (3 bytes)  esp <- 0xfffdfe14
1000     5332 804efd5: mov eax, esi  (2 bytes)  eax <- 0x80d6ff0
1000     5333 804efd7: pop ebx  (1 bytes)  ebx <- 0x80d4c80
1000     5334 804efd8: pop esi  (1 bytes)  esi <- 0x0
1000     5335 804efd9: pop edi  (1 bytes)  edi <- 0x39
1000     5336 804efda: leave  (1 bytes)  ebp <- 0xfffdfe58
1000     5337 804efdb: ret  (1 bytes)
1000     5338 8050374: mov esi, eax  (2 bytes)  esi <- 0x80d6ff0
1000     5339 8050376: test eax, eax  (2 bytes)
1000     5340 8050378: je 8050460  (6 bytes)
1000     5341 805037e: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     5342 8050386: je 8050389  (2 bytes)
1000     5343 8050389: sub DWORD PTR [ebx], 0x1  (3 bytes)  [0x80d4c80]=0x1  [0x80d4c80] <- 0x0
1000     5344 805038c: jne 8052501  (6 bytes)
1000     5345 8050392: lea edx, [esi-0x8]  (3 bytes)  edx <- 0x80d6fe8
1000     5346 8050395: mov eax, DWORD PTR [edx+0x4]  (3 bytes)  [0x80d6fec]=0x41  eax <- 0x41
1000     5347 8050398: test al, 0x2  (2 bytes)
1000     5348 805039a: jne 805043d  (6 bytes)
1000     5349 80503a0: mov ecx, 0x80d4c80  (5 bytes)  ecx <- 0x80d4c80
1000     5350 80503a5: test al, 0x4  (2 bytes)
1000     5351 80503a7: je 80503b1  (2 bytes)
1000     5352 80503b1: cmp ecx, ebx  (2 bytes)
1000     5353 80503b3: je 805043d  (6 bytes)
1000     5354 805043d: mov eax, esi  (2 bytes)  eax <- 0x80d6ff0
1000     5355 805043f: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfe4c]=0x20  ebx <- 0x20
1000     5356 8050442: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0x0  esi <- 0x0
1000     5357 8050445: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x0  edi <- 0x0
1000     5358 8050448: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     5359 8050449: ret  (1 bytes)
1000     5360 8076e66: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfed7  edx <- 0xfffdfed7
1000     5361 8076e69: mov esi, eax  (2 bytes)  esi <- 0x80d6ff0
1000     5362 8076e6b: test eax, eax  (2 bytes)
1000     5363 8076e6d: je 8076fbd  (6 bytes)
1000     5364 8076e73: mov eax, ds:0x80d3bd0  (5 bytes)  eax <- 0x1
1000     5365 8076e78: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfe74] <- 0xfffdfed7
1000     5366 8076e7b: lea eax, [esi+eax*4+0x14]  (4 bytes)  eax <- 0x80d7008
1000     5367 8076e7f: mov DWORD PTR [esi+0xc], eax  (3 bytes)  [0x80d6ffc] <- 0x80d7008
1000     5368 8076e82: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfe64] <- 0xfffdfed7
1000     5369 8076e86: mov DWORD PTR [esp+0x8], ebx  (4 bytes)  [0xfffdfe68] <- 0x20
1000     5370 8076e8a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0x80d7008
1000     5371 8076e8d: call 8052bf0  (5 bytes)
1000     5372 8052bf0: mov ecx, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdfe68]=0x20  ecx <- 0x20
1000     5373 8052bf4: mov eax, edi  (2 bytes)  eax <- 0x0
1000     5374 8052bf6: mov edi, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfe60]=0x80d7008  edi <- 0x80d7008
1000     5375 8052bfa: mov edx, esi  (2 bytes)  edx <- 0x80d6ff0
1000     5376 8052bfc: mov esi, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdfe64]=0xfffdfed7  esi <- 0xfffdfed7
1000     5377 8052c00: cld  (1 bytes)
1000     5378 8052c01: shr ecx, 1  (2 bytes)  ecx <- 0x10
1000     5379 8052c03: jae 8052c06  (2 bytes)
1000     5380 8052c06: shr ecx, 1  (2 bytes)  ecx <- 0x8
1000     5381 8052c08: jae 8052c0c  (2 bytes)
1000     5382 8052c0c: rep movsd  (2 bytes)
1000     5383 8052c0e: xchg edi, eax  (1 bytes)  eax <- 0x80d7028  edi <- 0x0
1000     5384 8052c0f: mov esi, edx  (2 bytes)  esi <- 0x80d6ff0
1000     5385 8052c11: ret  (1 bytes)
1000     5386 8076e92: mov BYTE PTR [eax], 0x0  (3 bytes)  [0x80d7028] <- 0x0
1000     5387 8076e95: mov DWORD PTR [esi+0x10], ebx  (3 bytes)  [0x80d7000] <- 0x20
1000     5388 8076e98: cmp ebx, DWORD PTR ds:0x80d5950  (6 bytes)  [0x80d5950]=0x26
1000     5389 8076e9e: mov edx, DWORD PTR [ebp-0x20]  (3 bytes)  [0xfffdfe74]=0xfffdfed7  edx <- 0xfffdfed7
1000     5390 8076ea1: jbe 8076ea9  (2 bytes)
1000     5391 8076ea9: cmp BYTE PTR [edx], 0x2f  (3 bytes)  [0xfffdfed7]=0x2f
1000     5392 8076eac: mov ecx, DWORD PTR ds:0x80d3bd0  (6 bytes)  [0x80d3bd0]=0x1  ecx <- 0x1
1000     5393 8076eb2: setne dl  (3 bytes)  dl <- 0x0
1000     5394 8076eb5: movzx edx, dl  (3 bytes)  edx <- 0x0
1000     5395 8076eb8: add edx, edx  (2 bytes)  edx <- 0x0
1000     5396 8076eba: test ecx, ecx  (2 bytes)
1000     5397 8076ebc: je 8076ec9  (2 bytes)
1000     5398 8076ebe: xor eax, eax  (2 bytes)  eax <- 0x0
1000     5399 8076ec0: mov DWORD PTR [esi+eax*4+0x14], edx  (4 bytes)  [0x80d7004] <- 0x0
1000     5400 8076ec4: inc eax  (1 bytes)  eax <- 0x1
1000     5401 8076ec5: cmp ecx, eax  (2 bytes)
1000     5402 8076ec7: ja 8076ec0  (2 bytes)
1000     5403 8076ec9: mov edx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfea0]=0x80b67d2  edx <- 0x80b67d2
1000     5404 8076ecc: mov eax, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdfea4]=0x0  eax <- 0x0
1000     5405 8076ecf: mov DWORD PTR [esi+0x4], edx  (3 bytes)  [0x80d6ff4] <- 0x80b67d2
1000     5406 8076ed2: test eax, eax  (2 bytes)
1000     5407 8076ed4: je 8076fb1  (6 bytes)
1000     5408 8076fb1: mov DWORD PTR [esi+0x8], 0x0  (7 bytes)  [0x80d6ff8] <- 0x0
1000     5409 8076fb8: jmp 8076ef7  (5 bytes)
1000     5410 8076ef7: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6fa8
1000     5411 8076efc: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe7c]=0x80d6f70  edx <- 0x80d6f70
1000     5412 8076eff: mov DWORD PTR [esi], eax  (2 bytes)  [0x80d6ff0] <- 0x80d6fa8
1000     5413 8076f01: mov eax, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfe80]=0x2  eax <- 0x2
1000     5414 8076f04: mov DWORD PTR ds:0x80d5d50, esi  (6 bytes)  [0x80d5d50] <- 0x80d6ff0
1000     5415 8076f0a: mov DWORD PTR [edx+eax*4], esi  (3 bytes)  [0x80d6f78] <- 0x80d6ff0
1000     5416 8076f0d: inc eax  (1 bytes)  eax <- 0x3
1000     5417 8076f0e: mov DWORD PTR [ebp-0x14], eax  (3 bytes)  [0xfffdfe80] <- 0x3
1000     5418 8076f11: jmp 8076d70  (5 bytes)
1000     5419 8076d70: mov ecx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfe78]=0x80baa85  ecx <- 0x80baa85
1000     5420 8076d73: lea eax, [ebp-0x10]  (3 bytes)  eax <- 0xfffdfe84
1000     5421 8076d76: mov DWORD PTR [esp+0x4], ecx  (4 bytes)  [0xfffdfe64] <- 0x80baa85
1000     5422 8076d7a: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfe60] <- 0xfffdfe84
1000     5423 8076d7d: call 8094110  (5 bytes)
1000     5424 8094110: push ebp  (1 bytes)  esp <- 0xfffdfe58
1000     5425 8094111: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfe58
1000     5426 8094113: sub esp, 0x10  (3 bytes)  esp <- 0xfffdfe48
1000     5427 8094116: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdfe54] <- 0x80d6ff0
1000     5428 8094119: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdfe50] <- 0x20
1000     5429 809411c: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfe60]=0xfffdfe84  esi <- 0xfffdfe84
1000     5430 809411f: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfe64]=0x80baa85  eax <- 0x80baa85
1000     5431 8094122: mov ebx, DWORD PTR [esi]  (2 bytes)  [0xfffdfe84]=0x0  ebx <- 0x0
1000     5432 8094124: test ebx, ebx  (2 bytes)
1000     5433 8094126: je 809414b  (2 bytes)
1000     5434 809414b: mov eax, ebx  (2 bytes)  eax <- 0x0
1000     5435 809414d: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdfe54]=0x80d6ff0  esi <- 0x80d6ff0
1000     5436 8094150: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdfe50]=0x20  ebx <- 0x20
1000     5437 8094153: leave  (1 bytes)  ebp <- 0xfffdfe94
1000     5438 8094154: ret  (1 bytes)
1000     5439 8076d82: mov edx, eax  (2 bytes)  edx <- 0x0
1000     5440 8076d84: test eax, eax  (2 bytes)
1000     5441 8076d86: je 8076f6a  (6 bytes)
1000     5442 8076f6a: mov ecx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfe7c]=0x80d6f70  ecx <- 0x80d6f70
1000     5443 8076f6d: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfe80]=0x3  edx <- 0x3
1000     5444 8076f70: mov eax, ecx  (2 bytes)  eax <- 0x80d6f70
1000     5445 8076f72: mov DWORD PTR [ecx+edx*4], 0x0  (7 bytes)  [0x80d6f7c] <- 0x0
1000     5446 8076f79: lea esp, [ebp-0xc]  (3 bytes)  esp <- 0xfffdfe88
1000     5447 8076f7c: pop ebx  (1 bytes)  ebx <- 0xfffdfeb0
1000     5448 8076f7d: pop esi  (1 bytes)  esi <- 0x10
1000     5449 8076f7e: pop edi  (1 bytes)  edi <- 0xfffe019f
1000     5450 8076f7f: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     5451 8076f80: ret  (1 bytes)
1000     5452 8078dbf: mov eax, ds:0x80d3bc4  (5 bytes)  eax <- 0x80d6f70
1000     5453 8078dc4: mov esi, DWORD PTR [eax]  (2 bytes)  [0x80d6f70]=0x80d6f88  esi <- 0x80d6f88
1000     5454 8078dc6: test esi, esi  (2 bytes)
1000     5455 8078dc8: je 8078dd9  (2 bytes)
1000     5456 8078dca: mov DWORD PTR ds:0x80d3bc8, 0x0  (10 bytes)  [0x80d3bc8] <- 0x0
1000     5457 8078dd4: jmp 8078d0f  (5 bytes)
1000     5458 8078d0f: mov eax, ds:0x80d5d50  (5 bytes)  eax <- 0x80d6ff0
1000     5459 8078d14: mov ds:0x80d5d3c, eax  (5 bytes)
1000     5460 8078d19: lea esp, [ebp-0xc]  (3 bytes)  esp <- 0xfffdff10
1000     5461 8078d1c: pop ebx  (1 bytes)  ebx <- 0x1
1000     5462 8078d1d: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     5463 8078d1e: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     5464 8078d1f: leave  (1 bytes)  ebp <- 0xfffdff48
1000     5465 8078d20: ret  (1 bytes)
1000     5466 8054ffc: mov DWORD PTR [esp], 0x80b67e2  (7 bytes)  [0xfffdff24] <- 0x80b67e2
1000     5467 8055003: call 805ace0  (5 bytes)
1000     5468 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     5469 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     5470 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000     5471 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000     5472 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     5473 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000     5474 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b67e2  esi <- 0x80b67e2
1000     5475 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b67e2
1000     5476 805acef: call 80527a0  (5 bytes)
1000     5477 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67e2  ecx <- 0x80b67e2
1000     5478 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b67e2
1000     5479 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     5480 80527a9: je 80527d3  (2 bytes)
1000     5481 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67e2]=0x4c
1000     5482 80527ad: je 805284a  (6 bytes)
1000     5483 80527b3: inc eax  (1 bytes)  eax <- 0x80b67e3
1000     5484 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     5485 80527b7: je 80527d3  (2 bytes)
1000     5486 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67e3]=0x44
1000     5487 80527bb: je 805284a  (6 bytes)
1000     5488 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b67e4
1000     5489 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000     5490 80527c7: je 80527d3  (2 bytes)
1000     5491 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b67e4]=0x4e49425f  ecx <- 0x4e49425f
1000     5492 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5493 80527da: add edx, ecx  (2 bytes)  edx <- 0x4d48415e
1000     5494 80527dc: jae 8052837  (2 bytes)
1000     5495 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010301
1000     5496 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5497 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     5498 80527e7: jne 8052837  (2 bytes)
1000     5499 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b67e8]=0x4f4e5f44  ecx <- 0x4f4e5f44
1000     5500 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5501 80527f1: add edx, ecx  (2 bytes)  edx <- 0x4e4d5e43
1000     5502 80527f3: jae 8052834  (2 bytes)
1000     5503 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1030107
1000     5504 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5505 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     5506 80527fe: jne 8052834  (2 bytes)
1000     5507 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0x80b67ec]=0x444c0057  ecx <- 0x444c0057
1000     5508 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5509 8052808: add edx, ecx  (2 bytes)  edx <- 0x434aff56
1000     5510 805280a: jae 8052831  (2 bytes)
1000     5511 805280c: xor edx, ecx  (2 bytes)  edx <- 0x706ff01
1000     5512 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffeffff
1000     5513 8052814: inc edx  (1 bytes)  edx <- 0xffff0000
1000     5514 8052815: jne 8052831  (2 bytes)
1000     5515 8052831: add eax, 0x4  (3 bytes)  eax <- 0x80b67e8
1000     5516 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b67ec
1000     5517 8052837: test cl, cl  (2 bytes)
1000     5518 8052839: je 805284a  (2 bytes)
1000     5519 805283b: inc eax  (1 bytes)  eax <- 0x80b67ed
1000     5520 805283c: test ch, ch  (2 bytes)
1000     5521 805283e: je 805284a  (2 bytes)
1000     5522 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67e2  eax <- 0xb
1000     5523 805284e: ret  (1 bytes)
1000     5524 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     5525 805acfa: mov edi, eax  (2 bytes)  edi <- 0xb
1000     5526 805acfc: test ebx, ebx  (2 bytes)
1000     5527 805acfe: jne 805ad10  (2 bytes)
1000     5528 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b67e2]=0x4c
1000     5529 805ad13: je 805ad00  (2 bytes)
1000     5530 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b67e3]=0x44
1000     5531 805ad19: je 805ad70  (2 bytes)
1000     5532 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b67e2]=0x444c  eax <- 0x444c
1000     5533 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0x9
1000     5534 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b67e4
1000     5535 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0x9
1000     5536 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b67e4
1000     5537 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000     5538 805ad2c: test esi, esi  (2 bytes)
1000     5539 805ad2e: je 805ad00  (2 bytes)
1000     5540 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0xb
1000     5541 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000     5542 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000     5543 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000     5544 805ad3b: jne 805ad63  (2 bytes)
1000     5545 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     5546 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000     5547 805ad68: test esi, esi  (2 bytes)
1000     5548 805ad6a: jne 805ad38  (2 bytes)
1000     5549 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000     5550 805ad3b: jne 805ad63  (2 bytes)
1000     5551 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     5552 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000     5553 805ad68: test esi, esi  (2 bytes)
1000     5554 805ad6a: jne 805ad38  (2 bytes)
1000     5555 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000     5556 805ad3b: jne 805ad63  (2 bytes)
1000     5557 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     5558 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000     5559 805ad68: test esi, esi  (2 bytes)
1000     5560 805ad6a: jne 805ad38  (2 bytes)
1000     5561 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000     5562 805ad3b: jne 805ad63  (2 bytes)
1000     5563 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     5564 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000     5565 805ad68: test esi, esi  (2 bytes)
1000     5566 805ad6a: jne 805ad38  (2 bytes)
1000     5567 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000     5568 805ad3b: jne 805ad63  (2 bytes)
1000     5569 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     5570 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000     5571 805ad68: test esi, esi  (2 bytes)
1000     5572 805ad6a: jne 805ad38  (2 bytes)
1000     5573 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000     5574 805ad3b: jne 805ad63  (2 bytes)
1000     5575 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     5576 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000     5577 805ad68: test esi, esi  (2 bytes)
1000     5578 805ad6a: jne 805ad38  (2 bytes)
1000     5579 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000     5580 805ad3b: jne 805ad63  (2 bytes)
1000     5581 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0x9  eax <- 0x9
1000     5582 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b67e4  edx <- 0x80b67e4
1000     5583 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0x9
1000     5584 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b67e4
1000     5585 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000     5586 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000     5587 805ad51: call 806d520  (5 bytes)
1000     5588 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000     5589 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000     5590 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000     5591 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000     5592 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000     5593 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000     5594 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000     5595 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0x9  ecx <- 0x9
1000     5596 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000     5597 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b67e4  edi <- 0x80b67e4
1000     5598 806d533: cmp ecx, 0x3  (3 bytes)
1000     5599 806d536: jbe 806d598  (2 bytes)
1000     5600 806d538: mov edx, ecx  (2 bytes)  edx <- 0x9
1000     5601 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x2
1000     5602 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000     5603 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67e4]=0x5f  ebx <- 0x5f
1000     5604 806d543: cmp al, bl  (2 bytes)
1000     5605 806d545: je 806d558  (2 bytes)
1000     5606 806d558: test al, al  (2 bytes)
1000     5607 806d55a: je 806d547  (2 bytes)
1000     5608 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000     5609 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67e5]=0x42  ebx <- 0x42
1000     5610 806d564: cmp al, bl  (2 bytes)
1000     5611 806d566: jne 806d547  (2 bytes)
1000     5612 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x42
1000     5613 806d54a: movzx eax, al  (3 bytes)  eax <- 0x4c
1000     5614 806d54d: sub eax, ebx  (2 bytes)  eax <- 0xa
1000     5615 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000     5616 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000     5617 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000     5618 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     5619 806d553: ret  (1 bytes)
1000     5620 805ad56: test eax, eax  (2 bytes)
1000     5621 805ad58: jne 805ad63  (2 bytes)
1000     5622 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000     5623 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  esi <- 0xfffe01e6
1000     5624 805ad68: test esi, esi  (2 bytes)
1000     5625 805ad6a: jne 805ad38  (2 bytes)
1000     5626 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe01e6]=0x4354
1000     5627 805ad3b: jne 805ad63  (2 bytes)
1000     5628 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000     5629 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  esi <- 0xfffe0246
1000     5630 805ad68: test esi, esi  (2 bytes)
1000     5631 805ad6a: jne 805ad38  (2 bytes)
1000     5632 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0246]=0x494c
1000     5633 805ad3b: jne 805ad63  (2 bytes)
1000     5634 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000     5635 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  esi <- 0xfffe0266
1000     5636 805ad68: test esi, esi  (2 bytes)
1000     5637 805ad6a: jne 805ad38  (2 bytes)
1000     5638 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0266]=0x414d
1000     5639 805ad3b: jne 805ad63  (2 bytes)
1000     5640 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000     5641 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  esi <- 0xfffe027e
1000     5642 805ad68: test esi, esi  (2 bytes)
1000     5643 805ad6a: jne 805ad38  (2 bytes)
1000     5644 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe027e]=0x4150
1000     5645 805ad3b: jne 805ad63  (2 bytes)
1000     5646 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000     5647 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  esi <- 0xfffe03c6
1000     5648 805ad68: test esi, esi  (2 bytes)
1000     5649 805ad6a: jne 805ad38  (2 bytes)
1000     5650 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03c6]=0x5750
1000     5651 805ad3b: jne 805ad63  (2 bytes)
1000     5652 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000     5653 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  esi <- 0xfffe03f2
1000     5654 805ad68: test esi, esi  (2 bytes)
1000     5655 805ad6a: jne 805ad38  (2 bytes)
1000     5656 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03f2]=0x414c
1000     5657 805ad3b: jne 805ad63  (2 bytes)
1000     5658 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000     5659 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  esi <- 0xfffe0403
1000     5660 805ad68: test esi, esi  (2 bytes)
1000     5661 805ad6a: jne 805ad38  (2 bytes)
1000     5662 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0403]=0x4853
1000     5663 805ad3b: jne 805ad63  (2 bytes)
1000     5664 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000     5665 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  esi <- 0xfffe040b
1000     5666 805ad68: test esi, esi  (2 bytes)
1000     5667 805ad6a: jne 805ad38  (2 bytes)
1000     5668 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe040b]=0x4f48
1000     5669 805ad3b: jne 805ad63  (2 bytes)
1000     5670 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000     5671 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  esi <- 0xfffe0425
1000     5672 805ad68: test esi, esi  (2 bytes)
1000     5673 805ad6a: jne 805ad38  (2 bytes)
1000     5674 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0425]=0x414c
1000     5675 805ad3b: jne 805ad63  (2 bytes)
1000     5676 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000     5677 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  esi <- 0xfffe0435
1000     5678 805ad68: test esi, esi  (2 bytes)
1000     5679 805ad6a: jne 805ad38  (2 bytes)
1000     5680 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0435]=0x4e49
1000     5681 805ad3b: jne 805ad63  (2 bytes)
1000     5682 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000     5683 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  esi <- 0xfffe045a
1000     5684 805ad68: test esi, esi  (2 bytes)
1000     5685 805ad6a: jne 805ad38  (2 bytes)
1000     5686 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe045a]=0x4f4c
1000     5687 805ad3b: jne 805ad63  (2 bytes)
1000     5688 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000     5689 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  esi <- 0xfffe046b
1000     5690 805ad68: test esi, esi  (2 bytes)
1000     5691 805ad6a: jne 805ad38  (2 bytes)
1000     5692 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe046b]=0x5353
1000     5693 805ad3b: jne 805ad63  (2 bytes)
1000     5694 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000     5695 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  esi <- 0xfffe049d
1000     5696 805ad68: test esi, esi  (2 bytes)
1000     5697 805ad6a: jne 805ad38  (2 bytes)
1000     5698 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe049d]=0x4944
1000     5699 805ad3b: jne 805ad63  (2 bytes)
1000     5700 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000     5701 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  esi <- 0xfffe04b4
1000     5702 805ad68: test esi, esi  (2 bytes)
1000     5703 805ad6a: jne 805ad38  (2 bytes)
1000     5704 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04b4]=0x524f
1000     5705 805ad3b: jne 805ad63  (2 bytes)
1000     5706 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000     5707 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  esi <- 0xfffe04de
1000     5708 805ad68: test esi, esi  (2 bytes)
1000     5709 805ad6a: jne 805ad38  (2 bytes)
1000     5710 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04de]=0x3d5f
1000     5711 805ad3b: jne 805ad63  (2 bytes)
1000     5712 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000     5713 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  esi <- 0xfffe04ee
1000     5714 805ad68: test esi, esi  (2 bytes)
1000     5715 805ad6a: jne 805ad38  (2 bytes)
1000     5716 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04ee]=0x4c4f
1000     5717 805ad3b: jne 805ad63  (2 bytes)
1000     5718 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000     5719 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  esi <- 0x0
1000     5720 805ad68: test esi, esi  (2 bytes)
1000     5721 805ad6a: jne 805ad38  (2 bytes)
1000     5722 805ad6c: jmp 805ad00  (2 bytes)
1000     5723 805ad00: xor eax, eax  (2 bytes)  eax <- 0x0
1000     5724 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     5725 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000     5726 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     5727 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     5728 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000     5729 805ad09: ret  (1 bytes)
1000     5730 8055008: test eax, eax  (2 bytes)
1000     5731 805500a: je 80552d8  (6 bytes)
1000     5732 80552d8: mov eax, 0x80b6bd9  (5 bytes)  eax <- 0x80b6bd9
1000     5733 80552dd: jmp 8055010  (5 bytes)
1000     5734 8055010: cmp BYTE PTR [eax], 0x0  (3 bytes)  [0x80b6bd9]=0x0
1000     5735 8055013: sete al  (3 bytes)  al <- 0x1
1000     5736 8055016: movzx eax, al  (3 bytes)  eax <- 0x1
1000     5737 8055019: mov ds:0x80d5d18, eax  (5 bytes)
1000     5738 805501e: mov DWORD PTR [esp], 0x80b67ee  (7 bytes)  [0xfffdff24] <- 0x80b67ee
1000     5739 8055025: call 805ace0  (5 bytes)
1000     5740 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     5741 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     5742 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000     5743 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000     5744 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     5745 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000     5746 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b67ee  esi <- 0x80b67ee
1000     5747 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b67ee
1000     5748 805acef: call 80527a0  (5 bytes)
1000     5749 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67ee  ecx <- 0x80b67ee
1000     5750 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b67ee
1000     5751 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     5752 80527a9: je 80527d3  (2 bytes)
1000     5753 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67ee]=0x4c
1000     5754 80527ad: je 805284a  (6 bytes)
1000     5755 80527b3: inc eax  (1 bytes)  eax <- 0x80b67ef
1000     5756 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     5757 80527b7: je 80527d3  (2 bytes)
1000     5758 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67ef]=0x44
1000     5759 80527bb: je 805284a  (6 bytes)
1000     5760 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b67f0
1000     5761 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000     5762 80527c7: je 80527d3  (2 bytes)
1000     5763 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b67f0]=0x4e49425f  ecx <- 0x4e49425f
1000     5764 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5765 80527da: add edx, ecx  (2 bytes)  edx <- 0x4d48415e
1000     5766 80527dc: jae 8052837  (2 bytes)
1000     5767 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010301
1000     5768 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5769 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     5770 80527e7: jne 8052837  (2 bytes)
1000     5771 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b67f4]=0x4f4e5f44  ecx <- 0x4f4e5f44
1000     5772 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5773 80527f1: add edx, ecx  (2 bytes)  edx <- 0x4e4d5e43
1000     5774 80527f3: jae 8052834  (2 bytes)
1000     5775 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1030107
1000     5776 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     5777 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     5778 80527fe: jne 8052834  (2 bytes)
1000     5779 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0x80b67f8]=0x444c0054  ecx <- 0x444c0054
1000     5780 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     5781 8052808: add edx, ecx  (2 bytes)  edx <- 0x434aff53
1000     5782 805280a: jae 8052831  (2 bytes)
1000     5783 805280c: xor edx, ecx  (2 bytes)  edx <- 0x706ff07
1000     5784 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffeffff
1000     5785 8052814: inc edx  (1 bytes)  edx <- 0xffff0000
1000     5786 8052815: jne 8052831  (2 bytes)
1000     5787 8052831: add eax, 0x4  (3 bytes)  eax <- 0x80b67f4
1000     5788 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b67f8
1000     5789 8052837: test cl, cl  (2 bytes)
1000     5790 8052839: je 805284a  (2 bytes)
1000     5791 805283b: inc eax  (1 bytes)  eax <- 0x80b67f9
1000     5792 805283c: test ch, ch  (2 bytes)
1000     5793 805283e: je 805284a  (2 bytes)
1000     5794 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67ee  eax <- 0xb
1000     5795 805284e: ret  (1 bytes)
1000     5796 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     5797 805acfa: mov edi, eax  (2 bytes)  edi <- 0xb
1000     5798 805acfc: test ebx, ebx  (2 bytes)
1000     5799 805acfe: jne 805ad10  (2 bytes)
1000     5800 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b67ee]=0x4c
1000     5801 805ad13: je 805ad00  (2 bytes)
1000     5802 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b67ef]=0x44
1000     5803 805ad19: je 805ad70  (2 bytes)
1000     5804 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b67ee]=0x444c  eax <- 0x444c
1000     5805 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0x9
1000     5806 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b67f0
1000     5807 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0x9
1000     5808 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b67f0
1000     5809 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000     5810 805ad2c: test esi, esi  (2 bytes)
1000     5811 805ad2e: je 805ad00  (2 bytes)
1000     5812 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0xb
1000     5813 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000     5814 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000     5815 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000     5816 805ad3b: jne 805ad63  (2 bytes)
1000     5817 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     5818 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000     5819 805ad68: test esi, esi  (2 bytes)
1000     5820 805ad6a: jne 805ad38  (2 bytes)
1000     5821 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000     5822 805ad3b: jne 805ad63  (2 bytes)
1000     5823 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     5824 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000     5825 805ad68: test esi, esi  (2 bytes)
1000     5826 805ad6a: jne 805ad38  (2 bytes)
1000     5827 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000     5828 805ad3b: jne 805ad63  (2 bytes)
1000     5829 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     5830 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000     5831 805ad68: test esi, esi  (2 bytes)
1000     5832 805ad6a: jne 805ad38  (2 bytes)
1000     5833 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000     5834 805ad3b: jne 805ad63  (2 bytes)
1000     5835 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     5836 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000     5837 805ad68: test esi, esi  (2 bytes)
1000     5838 805ad6a: jne 805ad38  (2 bytes)
1000     5839 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000     5840 805ad3b: jne 805ad63  (2 bytes)
1000     5841 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     5842 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000     5843 805ad68: test esi, esi  (2 bytes)
1000     5844 805ad6a: jne 805ad38  (2 bytes)
1000     5845 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000     5846 805ad3b: jne 805ad63  (2 bytes)
1000     5847 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     5848 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000     5849 805ad68: test esi, esi  (2 bytes)
1000     5850 805ad6a: jne 805ad38  (2 bytes)
1000     5851 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000     5852 805ad3b: jne 805ad63  (2 bytes)
1000     5853 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0x9  eax <- 0x9
1000     5854 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b67f0  edx <- 0x80b67f0
1000     5855 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0x9
1000     5856 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b67f0
1000     5857 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000     5858 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000     5859 805ad51: call 806d520  (5 bytes)
1000     5860 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000     5861 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000     5862 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000     5863 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000     5864 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000     5865 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000     5866 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000     5867 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0x9  ecx <- 0x9
1000     5868 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000     5869 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b67f0  edi <- 0x80b67f0
1000     5870 806d533: cmp ecx, 0x3  (3 bytes)
1000     5871 806d536: jbe 806d598  (2 bytes)
1000     5872 806d538: mov edx, ecx  (2 bytes)  edx <- 0x9
1000     5873 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x2
1000     5874 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000     5875 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67f0]=0x5f  ebx <- 0x5f
1000     5876 806d543: cmp al, bl  (2 bytes)
1000     5877 806d545: je 806d558  (2 bytes)
1000     5878 806d558: test al, al  (2 bytes)
1000     5879 806d55a: je 806d547  (2 bytes)
1000     5880 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000     5881 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67f1]=0x42  ebx <- 0x42
1000     5882 806d564: cmp al, bl  (2 bytes)
1000     5883 806d566: jne 806d547  (2 bytes)
1000     5884 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x42
1000     5885 806d54a: movzx eax, al  (3 bytes)  eax <- 0x4c
1000     5886 806d54d: sub eax, ebx  (2 bytes)  eax <- 0xa
1000     5887 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000     5888 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000     5889 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000     5890 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     5891 806d553: ret  (1 bytes)
1000     5892 805ad56: test eax, eax  (2 bytes)
1000     5893 805ad58: jne 805ad63  (2 bytes)
1000     5894 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000     5895 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  esi <- 0xfffe01e6
1000     5896 805ad68: test esi, esi  (2 bytes)
1000     5897 805ad6a: jne 805ad38  (2 bytes)
1000     5898 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe01e6]=0x4354
1000     5899 805ad3b: jne 805ad63  (2 bytes)
1000     5900 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000     5901 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  esi <- 0xfffe0246
1000     5902 805ad68: test esi, esi  (2 bytes)
1000     5903 805ad6a: jne 805ad38  (2 bytes)
1000     5904 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0246]=0x494c
1000     5905 805ad3b: jne 805ad63  (2 bytes)
1000     5906 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000     5907 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  esi <- 0xfffe0266
1000     5908 805ad68: test esi, esi  (2 bytes)
1000     5909 805ad6a: jne 805ad38  (2 bytes)
1000     5910 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0266]=0x414d
1000     5911 805ad3b: jne 805ad63  (2 bytes)
1000     5912 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000     5913 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  esi <- 0xfffe027e
1000     5914 805ad68: test esi, esi  (2 bytes)
1000     5915 805ad6a: jne 805ad38  (2 bytes)
1000     5916 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe027e]=0x4150
1000     5917 805ad3b: jne 805ad63  (2 bytes)
1000     5918 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000     5919 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  esi <- 0xfffe03c6
1000     5920 805ad68: test esi, esi  (2 bytes)
1000     5921 805ad6a: jne 805ad38  (2 bytes)
1000     5922 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03c6]=0x5750
1000     5923 805ad3b: jne 805ad63  (2 bytes)
1000     5924 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000     5925 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  esi <- 0xfffe03f2
1000     5926 805ad68: test esi, esi  (2 bytes)
1000     5927 805ad6a: jne 805ad38  (2 bytes)
1000     5928 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03f2]=0x414c
1000     5929 805ad3b: jne 805ad63  (2 bytes)
1000     5930 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000     5931 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  esi <- 0xfffe0403
1000     5932 805ad68: test esi, esi  (2 bytes)
1000     5933 805ad6a: jne 805ad38  (2 bytes)
1000     5934 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0403]=0x4853
1000     5935 805ad3b: jne 805ad63  (2 bytes)
1000     5936 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000     5937 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  esi <- 0xfffe040b
1000     5938 805ad68: test esi, esi  (2 bytes)
1000     5939 805ad6a: jne 805ad38  (2 bytes)
1000     5940 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe040b]=0x4f48
1000     5941 805ad3b: jne 805ad63  (2 bytes)
1000     5942 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000     5943 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  esi <- 0xfffe0425
1000     5944 805ad68: test esi, esi  (2 bytes)
1000     5945 805ad6a: jne 805ad38  (2 bytes)
1000     5946 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0425]=0x414c
1000     5947 805ad3b: jne 805ad63  (2 bytes)
1000     5948 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000     5949 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  esi <- 0xfffe0435
1000     5950 805ad68: test esi, esi  (2 bytes)
1000     5951 805ad6a: jne 805ad38  (2 bytes)
1000     5952 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0435]=0x4e49
1000     5953 805ad3b: jne 805ad63  (2 bytes)
1000     5954 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000     5955 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  esi <- 0xfffe045a
1000     5956 805ad68: test esi, esi  (2 bytes)
1000     5957 805ad6a: jne 805ad38  (2 bytes)
1000     5958 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe045a]=0x4f4c
1000     5959 805ad3b: jne 805ad63  (2 bytes)
1000     5960 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000     5961 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  esi <- 0xfffe046b
1000     5962 805ad68: test esi, esi  (2 bytes)
1000     5963 805ad6a: jne 805ad38  (2 bytes)
1000     5964 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe046b]=0x5353
1000     5965 805ad3b: jne 805ad63  (2 bytes)
1000     5966 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000     5967 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  esi <- 0xfffe049d
1000     5968 805ad68: test esi, esi  (2 bytes)
1000     5969 805ad6a: jne 805ad38  (2 bytes)
1000     5970 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe049d]=0x4944
1000     5971 805ad3b: jne 805ad63  (2 bytes)
1000     5972 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000     5973 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  esi <- 0xfffe04b4
1000     5974 805ad68: test esi, esi  (2 bytes)
1000     5975 805ad6a: jne 805ad38  (2 bytes)
1000     5976 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04b4]=0x524f
1000     5977 805ad3b: jne 805ad63  (2 bytes)
1000     5978 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000     5979 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  esi <- 0xfffe04de
1000     5980 805ad68: test esi, esi  (2 bytes)
1000     5981 805ad6a: jne 805ad38  (2 bytes)
1000     5982 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04de]=0x3d5f
1000     5983 805ad3b: jne 805ad63  (2 bytes)
1000     5984 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000     5985 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  esi <- 0xfffe04ee
1000     5986 805ad68: test esi, esi  (2 bytes)
1000     5987 805ad6a: jne 805ad38  (2 bytes)
1000     5988 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04ee]=0x4c4f
1000     5989 805ad3b: jne 805ad63  (2 bytes)
1000     5990 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000     5991 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  esi <- 0x0
1000     5992 805ad68: test esi, esi  (2 bytes)
1000     5993 805ad6a: jne 805ad38  (2 bytes)
1000     5994 805ad6c: jmp 805ad00  (2 bytes)
1000     5995 805ad00: xor eax, eax  (2 bytes)  eax <- 0x0
1000     5996 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     5997 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000     5998 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     5999 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     6000 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000     6001 805ad09: ret  (1 bytes)
1000     6002 805502a: test eax, eax  (2 bytes)
1000     6003 805502c: je 80552f8  (6 bytes)
1000     6004 80552f8: mov eax, 0x80b6bd9  (5 bytes)  eax <- 0x80b6bd9
1000     6005 80552fd: jmp 8055032  (5 bytes)
1000     6006 8055032: cmp BYTE PTR [eax], 0x0  (3 bytes)  [0x80b6bd9]=0x0
1000     6007 8055035: setne al  (3 bytes)  al <- 0x0
1000     6008 8055038: movzx eax, al  (3 bytes)  eax <- 0x0
1000     6009 805503b: mov ds:0x80d5d10, eax  (5 bytes)
1000     6010 8055040: mov DWORD PTR [esp], 0x80b67fa  (7 bytes)  [0xfffdff24] <- 0x80b67fa
1000     6011 8055047: call 805ace0  (5 bytes)
1000     6012 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     6013 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     6014 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000     6015 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000     6016 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     6017 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000     6018 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b67fa  esi <- 0x80b67fa
1000     6019 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b67fa
1000     6020 805acef: call 80527a0  (5 bytes)
1000     6021 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67fa  ecx <- 0x80b67fa
1000     6022 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b67fa
1000     6023 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     6024 80527a9: je 80527d3  (2 bytes)
1000     6025 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67fa]=0x4c
1000     6026 80527ad: je 805284a  (6 bytes)
1000     6027 80527b3: inc eax  (1 bytes)  eax <- 0x80b67fb
1000     6028 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     6029 80527b7: je 80527d3  (2 bytes)
1000     6030 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b67fb]=0x44
1000     6031 80527bb: je 805284a  (6 bytes)
1000     6032 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b67fc
1000     6033 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000     6034 80527c7: je 80527d3  (2 bytes)
1000     6035 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b67fc]=0x4e59445f  ecx <- 0x4e59445f
1000     6036 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6037 80527da: add edx, ecx  (2 bytes)  edx <- 0x4d58435e
1000     6038 80527dc: jae 8052837  (2 bytes)
1000     6039 80527de: xor edx, ecx  (2 bytes)  edx <- 0x3010701
1000     6040 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6041 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     6042 80527e7: jne 8052837  (2 bytes)
1000     6043 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b6800]=0x43494d41  ecx <- 0x43494d41
1000     6044 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6045 80527f1: add edx, ecx  (2 bytes)  edx <- 0x42484c40
1000     6046 80527f3: jae 8052834  (2 bytes)
1000     6047 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1010101
1000     6048 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6049 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     6050 80527fe: jne 8052834  (2 bytes)
1000     6051 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0x80b6804]=0x4145575f  ecx <- 0x4145575f
1000     6052 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6053 8052808: add edx, ecx  (2 bytes)  edx <- 0x4044565e
1000     6054 805280a: jae 8052831  (2 bytes)
1000     6055 805280c: xor edx, ecx  (2 bytes)  edx <- 0x1010101
1000     6056 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6057 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     6058 8052815: jne 8052831  (2 bytes)
1000     6059 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80b6808]=0x444c004b  ecx <- 0x444c004b
1000     6060 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6061 805281f: add edx, ecx  (2 bytes)  edx <- 0x434aff4a
1000     6062 8052821: jae 805282e  (2 bytes)
1000     6063 8052823: xor edx, ecx  (2 bytes)  edx <- 0x706ff01
1000     6064 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfffeffff
1000     6065 805282b: inc edx  (1 bytes)  edx <- 0xffff0000
1000     6066 805282c: je 80527d0  (2 bytes)
1000     6067 805282e: add eax, 0x4  (3 bytes)  eax <- 0x80b6800
1000     6068 8052831: add eax, 0x4  (3 bytes)  eax <- 0x80b6804
1000     6069 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b6808
1000     6070 8052837: test cl, cl  (2 bytes)
1000     6071 8052839: je 805284a  (2 bytes)
1000     6072 805283b: inc eax  (1 bytes)  eax <- 0x80b6809
1000     6073 805283c: test ch, ch  (2 bytes)
1000     6074 805283e: je 805284a  (2 bytes)
1000     6075 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b67fa  eax <- 0xf
1000     6076 805284e: ret  (1 bytes)
1000     6077 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     6078 805acfa: mov edi, eax  (2 bytes)  edi <- 0xf
1000     6079 805acfc: test ebx, ebx  (2 bytes)
1000     6080 805acfe: jne 805ad10  (2 bytes)
1000     6081 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b67fa]=0x4c
1000     6082 805ad13: je 805ad00  (2 bytes)
1000     6083 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b67fb]=0x44
1000     6084 805ad19: je 805ad70  (2 bytes)
1000     6085 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b67fa]=0x444c  eax <- 0x444c
1000     6086 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0xd
1000     6087 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b67fc
1000     6088 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0xd
1000     6089 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b67fc
1000     6090 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000     6091 805ad2c: test esi, esi  (2 bytes)
1000     6092 805ad2e: je 805ad00  (2 bytes)
1000     6093 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0xf
1000     6094 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000     6095 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000     6096 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000     6097 805ad3b: jne 805ad63  (2 bytes)
1000     6098 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     6099 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000     6100 805ad68: test esi, esi  (2 bytes)
1000     6101 805ad6a: jne 805ad38  (2 bytes)
1000     6102 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000     6103 805ad3b: jne 805ad63  (2 bytes)
1000     6104 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     6105 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000     6106 805ad68: test esi, esi  (2 bytes)
1000     6107 805ad6a: jne 805ad38  (2 bytes)
1000     6108 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000     6109 805ad3b: jne 805ad63  (2 bytes)
1000     6110 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     6111 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000     6112 805ad68: test esi, esi  (2 bytes)
1000     6113 805ad6a: jne 805ad38  (2 bytes)
1000     6114 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000     6115 805ad3b: jne 805ad63  (2 bytes)
1000     6116 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     6117 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000     6118 805ad68: test esi, esi  (2 bytes)
1000     6119 805ad6a: jne 805ad38  (2 bytes)
1000     6120 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000     6121 805ad3b: jne 805ad63  (2 bytes)
1000     6122 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     6123 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000     6124 805ad68: test esi, esi  (2 bytes)
1000     6125 805ad6a: jne 805ad38  (2 bytes)
1000     6126 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000     6127 805ad3b: jne 805ad63  (2 bytes)
1000     6128 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     6129 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000     6130 805ad68: test esi, esi  (2 bytes)
1000     6131 805ad6a: jne 805ad38  (2 bytes)
1000     6132 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000     6133 805ad3b: jne 805ad63  (2 bytes)
1000     6134 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0xd  eax <- 0xd
1000     6135 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b67fc  edx <- 0x80b67fc
1000     6136 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0xd
1000     6137 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b67fc
1000     6138 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000     6139 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000     6140 805ad51: call 806d520  (5 bytes)
1000     6141 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000     6142 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6143 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000     6144 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000     6145 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000     6146 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000     6147 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000     6148 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0xd  ecx <- 0xd
1000     6149 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000     6150 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b67fc  edi <- 0x80b67fc
1000     6151 806d533: cmp ecx, 0x3  (3 bytes)
1000     6152 806d536: jbe 806d598  (2 bytes)
1000     6153 806d538: mov edx, ecx  (2 bytes)  edx <- 0xd
1000     6154 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x3
1000     6155 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000     6156 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b67fc]=0x5f  ebx <- 0x5f
1000     6157 806d543: cmp al, bl  (2 bytes)
1000     6158 806d545: je 806d558  (2 bytes)
1000     6159 806d558: test al, al  (2 bytes)
1000     6160 806d55a: je 806d547  (2 bytes)
1000     6161 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000     6162 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b67fd]=0x44  ebx <- 0x44
1000     6163 806d564: cmp al, bl  (2 bytes)
1000     6164 806d566: jne 806d547  (2 bytes)
1000     6165 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x44
1000     6166 806d54a: movzx eax, al  (3 bytes)  eax <- 0x4c
1000     6167 806d54d: sub eax, ebx  (2 bytes)  eax <- 0x8
1000     6168 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000     6169 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000     6170 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000     6171 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     6172 806d553: ret  (1 bytes)
1000     6173 805ad56: test eax, eax  (2 bytes)
1000     6174 805ad58: jne 805ad63  (2 bytes)
1000     6175 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000     6176 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  esi <- 0xfffe01e6
1000     6177 805ad68: test esi, esi  (2 bytes)
1000     6178 805ad6a: jne 805ad38  (2 bytes)
1000     6179 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe01e6]=0x4354
1000     6180 805ad3b: jne 805ad63  (2 bytes)
1000     6181 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000     6182 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  esi <- 0xfffe0246
1000     6183 805ad68: test esi, esi  (2 bytes)
1000     6184 805ad6a: jne 805ad38  (2 bytes)
1000     6185 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0246]=0x494c
1000     6186 805ad3b: jne 805ad63  (2 bytes)
1000     6187 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000     6188 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  esi <- 0xfffe0266
1000     6189 805ad68: test esi, esi  (2 bytes)
1000     6190 805ad6a: jne 805ad38  (2 bytes)
1000     6191 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0266]=0x414d
1000     6192 805ad3b: jne 805ad63  (2 bytes)
1000     6193 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000     6194 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  esi <- 0xfffe027e
1000     6195 805ad68: test esi, esi  (2 bytes)
1000     6196 805ad6a: jne 805ad38  (2 bytes)
1000     6197 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe027e]=0x4150
1000     6198 805ad3b: jne 805ad63  (2 bytes)
1000     6199 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000     6200 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  esi <- 0xfffe03c6
1000     6201 805ad68: test esi, esi  (2 bytes)
1000     6202 805ad6a: jne 805ad38  (2 bytes)
1000     6203 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03c6]=0x5750
1000     6204 805ad3b: jne 805ad63  (2 bytes)
1000     6205 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000     6206 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  esi <- 0xfffe03f2
1000     6207 805ad68: test esi, esi  (2 bytes)
1000     6208 805ad6a: jne 805ad38  (2 bytes)
1000     6209 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03f2]=0x414c
1000     6210 805ad3b: jne 805ad63  (2 bytes)
1000     6211 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000     6212 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  esi <- 0xfffe0403
1000     6213 805ad68: test esi, esi  (2 bytes)
1000     6214 805ad6a: jne 805ad38  (2 bytes)
1000     6215 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0403]=0x4853
1000     6216 805ad3b: jne 805ad63  (2 bytes)
1000     6217 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000     6218 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  esi <- 0xfffe040b
1000     6219 805ad68: test esi, esi  (2 bytes)
1000     6220 805ad6a: jne 805ad38  (2 bytes)
1000     6221 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe040b]=0x4f48
1000     6222 805ad3b: jne 805ad63  (2 bytes)
1000     6223 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000     6224 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  esi <- 0xfffe0425
1000     6225 805ad68: test esi, esi  (2 bytes)
1000     6226 805ad6a: jne 805ad38  (2 bytes)
1000     6227 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0425]=0x414c
1000     6228 805ad3b: jne 805ad63  (2 bytes)
1000     6229 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000     6230 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  esi <- 0xfffe0435
1000     6231 805ad68: test esi, esi  (2 bytes)
1000     6232 805ad6a: jne 805ad38  (2 bytes)
1000     6233 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0435]=0x4e49
1000     6234 805ad3b: jne 805ad63  (2 bytes)
1000     6235 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000     6236 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  esi <- 0xfffe045a
1000     6237 805ad68: test esi, esi  (2 bytes)
1000     6238 805ad6a: jne 805ad38  (2 bytes)
1000     6239 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe045a]=0x4f4c
1000     6240 805ad3b: jne 805ad63  (2 bytes)
1000     6241 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000     6242 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  esi <- 0xfffe046b
1000     6243 805ad68: test esi, esi  (2 bytes)
1000     6244 805ad6a: jne 805ad38  (2 bytes)
1000     6245 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe046b]=0x5353
1000     6246 805ad3b: jne 805ad63  (2 bytes)
1000     6247 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000     6248 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  esi <- 0xfffe049d
1000     6249 805ad68: test esi, esi  (2 bytes)
1000     6250 805ad6a: jne 805ad38  (2 bytes)
1000     6251 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe049d]=0x4944
1000     6252 805ad3b: jne 805ad63  (2 bytes)
1000     6253 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000     6254 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  esi <- 0xfffe04b4
1000     6255 805ad68: test esi, esi  (2 bytes)
1000     6256 805ad6a: jne 805ad38  (2 bytes)
1000     6257 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04b4]=0x524f
1000     6258 805ad3b: jne 805ad63  (2 bytes)
1000     6259 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000     6260 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  esi <- 0xfffe04de
1000     6261 805ad68: test esi, esi  (2 bytes)
1000     6262 805ad6a: jne 805ad38  (2 bytes)
1000     6263 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04de]=0x3d5f
1000     6264 805ad3b: jne 805ad63  (2 bytes)
1000     6265 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000     6266 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  esi <- 0xfffe04ee
1000     6267 805ad68: test esi, esi  (2 bytes)
1000     6268 805ad6a: jne 805ad38  (2 bytes)
1000     6269 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04ee]=0x4c4f
1000     6270 805ad3b: jne 805ad63  (2 bytes)
1000     6271 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000     6272 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  esi <- 0x0
1000     6273 805ad68: test esi, esi  (2 bytes)
1000     6274 805ad6a: jne 805ad38  (2 bytes)
1000     6275 805ad6c: jmp 805ad00  (2 bytes)
1000     6276 805ad00: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6277 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     6278 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000     6279 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     6280 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     6281 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000     6282 805ad09: ret  (1 bytes)
1000     6283 805504c: test eax, eax  (2 bytes)
1000     6284 805504e: je 80552e8  (6 bytes)
1000     6285 80552e8: mov eax, 0x80b6bd9  (5 bytes)  eax <- 0x80b6bd9
1000     6286 80552ed: jmp 8055054  (5 bytes)
1000     6287 8055054: cmp BYTE PTR [eax], 0x0  (3 bytes)  [0x80b6bd9]=0x0
1000     6288 8055057: sete al  (3 bytes)  al <- 0x1
1000     6289 805505a: movzx eax, al  (3 bytes)  eax <- 0x1
1000     6290 805505d: mov ds:0x80d5d34, eax  (5 bytes)
1000     6291 8055062: mov DWORD PTR [esp], 0x80b680a  (7 bytes)  [0xfffdff24] <- 0x80b680a
1000     6292 8055069: call 805ace0  (5 bytes)
1000     6293 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     6294 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     6295 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000     6296 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000     6297 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     6298 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000     6299 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b680a  esi <- 0x80b680a
1000     6300 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b680a
1000     6301 805acef: call 80527a0  (5 bytes)
1000     6302 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b680a  ecx <- 0x80b680a
1000     6303 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b680a
1000     6304 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     6305 80527a9: je 80527d3  (2 bytes)
1000     6306 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b680a]=0x4c
1000     6307 80527ad: je 805284a  (6 bytes)
1000     6308 80527b3: inc eax  (1 bytes)  eax <- 0x80b680b
1000     6309 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     6310 80527b7: je 80527d3  (2 bytes)
1000     6311 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b680b]=0x44
1000     6312 80527bb: je 805284a  (6 bytes)
1000     6313 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b680c
1000     6314 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000     6315 80527c7: je 80527d3  (2 bytes)
1000     6316 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b680c]=0x4f52505f  ecx <- 0x4f52505f
1000     6317 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6318 80527da: add edx, ecx  (2 bytes)  edx <- 0x4e514f5e
1000     6319 80527dc: jae 8052837  (2 bytes)
1000     6320 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1031f01
1000     6321 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6322 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     6323 80527e7: jne 8052837  (2 bytes)
1000     6324 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b6810]=0x454c4946  ecx <- 0x454c4946
1000     6325 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6326 80527f1: add edx, ecx  (2 bytes)  edx <- 0x444b4845
1000     6327 80527f3: jae 8052834  (2 bytes)
1000     6328 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1070103
1000     6329 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6330 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     6331 80527fe: jne 8052834  (2 bytes)
1000     6332 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0x80b6814]=0x54554f5f  ecx <- 0x54554f5f
1000     6333 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6334 8052808: add edx, ecx  (2 bytes)  edx <- 0x53544e5e
1000     6335 805280a: jae 8052831  (2 bytes)
1000     6336 805280c: xor edx, ecx  (2 bytes)  edx <- 0x7010101
1000     6337 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6338 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     6339 8052815: jne 8052831  (2 bytes)
1000     6340 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80b6818]=0x545550  ecx <- 0x545550
1000     6341 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6342 805281f: add edx, ecx  (2 bytes)  edx <- 0xff53544f
1000     6343 8052821: jae 805282e  (2 bytes)
1000     6344 805282e: add eax, 0x4  (3 bytes)  eax <- 0x80b6810
1000     6345 8052831: add eax, 0x4  (3 bytes)  eax <- 0x80b6814
1000     6346 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b6818
1000     6347 8052837: test cl, cl  (2 bytes)
1000     6348 8052839: je 805284a  (2 bytes)
1000     6349 805283b: inc eax  (1 bytes)  eax <- 0x80b6819
1000     6350 805283c: test ch, ch  (2 bytes)
1000     6351 805283e: je 805284a  (2 bytes)
1000     6352 8052840: inc eax  (1 bytes)  eax <- 0x80b681a
1000     6353 8052841: test ecx, 0xff0000  (6 bytes)
1000     6354 8052847: je 805284a  (2 bytes)
1000     6355 8052849: inc eax  (1 bytes)  eax <- 0x80b681b
1000     6356 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b680a  eax <- 0x11
1000     6357 805284e: ret  (1 bytes)
1000     6358 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     6359 805acfa: mov edi, eax  (2 bytes)  edi <- 0x11
1000     6360 805acfc: test ebx, ebx  (2 bytes)
1000     6361 805acfe: jne 805ad10  (2 bytes)
1000     6362 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b680a]=0x4c
1000     6363 805ad13: je 805ad00  (2 bytes)
1000     6364 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b680b]=0x44
1000     6365 805ad19: je 805ad70  (2 bytes)
1000     6366 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b680a]=0x444c  eax <- 0x444c
1000     6367 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0xf
1000     6368 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b680c
1000     6369 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0xf
1000     6370 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b680c
1000     6371 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000     6372 805ad2c: test esi, esi  (2 bytes)
1000     6373 805ad2e: je 805ad00  (2 bytes)
1000     6374 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0x11
1000     6375 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000     6376 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000     6377 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000     6378 805ad3b: jne 805ad63  (2 bytes)
1000     6379 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     6380 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000     6381 805ad68: test esi, esi  (2 bytes)
1000     6382 805ad6a: jne 805ad38  (2 bytes)
1000     6383 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000     6384 805ad3b: jne 805ad63  (2 bytes)
1000     6385 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     6386 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000     6387 805ad68: test esi, esi  (2 bytes)
1000     6388 805ad6a: jne 805ad38  (2 bytes)
1000     6389 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000     6390 805ad3b: jne 805ad63  (2 bytes)
1000     6391 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     6392 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000     6393 805ad68: test esi, esi  (2 bytes)
1000     6394 805ad6a: jne 805ad38  (2 bytes)
1000     6395 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000     6396 805ad3b: jne 805ad63  (2 bytes)
1000     6397 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     6398 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000     6399 805ad68: test esi, esi  (2 bytes)
1000     6400 805ad6a: jne 805ad38  (2 bytes)
1000     6401 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000     6402 805ad3b: jne 805ad63  (2 bytes)
1000     6403 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     6404 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000     6405 805ad68: test esi, esi  (2 bytes)
1000     6406 805ad6a: jne 805ad38  (2 bytes)
1000     6407 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000     6408 805ad3b: jne 805ad63  (2 bytes)
1000     6409 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     6410 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000     6411 805ad68: test esi, esi  (2 bytes)
1000     6412 805ad6a: jne 805ad38  (2 bytes)
1000     6413 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000     6414 805ad3b: jne 805ad63  (2 bytes)
1000     6415 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0xf  eax <- 0xf
1000     6416 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b680c  edx <- 0x80b680c
1000     6417 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0xf
1000     6418 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b680c
1000     6419 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000     6420 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000     6421 805ad51: call 806d520  (5 bytes)
1000     6422 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000     6423 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6424 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000     6425 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000     6426 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000     6427 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000     6428 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000     6429 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0xf  ecx <- 0xf
1000     6430 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000     6431 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b680c  edi <- 0x80b680c
1000     6432 806d533: cmp ecx, 0x3  (3 bytes)
1000     6433 806d536: jbe 806d598  (2 bytes)
1000     6434 806d538: mov edx, ecx  (2 bytes)  edx <- 0xf
1000     6435 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x3
1000     6436 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000     6437 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b680c]=0x5f  ebx <- 0x5f
1000     6438 806d543: cmp al, bl  (2 bytes)
1000     6439 806d545: je 806d558  (2 bytes)
1000     6440 806d558: test al, al  (2 bytes)
1000     6441 806d55a: je 806d547  (2 bytes)
1000     6442 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000     6443 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b680d]=0x50  ebx <- 0x50
1000     6444 806d564: cmp al, bl  (2 bytes)
1000     6445 806d566: jne 806d547  (2 bytes)
1000     6446 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x50
1000     6447 806d54a: movzx eax, al  (3 bytes)  eax <- 0x4c
1000     6448 806d54d: sub eax, ebx  (2 bytes)  eax <- 0xfffffffc
1000     6449 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000     6450 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000     6451 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000     6452 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     6453 806d553: ret  (1 bytes)
1000     6454 805ad56: test eax, eax  (2 bytes)
1000     6455 805ad58: jne 805ad63  (2 bytes)
1000     6456 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000     6457 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  esi <- 0xfffe01e6
1000     6458 805ad68: test esi, esi  (2 bytes)
1000     6459 805ad6a: jne 805ad38  (2 bytes)
1000     6460 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe01e6]=0x4354
1000     6461 805ad3b: jne 805ad63  (2 bytes)
1000     6462 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000     6463 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  esi <- 0xfffe0246
1000     6464 805ad68: test esi, esi  (2 bytes)
1000     6465 805ad6a: jne 805ad38  (2 bytes)
1000     6466 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0246]=0x494c
1000     6467 805ad3b: jne 805ad63  (2 bytes)
1000     6468 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000     6469 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  esi <- 0xfffe0266
1000     6470 805ad68: test esi, esi  (2 bytes)
1000     6471 805ad6a: jne 805ad38  (2 bytes)
1000     6472 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0266]=0x414d
1000     6473 805ad3b: jne 805ad63  (2 bytes)
1000     6474 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000     6475 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  esi <- 0xfffe027e
1000     6476 805ad68: test esi, esi  (2 bytes)
1000     6477 805ad6a: jne 805ad38  (2 bytes)
1000     6478 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe027e]=0x4150
1000     6479 805ad3b: jne 805ad63  (2 bytes)
1000     6480 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000     6481 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  esi <- 0xfffe03c6
1000     6482 805ad68: test esi, esi  (2 bytes)
1000     6483 805ad6a: jne 805ad38  (2 bytes)
1000     6484 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03c6]=0x5750
1000     6485 805ad3b: jne 805ad63  (2 bytes)
1000     6486 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000     6487 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  esi <- 0xfffe03f2
1000     6488 805ad68: test esi, esi  (2 bytes)
1000     6489 805ad6a: jne 805ad38  (2 bytes)
1000     6490 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03f2]=0x414c
1000     6491 805ad3b: jne 805ad63  (2 bytes)
1000     6492 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000     6493 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  esi <- 0xfffe0403
1000     6494 805ad68: test esi, esi  (2 bytes)
1000     6495 805ad6a: jne 805ad38  (2 bytes)
1000     6496 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0403]=0x4853
1000     6497 805ad3b: jne 805ad63  (2 bytes)
1000     6498 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000     6499 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  esi <- 0xfffe040b
1000     6500 805ad68: test esi, esi  (2 bytes)
1000     6501 805ad6a: jne 805ad38  (2 bytes)
1000     6502 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe040b]=0x4f48
1000     6503 805ad3b: jne 805ad63  (2 bytes)
1000     6504 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000     6505 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  esi <- 0xfffe0425
1000     6506 805ad68: test esi, esi  (2 bytes)
1000     6507 805ad6a: jne 805ad38  (2 bytes)
1000     6508 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0425]=0x414c
1000     6509 805ad3b: jne 805ad63  (2 bytes)
1000     6510 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000     6511 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  esi <- 0xfffe0435
1000     6512 805ad68: test esi, esi  (2 bytes)
1000     6513 805ad6a: jne 805ad38  (2 bytes)
1000     6514 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0435]=0x4e49
1000     6515 805ad3b: jne 805ad63  (2 bytes)
1000     6516 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000     6517 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  esi <- 0xfffe045a
1000     6518 805ad68: test esi, esi  (2 bytes)
1000     6519 805ad6a: jne 805ad38  (2 bytes)
1000     6520 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe045a]=0x4f4c
1000     6521 805ad3b: jne 805ad63  (2 bytes)
1000     6522 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000     6523 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  esi <- 0xfffe046b
1000     6524 805ad68: test esi, esi  (2 bytes)
1000     6525 805ad6a: jne 805ad38  (2 bytes)
1000     6526 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe046b]=0x5353
1000     6527 805ad3b: jne 805ad63  (2 bytes)
1000     6528 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000     6529 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  esi <- 0xfffe049d
1000     6530 805ad68: test esi, esi  (2 bytes)
1000     6531 805ad6a: jne 805ad38  (2 bytes)
1000     6532 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe049d]=0x4944
1000     6533 805ad3b: jne 805ad63  (2 bytes)
1000     6534 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000     6535 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  esi <- 0xfffe04b4
1000     6536 805ad68: test esi, esi  (2 bytes)
1000     6537 805ad6a: jne 805ad38  (2 bytes)
1000     6538 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04b4]=0x524f
1000     6539 805ad3b: jne 805ad63  (2 bytes)
1000     6540 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000     6541 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  esi <- 0xfffe04de
1000     6542 805ad68: test esi, esi  (2 bytes)
1000     6543 805ad6a: jne 805ad38  (2 bytes)
1000     6544 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04de]=0x3d5f
1000     6545 805ad3b: jne 805ad63  (2 bytes)
1000     6546 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000     6547 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  esi <- 0xfffe04ee
1000     6548 805ad68: test esi, esi  (2 bytes)
1000     6549 805ad6a: jne 805ad38  (2 bytes)
1000     6550 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04ee]=0x4c4f
1000     6551 805ad3b: jne 805ad63  (2 bytes)
1000     6552 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000     6553 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  esi <- 0x0
1000     6554 805ad68: test esi, esi  (2 bytes)
1000     6555 805ad6a: jne 805ad38  (2 bytes)
1000     6556 805ad6c: jmp 805ad00  (2 bytes)
1000     6557 805ad00: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6558 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     6559 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000     6560 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     6561 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     6562 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000     6563 805ad09: ret  (1 bytes)
1000     6564 805506e: mov ds:0x80d5ce0, eax  (5 bytes)
1000     6565 8055073: test eax, eax  (2 bytes)
1000     6566 8055075: je 8055080  (2 bytes)
1000     6567 8055080: mov eax, ds:0x80d3bbc  (5 bytes)  eax <- 0x0
1000     6568 8055085: mov edx, 0x80b655c  (5 bytes)  edx <- 0x80b655c
1000     6569 805508a: test eax, eax  (2 bytes)
1000     6570 805508c: jne 8055270  (6 bytes)
1000     6571 8055092: mov DWORD PTR ds:0x80d5ce0, edx  (6 bytes)  [0x80d5ce0] <- 0x80b655c
1000     6572 8055098: test eax, eax  (2 bytes)
1000     6573 805509a: je 80550ef  (2 bytes)
1000     6574 80550ef: mov eax, ds:0x80d5d14  (5 bytes)  eax <- 0x0
1000     6575 80550f4: test eax, eax  (2 bytes)
1000     6576 80550f6: je 8055101  (2 bytes)
1000     6577 8055101: mov DWORD PTR [esp], 0x80b683a  (7 bytes)  [0xfffdff24] <- 0x80b683a
1000     6578 8055108: call 805ace0  (5 bytes)
1000     6579 805ace0: push ebp  (1 bytes)  esp <- 0xfffdff1c
1000     6580 805ace1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff1c
1000     6581 805ace3: push edi  (1 bytes)  esp <- 0xfffdff18
1000     6582 805ace4: push esi  (1 bytes)  esp <- 0xfffdff14
1000     6583 805ace5: push ebx  (1 bytes)  esp <- 0xfffdff10
1000     6584 805ace6: sub esp, 0x18  (3 bytes)  esp <- 0xfffdfef8
1000     6585 805ace9: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff24]=0x80b683a  esi <- 0x80b683a
1000     6586 805acec: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfef8] <- 0x80b683a
1000     6587 805acef: call 80527a0  (5 bytes)
1000     6588 80527a0: mov ecx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b683a  ecx <- 0x80b683a
1000     6589 80527a4: mov eax, ecx  (2 bytes)  eax <- 0x80b683a
1000     6590 80527a6: and ecx, 0x3  (3 bytes)  ecx <- 0x2
1000     6591 80527a9: je 80527d3  (2 bytes)
1000     6592 80527ab: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b683a]=0x4c
1000     6593 80527ad: je 805284a  (6 bytes)
1000     6594 80527b3: inc eax  (1 bytes)  eax <- 0x80b683b
1000     6595 80527b4: xor ecx, 0x3  (3 bytes)  ecx <- 0x1
1000     6596 80527b7: je 80527d3  (2 bytes)
1000     6597 80527b9: cmp BYTE PTR [eax], ch  (2 bytes)  [0x80b683b]=0x44
1000     6598 80527bb: je 805284a  (6 bytes)
1000     6599 80527c1: add eax, 0x1  (3 bytes)  eax <- 0x80b683c
1000     6600 80527c4: sub ecx, 0x1  (3 bytes)  ecx <- 0x0
1000     6601 80527c7: je 80527d3  (2 bytes)
1000     6602 80527d3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b683c]=0x5353415f  ecx <- 0x5353415f
1000     6603 80527d5: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6604 80527da: add edx, ecx  (2 bytes)  edx <- 0x5252405e
1000     6605 80527dc: jae 8052837  (2 bytes)
1000     6606 80527de: xor edx, ecx  (2 bytes)  edx <- 0x1010101
1000     6607 80527e0: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6608 80527e6: inc edx  (1 bytes)  edx <- 0x0
1000     6609 80527e7: jne 8052837  (2 bytes)
1000     6610 80527e9: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b6840]=0x5f454d55  ecx <- 0x5f454d55
1000     6611 80527ec: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6612 80527f1: add edx, ecx  (2 bytes)  edx <- 0x5e444c54
1000     6613 80527f3: jae 8052834  (2 bytes)
1000     6614 80527f5: xor edx, ecx  (2 bytes)  edx <- 0x1010101
1000     6615 80527f7: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6616 80527fd: inc edx  (1 bytes)  edx <- 0x0
1000     6617 80527fe: jne 8052834  (2 bytes)
1000     6618 8052800: mov ecx, DWORD PTR [eax+0x8]  (3 bytes)  [0x80b6844]=0x4e52454b  ecx <- 0x4e52454b
1000     6619 8052803: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6620 8052808: add edx, ecx  (2 bytes)  edx <- 0x4d51444a
1000     6621 805280a: jae 8052831  (2 bytes)
1000     6622 805280c: xor edx, ecx  (2 bytes)  edx <- 0x3030101
1000     6623 805280e: or edx, 0xfefefeff  (6 bytes)  edx <- 0xffffffff
1000     6624 8052814: inc edx  (1 bytes)  edx <- 0x0
1000     6625 8052815: jne 8052831  (2 bytes)
1000     6626 8052817: mov ecx, DWORD PTR [eax+0xc]  (3 bytes)  [0x80b6848]=0x2f004c45  ecx <- 0x2f004c45
1000     6627 805281a: mov edx, 0xfefefeff  (5 bytes)  edx <- 0xfefefeff
1000     6628 805281f: add edx, ecx  (2 bytes)  edx <- 0x2dff4b44
1000     6629 8052821: jae 805282e  (2 bytes)
1000     6630 8052823: xor edx, ecx  (2 bytes)  edx <- 0x2ff0701
1000     6631 8052825: or edx, 0xfefefeff  (6 bytes)  edx <- 0xfeffffff
1000     6632 805282b: inc edx  (1 bytes)  edx <- 0xff000000
1000     6633 805282c: je 80527d0  (2 bytes)
1000     6634 805282e: add eax, 0x4  (3 bytes)  eax <- 0x80b6840
1000     6635 8052831: add eax, 0x4  (3 bytes)  eax <- 0x80b6844
1000     6636 8052834: add eax, 0x4  (3 bytes)  eax <- 0x80b6848
1000     6637 8052837: test cl, cl  (2 bytes)
1000     6638 8052839: je 805284a  (2 bytes)
1000     6639 805283b: inc eax  (1 bytes)  eax <- 0x80b6849
1000     6640 805283c: test ch, ch  (2 bytes)
1000     6641 805283e: je 805284a  (2 bytes)
1000     6642 8052840: inc eax  (1 bytes)  eax <- 0x80b684a
1000     6643 8052841: test ecx, 0xff0000  (6 bytes)
1000     6644 8052847: je 805284a  (2 bytes)
1000     6645 805284a: sub eax, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdfef8]=0x80b683a  eax <- 0x10
1000     6646 805284e: ret  (1 bytes)
1000     6647 805acf4: mov ebx, DWORD PTR ds:0x80d5158  (6 bytes)  [0x80d5158]=0xfffe000c  ebx <- 0xfffe000c
1000     6648 805acfa: mov edi, eax  (2 bytes)  edi <- 0x10
1000     6649 805acfc: test ebx, ebx  (2 bytes)
1000     6650 805acfe: jne 805ad10  (2 bytes)
1000     6651 805ad10: cmp BYTE PTR [esi], 0x0  (3 bytes)  [0x80b683a]=0x4c
1000     6652 805ad13: je 805ad00  (2 bytes)
1000     6653 805ad15: cmp BYTE PTR [esi+0x1], 0x0  (4 bytes)  [0x80b683b]=0x44
1000     6654 805ad19: je 805ad70  (2 bytes)
1000     6655 805ad1b: movzx eax, WORD PTR [esi]  (3 bytes)  [0x80b683a]=0x444c  eax <- 0x444c
1000     6656 805ad1e: lea edx, [edi-0x2]  (3 bytes)  edx <- 0xe
1000     6657 805ad21: add esi, 0x2  (3 bytes)  esi <- 0x80b683c
1000     6658 805ad24: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdff0c] <- 0xe
1000     6659 805ad27: mov DWORD PTR [ebp-0x14], esi  (3 bytes)  [0xfffdff08] <- 0x80b683c
1000     6660 805ad2a: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe000c]=0xfffe00e1  esi <- 0xfffe00e1
1000     6661 805ad2c: test esi, esi  (2 bytes)
1000     6662 805ad2e: je 805ad00  (2 bytes)
1000     6663 805ad30: mov DWORD PTR [ebp-0x18], edi  (3 bytes)  [0xfffdff04] <- 0x10
1000     6664 805ad33: mov edi, eax  (2 bytes)  edi <- 0x444c
1000     6665 805ad35: lea esi, [esi]  (3 bytes)  esi <- 0xfffe00e1
1000     6666 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00e1]=0x4554
1000     6667 805ad3b: jne 805ad63  (2 bytes)
1000     6668 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0010
1000     6669 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0010]=0xfffe00ec  esi <- 0xfffe00ec
1000     6670 805ad68: test esi, esi  (2 bytes)
1000     6671 805ad6a: jne 805ad38  (2 bytes)
1000     6672 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00ec]=0x4853
1000     6673 805ad3b: jne 805ad63  (2 bytes)
1000     6674 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0014
1000     6675 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0014]=0xfffe00fc  esi <- 0xfffe00fc
1000     6676 805ad68: test esi, esi  (2 bytes)
1000     6677 805ad6a: jne 805ad38  (2 bytes)
1000     6678 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe00fc]=0x4458
1000     6679 805ad3b: jne 805ad63  (2 bytes)
1000     6680 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0018
1000     6681 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0018]=0xfffe014d  esi <- 0xfffe014d
1000     6682 805ad68: test esi, esi  (2 bytes)
1000     6683 805ad6a: jne 805ad38  (2 bytes)
1000     6684 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe014d]=0x5353
1000     6685 805ad3b: jne 805ad63  (2 bytes)
1000     6686 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe001c
1000     6687 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe001c]=0xfffe016e  esi <- 0xfffe016e
1000     6688 805ad68: test esi, esi  (2 bytes)
1000     6689 805ad6a: jne 805ad38  (2 bytes)
1000     6690 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe016e]=0x5353
1000     6691 805ad3b: jne 805ad63  (2 bytes)
1000     6692 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0020
1000     6693 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0020]=0xfffe0181  esi <- 0xfffe0181
1000     6694 805ad68: test esi, esi  (2 bytes)
1000     6695 805ad6a: jne 805ad38  (2 bytes)
1000     6696 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0181]=0x5355
1000     6697 805ad3b: jne 805ad63  (2 bytes)
1000     6698 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0024
1000     6699 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0024]=0xfffe018f  esi <- 0xfffe018f
1000     6700 805ad68: test esi, esi  (2 bytes)
1000     6701 805ad6a: jne 805ad38  (2 bytes)
1000     6702 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe018f]=0x444c
1000     6703 805ad3b: jne 805ad63  (2 bytes)
1000     6704 805ad3d: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff0c]=0xe  eax <- 0xe
1000     6705 805ad40: mov edx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdff08]=0x80b683c  edx <- 0x80b683c
1000     6706 805ad43: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff00] <- 0xe
1000     6707 805ad47: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdfefc] <- 0x80b683c
1000     6708 805ad4b: lea eax, [esi+0x2]  (3 bytes)  eax <- 0xfffe0191
1000     6709 805ad4e: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdfef8] <- 0xfffe0191
1000     6710 805ad51: call 806d520  (5 bytes)
1000     6711 806d520: push ebp  (1 bytes)  esp <- 0xfffdfef0
1000     6712 806d521: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6713 806d523: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef0
1000     6714 806d525: push edi  (1 bytes)  esp <- 0xfffdfeec
1000     6715 806d526: push esi  (1 bytes)  esp <- 0xfffdfee8
1000     6716 806d527: push ebx  (1 bytes)  esp <- 0xfffdfee4
1000     6717 806d528: xor ebx, ebx  (2 bytes)  ebx <- 0x0
1000     6718 806d52a: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff00]=0xe  ecx <- 0xe
1000     6719 806d52d: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdfef8]=0xfffe0191  esi <- 0xfffe0191
1000     6720 806d530: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdfefc]=0x80b683c  edi <- 0x80b683c
1000     6721 806d533: cmp ecx, 0x3  (3 bytes)
1000     6722 806d536: jbe 806d598  (2 bytes)
1000     6723 806d538: mov edx, ecx  (2 bytes)  edx <- 0xe
1000     6724 806d53a: shr edx, 0x2  (3 bytes)  edx <- 0x3
1000     6725 806d53d: movzx eax, BYTE PTR [esi]  (3 bytes)  [0xfffe0191]=0x5f  eax <- 0x5f
1000     6726 806d540: movzx ebx, BYTE PTR [edi]  (3 bytes)  [0x80b683c]=0x5f  ebx <- 0x5f
1000     6727 806d543: cmp al, bl  (2 bytes)
1000     6728 806d545: je 806d558  (2 bytes)
1000     6729 806d558: test al, al  (2 bytes)
1000     6730 806d55a: je 806d547  (2 bytes)
1000     6731 806d55c: movzx eax, BYTE PTR [esi+0x1]  (4 bytes)  [0xfffe0192]=0x4c  eax <- 0x4c
1000     6732 806d560: movzx ebx, BYTE PTR [edi+0x1]  (4 bytes)  [0x80b683d]=0x41  ebx <- 0x41
1000     6733 806d564: cmp al, bl  (2 bytes)
1000     6734 806d566: jne 806d547  (2 bytes)
1000     6735 806d547: movzx ebx, bl  (3 bytes)  ebx <- 0x41
1000     6736 806d54a: movzx eax, al  (3 bytes)  eax <- 0x4c
1000     6737 806d54d: sub eax, ebx  (2 bytes)  eax <- 0xb
1000     6738 806d54f: pop ebx  (1 bytes)  ebx <- 0xfffe0024
1000     6739 806d550: pop esi  (1 bytes)  esi <- 0xfffe018f
1000     6740 806d551: pop edi  (1 bytes)  edi <- 0x444c
1000     6741 806d552: leave  (1 bytes)  ebp <- 0xfffdff1c
1000     6742 806d553: ret  (1 bytes)
1000     6743 805ad56: test eax, eax  (2 bytes)
1000     6744 805ad58: jne 805ad63  (2 bytes)
1000     6745 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0028
1000     6746 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0028]=0xfffe01e6  esi <- 0xfffe01e6
1000     6747 805ad68: test esi, esi  (2 bytes)
1000     6748 805ad6a: jne 805ad38  (2 bytes)
1000     6749 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe01e6]=0x4354
1000     6750 805ad3b: jne 805ad63  (2 bytes)
1000     6751 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe002c
1000     6752 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe002c]=0xfffe0246  esi <- 0xfffe0246
1000     6753 805ad68: test esi, esi  (2 bytes)
1000     6754 805ad6a: jne 805ad38  (2 bytes)
1000     6755 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0246]=0x494c
1000     6756 805ad3b: jne 805ad63  (2 bytes)
1000     6757 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0030
1000     6758 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0030]=0xfffe0266  esi <- 0xfffe0266
1000     6759 805ad68: test esi, esi  (2 bytes)
1000     6760 805ad6a: jne 805ad38  (2 bytes)
1000     6761 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0266]=0x414d
1000     6762 805ad3b: jne 805ad63  (2 bytes)
1000     6763 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0034
1000     6764 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0034]=0xfffe027e  esi <- 0xfffe027e
1000     6765 805ad68: test esi, esi  (2 bytes)
1000     6766 805ad6a: jne 805ad38  (2 bytes)
1000     6767 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe027e]=0x4150
1000     6768 805ad3b: jne 805ad63  (2 bytes)
1000     6769 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0038
1000     6770 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0038]=0xfffe03c6  esi <- 0xfffe03c6
1000     6771 805ad68: test esi, esi  (2 bytes)
1000     6772 805ad6a: jne 805ad38  (2 bytes)
1000     6773 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03c6]=0x5750
1000     6774 805ad3b: jne 805ad63  (2 bytes)
1000     6775 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe003c
1000     6776 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe003c]=0xfffe03f2  esi <- 0xfffe03f2
1000     6777 805ad68: test esi, esi  (2 bytes)
1000     6778 805ad6a: jne 805ad38  (2 bytes)
1000     6779 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe03f2]=0x414c
1000     6780 805ad3b: jne 805ad63  (2 bytes)
1000     6781 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0040
1000     6782 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0040]=0xfffe0403  esi <- 0xfffe0403
1000     6783 805ad68: test esi, esi  (2 bytes)
1000     6784 805ad6a: jne 805ad38  (2 bytes)
1000     6785 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0403]=0x4853
1000     6786 805ad3b: jne 805ad63  (2 bytes)
1000     6787 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0044
1000     6788 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0044]=0xfffe040b  esi <- 0xfffe040b
1000     6789 805ad68: test esi, esi  (2 bytes)
1000     6790 805ad6a: jne 805ad38  (2 bytes)
1000     6791 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe040b]=0x4f48
1000     6792 805ad3b: jne 805ad63  (2 bytes)
1000     6793 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0048
1000     6794 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0048]=0xfffe0425  esi <- 0xfffe0425
1000     6795 805ad68: test esi, esi  (2 bytes)
1000     6796 805ad6a: jne 805ad38  (2 bytes)
1000     6797 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0425]=0x414c
1000     6798 805ad3b: jne 805ad63  (2 bytes)
1000     6799 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe004c
1000     6800 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe004c]=0xfffe0435  esi <- 0xfffe0435
1000     6801 805ad68: test esi, esi  (2 bytes)
1000     6802 805ad6a: jne 805ad38  (2 bytes)
1000     6803 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe0435]=0x4e49
1000     6804 805ad3b: jne 805ad63  (2 bytes)
1000     6805 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0050
1000     6806 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0050]=0xfffe045a  esi <- 0xfffe045a
1000     6807 805ad68: test esi, esi  (2 bytes)
1000     6808 805ad6a: jne 805ad38  (2 bytes)
1000     6809 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe045a]=0x4f4c
1000     6810 805ad3b: jne 805ad63  (2 bytes)
1000     6811 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0054
1000     6812 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0054]=0xfffe046b  esi <- 0xfffe046b
1000     6813 805ad68: test esi, esi  (2 bytes)
1000     6814 805ad6a: jne 805ad38  (2 bytes)
1000     6815 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe046b]=0x5353
1000     6816 805ad3b: jne 805ad63  (2 bytes)
1000     6817 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0058
1000     6818 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0058]=0xfffe049d  esi <- 0xfffe049d
1000     6819 805ad68: test esi, esi  (2 bytes)
1000     6820 805ad6a: jne 805ad38  (2 bytes)
1000     6821 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe049d]=0x4944
1000     6822 805ad3b: jne 805ad63  (2 bytes)
1000     6823 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe005c
1000     6824 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe005c]=0xfffe04b4  esi <- 0xfffe04b4
1000     6825 805ad68: test esi, esi  (2 bytes)
1000     6826 805ad6a: jne 805ad38  (2 bytes)
1000     6827 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04b4]=0x524f
1000     6828 805ad3b: jne 805ad63  (2 bytes)
1000     6829 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0060
1000     6830 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0060]=0xfffe04de  esi <- 0xfffe04de
1000     6831 805ad68: test esi, esi  (2 bytes)
1000     6832 805ad6a: jne 805ad38  (2 bytes)
1000     6833 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04de]=0x3d5f
1000     6834 805ad3b: jne 805ad63  (2 bytes)
1000     6835 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0064
1000     6836 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0064]=0xfffe04ee  esi <- 0xfffe04ee
1000     6837 805ad68: test esi, esi  (2 bytes)
1000     6838 805ad6a: jne 805ad38  (2 bytes)
1000     6839 805ad38: cmp di, WORD PTR [esi]  (3 bytes)  [0xfffe04ee]=0x4c4f
1000     6840 805ad3b: jne 805ad63  (2 bytes)
1000     6841 805ad63: add ebx, 0x4  (3 bytes)  ebx <- 0xfffe0068
1000     6842 805ad66: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0068]=0x0  esi <- 0x0
1000     6843 805ad68: test esi, esi  (2 bytes)
1000     6844 805ad6a: jne 805ad38  (2 bytes)
1000     6845 805ad6c: jmp 805ad00  (2 bytes)
1000     6846 805ad00: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6847 805ad02: add esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     6848 805ad05: pop ebx  (1 bytes)  ebx <- 0x1
1000     6849 805ad06: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     6850 805ad07: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     6851 805ad08: leave  (1 bytes)  ebp <- 0xfffdff48
1000     6852 805ad09: ret  (1 bytes)
1000     6853 805510d: mov ebx, eax  (2 bytes)  ebx <- 0x0
1000     6854 805510f: test eax, eax  (2 bytes)
1000     6855 8055111: je 80551ee  (6 bytes)
1000     6856 80551ee: mov eax, ds:0x80d5d14  (5 bytes)  eax <- 0x0
1000     6857 80551f3: test eax, eax  (2 bytes)
1000     6858 80551f5: je 8055204  (2 bytes)
1000     6859 8055204: mov ebx, DWORD PTR ds:0x80d5d1c  (6 bytes)  [0x80d5d1c]=0x8048034  ebx <- 0x8048034
1000     6860 805520a: test ebx, ebx  (2 bytes)
1000     6861 805520c: je 8055244  (2 bytes)
1000     6862 805520e: mov esi, DWORD PTR ds:0x80d5d44  (6 bytes)  [0x80d5d44]=0x5  esi <- 0x5
1000     6863 8055214: test esi, esi  (2 bytes)
1000     6864 8055216: je 8055244  (2 bytes)
1000     6865 8055218: cmp DWORD PTR [ebx], 0x6474e551  (6 bytes)  [0x8048034]=0x1
1000     6866 805521e: je 80552b0  (6 bytes)
1000     6867 8055224: lea eax, [ebx+0x20]  (3 bytes)  eax <- 0x8048054
1000     6868 8055227: xor edx, edx  (2 bytes)  edx <- 0x0
1000     6869 8055229: jmp 805523f  (2 bytes)
1000     6870 805523f: inc edx  (1 bytes)  edx <- 0x1
1000     6871 8055240: cmp edx, esi  (2 bytes)
1000     6872 8055242: jb 8055230  (2 bytes)
1000     6873 8055230: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x8048054]=0x1  ecx <- 0x1
1000     6874 8055232: mov ebx, eax  (2 bytes)  ebx <- 0x8048054
1000     6875 8055234: add eax, 0x20  (3 bytes)  eax <- 0x8048074
1000     6876 8055237: cmp ecx, 0x6474e551  (6 bytes)
1000     6877 805523d: je 80552b0  (2 bytes)
1000     6878 805523f: inc edx  (1 bytes)  edx <- 0x2
1000     6879 8055240: cmp edx, esi  (2 bytes)
1000     6880 8055242: jb 8055230  (2 bytes)
1000     6881 8055230: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x8048074]=0x4  ecx <- 0x4
1000     6882 8055232: mov ebx, eax  (2 bytes)  ebx <- 0x8048074
1000     6883 8055234: add eax, 0x20  (3 bytes)  eax <- 0x8048094
1000     6884 8055237: cmp ecx, 0x6474e551  (6 bytes)
1000     6885 805523d: je 80552b0  (2 bytes)
1000     6886 805523f: inc edx  (1 bytes)  edx <- 0x3
1000     6887 8055240: cmp edx, esi  (2 bytes)
1000     6888 8055242: jb 8055230  (2 bytes)
1000     6889 8055230: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x8048094]=0x7  ecx <- 0x7
1000     6890 8055232: mov ebx, eax  (2 bytes)  ebx <- 0x8048094
1000     6891 8055234: add eax, 0x20  (3 bytes)  eax <- 0x80480b4
1000     6892 8055237: cmp ecx, 0x6474e551  (6 bytes)
1000     6893 805523d: je 80552b0  (2 bytes)
1000     6894 805523f: inc edx  (1 bytes)  edx <- 0x4
1000     6895 8055240: cmp edx, esi  (2 bytes)
1000     6896 8055242: jb 8055230  (2 bytes)
1000     6897 8055230: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80480b4]=0x6474e551  ecx <- 0x6474e551
1000     6898 8055232: mov ebx, eax  (2 bytes)  ebx <- 0x80480b4
1000     6899 8055234: add eax, 0x20  (3 bytes)  eax <- 0x80480d4
1000     6900 8055237: cmp ecx, 0x6474e551  (6 bytes)
1000     6901 805523d: je 80552b0  (2 bytes)
1000     6902 80552b0: mov eax, DWORD PTR [ebx+0x18]  (3 bytes)  [0x80480cc]=0x6  eax <- 0x6
1000     6903 80552b3: mov ds:0x80d4088, eax  (5 bytes)
1000     6904 80552b8: add esp, 0x18  (3 bytes)  esp <- 0xfffdff3c
1000     6905 80552bb: pop ebx  (1 bytes)  ebx <- 0x1
1000     6906 80552bc: pop esi  (1 bytes)  esi <- 0xfffe0004
1000     6907 80552bd: pop edi  (1 bytes)  edi <- 0xfffe000c
1000     6908 80552be: leave  (1 bytes)  ebp <- 0xfffdff78
1000     6909 80552bf: ret  (1 bytes)
1000     6910 80558cf: mov DWORD PTR [ebp+0x10], edi  (3 bytes)  [0xfffdff88] <- 0xfffe000c
1000     6911 80558d2: mov DWORD PTR [ebp+0xc], esi  (3 bytes)  [0xfffdff84] <- 0xfffe0004
1000     6912 80558d5: mov DWORD PTR [ebp+0x8], ebx  (3 bytes)  [0xfffdff80] <- 0x1
1000     6913 80558d8: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdff70]=0x8048ab0  esi <- 0x8048ab0
1000     6914 80558db: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdff6c]=0x0  ebx <- 0x0
1000     6915 80558de: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdff74]=0x8048ae0  edi <- 0x8048ae0
1000     6916 80558e1: leave  (1 bytes)  ebp <- 0xfffdffd8
1000     6917 80558e2: jmp 8054380  (5 bytes)
1000     6918 8054380: push ebp  (1 bytes)  esp <- 0xfffdff78
1000     6919 8054381: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000     6920 8054383: sub esp, 0x10  (3 bytes)  esp <- 0xfffdff68
1000     6921 8054386: mov DWORD PTR [ebp-0x8], ebx  (3 bytes)  [0xfffdff70] <- 0x0
1000     6922 8054389: mov DWORD PTR [ebp-0x4], esi  (3 bytes)  [0xfffdff74] <- 0x8048ab0
1000     6923 805438c: mov ebx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdff84]=0xfffe0004  ebx <- 0xfffe0004
1000     6924 805438f: test ebx, ebx  (2 bytes)
1000     6925 8054391: je 80543ba  (2 bytes)
1000     6926 8054393: mov esi, DWORD PTR [ebx]  (2 bytes)  [0xfffe0004]=0xfffe00dc  esi <- 0xfffe00dc
1000     6927 8054395: test esi, esi  (2 bytes)
1000     6928 8054397: je 80543ba  (2 bytes)
1000     6929 8054399: mov DWORD PTR [esp+0x4], 0x2f  (8 bytes)  [0xfffdff6c] <- 0x2f
1000     6930 80543a1: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdff68] <- 0xfffe00dc
1000     6931 80543a4: call 806d700  (5 bytes)
1000     6932 806d700: push edi  (1 bytes)  esp <- 0xfffdff60
1000     6933 806d701: push esi  (1 bytes)  esp <- 0xfffdff5c
1000     6934 806d702: xor eax, eax  (2 bytes)  eax <- 0x0
1000     6935 806d704: mov esi, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdff68]=0xfffe00dc  esi <- 0xfffe00dc
1000     6936 806d708: mov ecx, DWORD PTR [esp+0x10]  (4 bytes)  [0xfffdff6c]=0x2f  ecx <- 0x2f
1000     6937 806d70c: mov ch, cl  (2 bytes)  ch <- 0x2f
1000     6938 806d70e: mov edx, ecx  (2 bytes)  edx <- 0x2f2f
1000     6939 806d710: shl ecx, 0x10  (3 bytes)  ecx <- 0x2f2f0000
1000     6940 806d713: mov cx, dx  (3 bytes)  cx <- 0x2f2f
1000     6941 806d716: test esi, 0x3  (6 bytes)
1000     6942 806d71c: je 806d7a3  (6 bytes)
1000     6943 806d7a3: mov edx, DWORD PTR [esi]  (2 bytes)  [0xfffe00dc]=0x316d2f2e  edx <- 0x316d2f2e
1000     6944 806d7a5: mov edi, 0xfefefeff  (5 bytes)  edi <- 0xfefefeff
1000     6945 806d7aa: add edi, edx  (2 bytes)  edi <- 0x306c2e2d
1000     6946 806d7ac: jae 806d88c  (6 bytes)
1000     6947 806d7b2: xor edi, edx  (2 bytes)  edi <- 0x1010103
1000     6948 806d7b4: or edi, 0xfefefeff  (6 bytes)  edi <- 0xffffffff
1000     6949 806d7ba: inc edi  (1 bytes)  edi <- 0x0
1000     6950 806d7bb: jne 806d88c  (6 bytes)
1000     6951 806d7c1: xor edx, ecx  (2 bytes)  edx <- 0x1e420001
1000     6952 806d7c3: mov edi, 0xfefefeff  (5 bytes)  edi <- 0xfefefeff
1000     6953 806d7c8: add edi, edx  (2 bytes)  edi <- 0x1d40ff00
1000     6954 806d7ca: jae 806d76a  (2 bytes)
1000     6955 806d7cc: xor edi, edx  (2 bytes)  edi <- 0x302ff01
1000     6956 806d7ce: or edi, 0xfefefeff  (6 bytes)  edi <- 0xfffeffff
1000     6957 806d7d4: inc edi  (1 bytes)  edi <- 0xffff0000
1000     6958 806d7d5: jne 806d780  (2 bytes)
1000     6959 806d780: sub esi, 0x4  (3 bytes)  esi <- 0xfffe00d8
1000     6960 806d783: sub esi, 0x4  (3 bytes)  esi <- 0xfffe00d4
1000     6961 806d786: sub esi, 0x4  (3 bytes)  esi <- 0xfffe00d0
1000     6962 806d789: test edx, 0xff0000  (6 bytes)
1000     6963 806d78f: jne 806d796  (2 bytes)
1000     6964 806d796: lea eax, [esi+0xc]  (3 bytes)  eax <- 0xfffe00dc
1000     6965 806d799: test dh, dh  (2 bytes)
1000     6966 806d79b: jne 806d7a0  (2 bytes)
1000     6967 806d79d: lea eax, [esi+0xd]  (3 bytes)  eax <- 0xfffe00dd
1000     6968 806d7a0: add esi, 0x10  (3 bytes)  esi <- 0xfffe00e0
1000     6969 806d7a3: mov edx, DWORD PTR [esi]  (2 bytes)  [0xfffe00e0]=0x52455400  edx <- 0x52455400
1000     6970 806d7a5: mov edi, 0xfefefeff  (5 bytes)  edi <- 0xfefefeff
1000     6971 806d7aa: add edi, edx  (2 bytes)  edi <- 0x514452ff
1000     6972 806d7ac: jae 806d88c  (6 bytes)
1000     6973 806d7b2: xor edi, edx  (2 bytes)  edi <- 0x30106ff
1000     6974 806d7b4: or edi, 0xfefefeff  (6 bytes)  edi <- 0xfffffeff
1000     6975 806d7ba: inc edi  (1 bytes)  edi <- 0xffffff00
1000     6976 806d7bb: jne 806d88c  (6 bytes)
1000     6977 806d88c: cmp dl, cl  (2 bytes)
1000     6978 806d88e: jne 806d892  (2 bytes)
1000     6979 806d892: test dl, dl  (2 bytes)
1000     6980 806d894: je 806d8b6  (2 bytes)
1000     6981 806d8b6: pop esi  (1 bytes)  esi <- 0xfffe00dc
1000     6982 806d8b7: pop edi  (1 bytes)  edi <- 0x8048ae0
1000     6983 806d8b8: ret  (1 bytes)
1000     6984 80543a9: test eax, eax  (2 bytes)
1000     6985 80543ab: je 80543c8  (2 bytes)
1000     6986 80543ad: inc eax  (1 bytes)  eax <- 0xfffe00de
1000     6987 80543ae: mov ds:0x80d4074, eax  (5 bytes)
1000     6988 80543b3: mov eax, DWORD PTR [ebx]  (2 bytes)  [0xfffe0004]=0xfffe00dc  eax <- 0xfffe00dc
1000     6989 80543b5: mov ds:0x80d4070, eax  (5 bytes)
1000     6990 80543ba: mov ebx, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdff70]=0x0  ebx <- 0x0
1000     6991 80543bd: mov esi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdff74]=0x8048ab0  esi <- 0x8048ab0
1000     6992 80543c0: leave  (1 bytes)  ebp <- 0xfffdffd8
1000     6993 80543c1: ret  (1 bytes)
1000     6994 80483a0: test esi, esi  (2 bytes)
1000     6995 80483a2: je 80483bc  (2 bytes)
1000     6996 80483a4: mov DWORD PTR [esp+0x8], 0x0  (8 bytes)  [0xfffdff88] <- 0x0
1000     6997 80483ac: mov DWORD PTR [esp+0x4], 0x0  (8 bytes)  [0xfffdff84] <- 0x0
1000     6998 80483b4: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdff80] <- 0x8048ab0
1000     6999 80483b7: call 8048f20  (5 bytes)
1000     7000 8048f20: push ebp  (1 bytes)  esp <- 0xfffdff78
1000     7001 8048f21: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7002 8048f23: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000     7003 8048f25: mov ecx, 0x1  (5 bytes)  ecx <- 0x1
1000     7004 8048f2a: push edi  (1 bytes)  esp <- 0xfffdff74
1000     7005 8048f2b: push esi  (1 bytes)  esp <- 0xfffdff70
1000     7006 8048f2c: push ebx  (1 bytes)  esp <- 0xfffdff6c
1000     7007 8048f2d: sub esp, 0x10  (3 bytes)  esp <- 0xfffdff5c
1000     7008 8048f30: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     7009 8048f38: je 8048f3b  (2 bytes)
1000     7010 8048f3b: cmpxchg DWORD PTR ds:0x80d49e0, ecx  (7 bytes)  [0x80d49e0]=0x0  eax <- 0x0  [0x80d49e0] <- 0x1
1000     7011 8048f42: jne 804923b  (6 bytes)
1000     7012 8048f48: mov esi, DWORD PTR ds:0x80d3c0c  (6 bytes)  [0x80d3c0c]=0x80d4a00  esi <- 0x80d4a00
1000     7013 8048f4e: test esi, esi  (2 bytes)
1000     7014 8048f50: je 8049074  (6 bytes)
1000     7015 8048f56: xor edi, edi  (2 bytes)  edi <- 0x0
1000     7016 8048f58: nop  (1 bytes)
1000     7017 8048f59: lea esi, [esi]  (7 bytes)  esi <- 0x80d4a00
1000     7018 8048f60: mov ecx, DWORD PTR [esi+0x4]  (3 bytes)  [0x80d4a04]=0x0  ecx <- 0x0
1000     7019 8048f63: test ecx, ecx  (2 bytes)
1000     7020 8048f65: je 8048f9a  (2 bytes)
1000     7021 8048f9a: mov eax, DWORD PTR [esi]  (2 bytes)  [0x80d4a00]=0x0  eax <- 0x0
1000     7022 8048f9c: mov DWORD PTR [esi+0x4], 0x0  (7 bytes)  [0x80d4a04] <- 0x0
1000     7023 8048fa3: test eax, eax  (2 bytes)
1000     7024 8048fa5: je 8049074  (6 bytes)
1000     7025 8049074: mov eax, 0x1  (5 bytes)  eax <- 0x1
1000     7026 8049079: jmp 8049034  (2 bytes)
1000     7027 8049034: test esi, esi  (2 bytes)
1000     7028 8049036: jne 8049065  (2 bytes)
1000     7029 8049065: lea edx, [esi+0x8]  (3 bytes)  edx <- 0x80d4a08
1000     7030 8049068: mov DWORD PTR [esi+0x4], 0x1  (7 bytes)  [0x80d4a04] <- 0x1
1000     7031 804906f: jmp 8048fca  (5 bytes)
1000     7032 8048fca: add DWORD PTR ds:0x80d5cc0, 0x1  (7 bytes)  [0x80d5cc0]=0x0  [0x80d5cc0] <- 0x1
1000     7033 8048fd1: mov DWORD PTR [edx], 0x1  (6 bytes)  [0x80d4a08] <- 0x1
1000     7034 8048fd7: adc DWORD PTR ds:0x80d5cc4, 0x0  (7 bytes)  [0x80d5cc4]=0x0  [0x80d5cc4] <- 0x0
1000     7035 8048fde: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     7036 8048fe6: je 8048fe9  (2 bytes)
1000     7037 8048fe9: sub DWORD PTR ds:0x80d49e0, 0x1  (7 bytes)  [0x80d49e0]=0x1  [0x80d49e0] <- 0x0
1000     7038 8048ff0: jne 804924b  (6 bytes)
1000     7039 8048ff6: mov eax, 0xffffffff  (5 bytes)  eax <- 0xffffffff
1000     7040 8048ffb: test edx, edx  (2 bytes)
1000     7041 8048ffd: je 8049023  (2 bytes)
1000     7042 8048fff: mov eax, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff80]=0x8048ab0  eax <- 0x8048ab0
1000     7043 8049002: xor eax, DWORD PTR gs:0x18  (7 bytes)  [0x80d6848]=0x0  eax <- 0x8048ab0
1000     7044 8049009: rol eax, 0x9  (3 bytes)  eax <- 0x9156010
1000     7045 804900c: mov DWORD PTR [edx+0x4], eax  (3 bytes)  [0x80d4a0c] <- 0x9156010
1000     7046 804900f: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdff84]=0x0  eax <- 0x0
1000     7047 8049012: mov DWORD PTR [edx+0x8], eax  (3 bytes)  [0x80d4a10] <- 0x0
1000     7048 8049015: mov eax, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff88]=0x0  eax <- 0x0
1000     7049 8049018: mov DWORD PTR [edx+0xc], eax  (3 bytes)  [0x80d4a14] <- 0x0
1000     7050 804901b: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7051 804901d: mov DWORD PTR [edx], 0x4  (6 bytes)  [0x80d4a08] <- 0x4
1000     7052 8049023: add esp, 0x10  (3 bytes)  esp <- 0xfffdff6c
1000     7053 8049026: pop ebx  (1 bytes)  ebx <- 0x0
1000     7054 8049027: pop esi  (1 bytes)  esi <- 0x8048ab0
1000     7055 8049028: pop edi  (1 bytes)  edi <- 0x8048ae0
1000     7056 8049029: leave  (1 bytes)  ebp <- 0xfffdffd8
1000     7057 804902a: ret  (1 bytes)
1000     7058 80483bc: mov eax, ds:0x80d3bbc  (5 bytes)  eax <- 0x0
1000     7059 80483c1: test eax, eax  (2 bytes)
1000     7060 80483c3: jne 8048472  (6 bytes)
1000     7061 80483c9: test edi, edi  (2 bytes)
1000     7062 80483cb: je 80483e5  (2 bytes)
1000     7063 80483cd: mov eax, ds:0x80d5158  (5 bytes)  eax <- 0xfffe000c
1000     7064 80483d2: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdffe8]=0xfffe0004  ecx <- 0xfffe0004
1000     7065 80483d5: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff88] <- 0xfffe000c
1000     7066 80483d9: mov DWORD PTR [esp+0x4], ecx  (4 bytes)  [0xfffdff84] <- 0xfffe0004
1000     7067 80483dd: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdffe4]=0x1  eax <- 0x1
1000     7068 80483e0: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdff80] <- 0x1
1000     7069 80483e3: call edi  (2 bytes)
1000     7070 8048ae0: push ebp  (1 bytes)  esp <- 0xfffdff78
1000     7071 8048ae1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000     7072 8048ae3: push edi  (1 bytes)  esp <- 0xfffdff74
1000     7073 8048ae4: push esi  (1 bytes)  esp <- 0xfffdff70
1000     7074 8048ae5: push ebx  (1 bytes)  esp <- 0xfffdff6c
1000     7075 8048ae6: sub esp, 0x2c  (3 bytes)  esp <- 0xfffdff40
1000     7076 8048ae9: mov DWORD PTR [ebp-0x1c], 0x80d3b98  (7 bytes)  [0xfffdff5c] <- 0x80d3b98
1000     7077 8048af0: mov esi, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff80]=0x1  esi <- 0x1
1000     7078 8048af3: sub DWORD PTR [ebp-0x1c], 0x80d3b98  (7 bytes)  [0xfffdff5c]=0x80d3b98  [0xfffdff5c] <- 0x0
1000     7079 8048afa: mov edi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdff84]=0xfffe0004  edi <- 0xfffe0004
1000     7080 8048afd: sar DWORD PTR [ebp-0x1c], 0x2  (4 bytes)  [0xfffdff5c]=0x0  [0xfffdff5c] <- 0x0
1000     7081 8048b01: mov edx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdff5c]=0x0  edx <- 0x0
1000     7082 8048b04: test edx, edx  (2 bytes)
1000     7083 8048b06: je 8048b2b  (2 bytes)
1000     7084 8048b2b: call 80480f4  (5 bytes)
1000     7085 80480f4: push ebp  (1 bytes)  esp <- 0xfffdff38
1000     7086 80480f5: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff38
1000     7087 80480f7: push ebx  (1 bytes)  esp <- 0xfffdff34
1000     7088 80480f8: sub esp, 0x4  (3 bytes)  esp <- 0xfffdff30
1000     7089 80480fb: call 8048100  (5 bytes)
1000     7090 8048100: pop ebx  (1 bytes)  ebx <- 0x8048100
1000     7091 8048101: add ebx, 0x8bae8  (6 bytes)  ebx <- 0x80d3be8
1000     7092 8048107: mov edx, DWORD PTR [ebx-0x4]  (6 bytes)  [0x80d3be4]=0x0  edx <- 0x0
1000     7093 804810d: test edx, edx  (2 bytes)
1000     7094 804810f: je 8048116  (2 bytes)
1000     7095 8048116: call 80481d0  (5 bytes)
1000     7096 80481d0: push ebp  (1 bytes)  esp <- 0xfffdff28
1000     7097 80481d1: mov eax, 0x80af8e0  (5 bytes)  eax <- 0x80af8e0
1000     7098 80481d6: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff28
1000     7099 80481d8: sub esp, 0x18  (3 bytes)  esp <- 0xfffdff10
1000     7100 80481db: call 80481e0  (5 bytes)
1000     7101 80481e0: pop edx  (1 bytes)  edx <- 0x80481e0
1000     7102 80481e1: add edx, 0x8ba08  (6 bytes)  edx <- 0x80d3be8
1000     7103 80481e7: test eax, eax  (2 bytes)
1000     7104 80481e9: je 804820b  (2 bytes)
1000     7105 80481eb: mov DWORD PTR [esp+0xc], edx  (4 bytes)  [0xfffdff1c] <- 0x80d3be8
1000     7106 80481ef: mov DWORD PTR [esp+0x8], 0x0  (8 bytes)  [0xfffdff18] <- 0x0
1000     7107 80481f7: mov DWORD PTR [esp+0x4], 0x80d4348  (8 bytes)  [0xfffdff14] <- 0x80d4348
1000     7108 80481ff: mov DWORD PTR [esp], 0x80cd9f8  (7 bytes)  [0xfffdff10] <- 0x80cd9f8
1000     7109 8048206: call 80af8e0  (5 bytes)
1000     7110 80af8e0: push ebp  (1 bytes)  esp <- 0xfffdff08
1000     7111 80af8e1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff08
1000     7112 80af8e3: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfee0
1000     7113 80af8e6: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdfefc] <- 0x80d3be8
1000     7114 80af8e9: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdff00] <- 0x1
1000     7115 80af8ec: call 80af8f1  (5 bytes)
1000     7116 80af8f1: pop ebx  (1 bytes)  ebx <- 0x80af8f1
1000     7117 80af8f2: add ebx, 0x242f7  (6 bytes)  ebx <- 0x80d3be8
1000     7118 80af8f8: mov eax, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdff10]=0x80cd9f8  eax <- 0x80cd9f8
1000     7119 80af8fb: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdff04] <- 0xfffe0004
1000     7120 80af8fe: mov esi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdff14]=0x80d4348  esi <- 0x80d4348
1000     7121 80af901: test eax, eax  (2 bytes)
1000     7122 80af903: je 80af90b  (2 bytes)
1000     7123 80af905: mov edx, DWORD PTR [eax]  (2 bytes)  [0x80cd9f8]=0x14  edx <- 0x14
1000     7124 80af907: test edx, edx  (2 bytes)
1000     7125 80af909: jne 80af920  (2 bytes)
1000     7126 80af920: mov edx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdff18]=0x0  edx <- 0x0
1000     7127 80af923: mov edi, DWORD PTR [ebx-0x8]  (6 bytes)  [0x80d3be0]=0x0  edi <- 0x0
1000     7128 80af929: mov DWORD PTR [esi+0x4], edx  (3 bytes)  [0x80d434c] <- 0x0
1000     7129 80af92c: mov DWORD PTR [esi], 0xffffffff  (6 bytes)  [0x80d4348] <- 0xffffffff
1000     7130 80af932: mov edx, DWORD PTR [ebp+0x14]  (3 bytes)  [0xfffdff1c]=0x80d3be8  edx <- 0x80d3be8
1000     7131 80af935: test edi, edi  (2 bytes)
1000     7132 80af937: mov DWORD PTR [esi+0x10], 0x0  (7 bytes)  [0x80d4358] <- 0x0
1000     7133 80af93e: mov DWORD PTR [esi+0x8], edx  (3 bytes)  [0x80d4350] <- 0x80d3be8
1000     7134 80af941: mov DWORD PTR [esi+0xc], eax  (3 bytes)  [0x80d4354] <- 0x80cd9f8
1000     7135 80af944: mov WORD PTR [esi+0x10], 0x7f8  (6 bytes)  [0x80d4358] <- 0x7f8
1000     7136 80af94a: je 80af97c  (2 bytes)
1000     7137 80af97c: mov eax, DWORD PTR [ebx+0x1fe0]  (6 bytes)  [0x80d5bc8]=0x0  eax <- 0x0
1000     7138 80af982: mov DWORD PTR [esi+0x14], eax  (3 bytes)  [0x80d435c] <- 0x0
1000     7139 80af985: mov DWORD PTR [ebx+0x1fe0], esi  (6 bytes)  [0x80d5bc8] <- 0x80d4348
1000     7140 80af98b: jmp 80af90b  (5 bytes)
1000     7141 80af90b: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdfefc]=0x80d3be8  ebx <- 0x80d3be8
1000     7142 80af90e: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdff00]=0x1  esi <- 0x1
1000     7143 80af911: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdff04]=0xfffe0004  edi <- 0xfffe0004
1000     7144 80af914: leave  (1 bytes)  ebp <- 0xfffdff28
1000     7145 80af915: ret  (1 bytes)
1000     7146 804820b: mov eax, ds:0x80d3bb0  (5 bytes)  eax <- 0x0
1000     7147 8048210: test eax, eax  (2 bytes)
1000     7148 8048212: je 8048226  (2 bytes)
1000     7149 8048226: leave  (1 bytes)  ebp <- 0xfffdff38
1000     7150 8048227: ret  (1 bytes)
1000     7151 804811b: call 80b3a20  (5 bytes)
1000     7152 80b3a20: push ebp  (1 bytes)  esp <- 0xfffdff28
1000     7153 80b3a21: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff28
1000     7154 80b3a23: push ebx  (1 bytes)  esp <- 0xfffdff24
1000     7155 80b3a24: sub esp, 0x4  (3 bytes)  esp <- 0xfffdff20
1000     7156 80b3a27: mov eax, ds:0x80d3b9c  (5 bytes)  eax <- 0x80947c0
1000     7157 80b3a2c: cmp eax, 0xff  (3 bytes)
1000     7158 80b3a2f: je 80b3a4c  (2 bytes)
1000     7159 80b3a31: mov ebx, 0x80d3b9c  (5 bytes)  ebx <- 0x80d3b9c
1000     7160 80b3a36: lea esi, [esi]  (3 bytes)  esi <- 0x1
1000     7161 80b3a39: lea edi, [edi]  (7 bytes)  edi <- 0xfffe0004
1000     7162 80b3a40: call eax  (2 bytes)
1000     7163 80947c0: push ebp  (1 bytes)  esp <- 0xfffdff18
1000     7164 80947c1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff18
1000     7165 80947c3: sub esp, 0x1c  (3 bytes)  esp <- 0xfffdfefc
1000     7166 80947c6: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdff0c] <- 0x80d3b9c
1000     7167 80947c9: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdff10] <- 0x1
1000     7168 80947cc: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdff14] <- 0xfffe0004
1000     7169 80947cf: xor esi, esi  (2 bytes)  esi <- 0x0
1000     7170 80947d1: mov eax, esi  (2 bytes)  eax <- 0x0
1000     7171 80947d3: cpuid  (2 bytes)  eax <- 0x2  ebx <- 0x756e6547  ecx <- 0x6c65746e  edx <- 0x49656e69
1000     7172 80947d5: mov esi, eax  (2 bytes)  esi <- 0x2
1000     7173 80947d7: cmp ecx, 0x6c65746e  (6 bytes)
1000     7174 80947dd: je 8094800  (2 bytes)
1000     7175 8094800: cmp ebx, 0x756e6547  (6 bytes)
1000     7176 8094806: jne 80947eb  (2 bytes)
1000     7177 8094808: cmp edx, 0x49656e69  (6 bytes)
1000     7178 809480e: jne 80947eb  (2 bytes)
1000     7179 8094810: mov edx, eax  (2 bytes)  edx <- 0x2
1000     7180 8094812: mov eax, 0xbc  (5 bytes)  eax <- 0xbc
1000     7181 8094817: call 80946c0  (5 bytes)
1000     7182 80946c0: push ebp  (1 bytes)  esp <- 0xfffdfef4
1000     7183 80946c1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef4
1000     7184 80946c3: push edi  (1 bytes)  esp <- 0xfffdfef0
1000     7185 80946c4: mov edi, eax  (2 bytes)  edi <- 0xbc
1000     7186 80946c6: push esi  (1 bytes)  esp <- 0xfffdfeec
1000     7187 80946c7: push ebx  (1 bytes)  esp <- 0xfffdfee8
1000     7188 80946c8: sub esp, 0x24  (3 bytes)  esp <- 0xfffdfec4
1000     7189 80946cb: cmp edx, 0x1  (3 bytes)
1000     7190 80946ce: jbe 8094790  (6 bytes)
1000     7191 80946d4: mov BYTE PTR [ebp-0xd], 0x0  (4 bytes)  [0xfffdfee7] <- 0x0
1000     7192 80946d8: mov BYTE PTR [ebp-0xe], 0x0  (4 bytes)  [0xfffdfee6] <- 0x0
1000     7193 80946dc: mov DWORD PTR [ebp-0x14], 0x1  (7 bytes)  [0xfffdfee0] <- 0x1
1000     7194 80946e3: mov DWORD PTR [ebp-0x20], 0x1  (7 bytes)  [0xfffdfed4] <- 0x1
1000     7195 80946ea: lea esi, [ebp-0xd]  (3 bytes)  esi <- 0xfffdfee7
1000     7196 80946ed: mov eax, 0x2  (5 bytes)  eax <- 0x2
1000     7197 80946f2: cpuid  (2 bytes)  eax <- 0x0  ebx <- 0x0  ecx <- 0x0  edx <- 0x0
1000     7198 80946f4: cmp DWORD PTR [ebp-0x14], 0x1  (4 bytes)  [0xfffdfee0]=0x1
1000     7199 80946f8: mov DWORD PTR [ebp-0x1c], edx  (3 bytes)  [0xfffdfed8] <- 0x0
1000     7200 80946fb: mov DWORD PTR [ebp-0x18], ecx  (3 bytes)  [0xfffdfedc] <- 0x0
1000     7201 80946fe: je 8094760  (2 bytes)
1000     7202 8094760: movzx edx, al  (3 bytes)  edx <- 0x0
1000     7203 8094763: xor al, al  (2 bytes)  al <- 0x0
1000     7204 8094765: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfed4] <- 0x0
1000     7205 8094768: jmp 8094700  (2 bytes)
1000     7206 8094700: mov edx, eax  (2 bytes)  edx <- 0x0
1000     7207 8094702: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7208 8094705: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7209 8094708: mov eax, edi  (2 bytes)  eax <- 0xbc
1000     7210 809470a: call 8094520  (5 bytes)
1000     7211 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7212 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7213 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7214 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7215 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7216 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7217 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7218 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbc
1000     7219 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7220 8094531: cmp edx, 0x0  (3 bytes)
1000     7221 8094534: jl 80945e8  (6 bytes)
1000     7222 809453a: je 80945e8  (6 bytes)
1000     7223 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7224 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7225 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7226 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7227 80945ef: pop edi  (1 bytes)  edi <- 0xbc
1000     7228 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7229 80945f1: ret  (1 bytes)
1000     7230 809470f: test eax, eax  (2 bytes)
1000     7231 8094711: jne 8094788  (2 bytes)
1000     7232 8094713: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7233 8094716: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7234 8094719: mov edx, ebx  (2 bytes)  edx <- 0x0
1000     7235 809471b: mov eax, edi  (2 bytes)  eax <- 0xbc
1000     7236 809471d: call 8094520  (5 bytes)
1000     7237 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7238 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7239 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7240 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7241 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7242 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7243 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7244 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbc
1000     7245 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7246 8094531: cmp edx, 0x0  (3 bytes)
1000     7247 8094534: jl 80945e8  (6 bytes)
1000     7248 809453a: je 80945e8  (6 bytes)
1000     7249 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7250 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7251 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7252 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7253 80945ef: pop edi  (1 bytes)  edi <- 0xbc
1000     7254 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7255 80945f1: ret  (1 bytes)
1000     7256 8094722: test eax, eax  (2 bytes)
1000     7257 8094724: jne 8094788  (2 bytes)
1000     7258 8094726: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7259 8094729: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7260 809472c: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfedc]=0x0  edx <- 0x0
1000     7261 809472f: mov eax, edi  (2 bytes)  eax <- 0xbc
1000     7262 8094731: call 8094520  (5 bytes)
1000     7263 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7264 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7265 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7266 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7267 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7268 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7269 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7270 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbc
1000     7271 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7272 8094531: cmp edx, 0x0  (3 bytes)
1000     7273 8094534: jl 80945e8  (6 bytes)
1000     7274 809453a: je 80945e8  (6 bytes)
1000     7275 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7276 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7277 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7278 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7279 80945ef: pop edi  (1 bytes)  edi <- 0xbc
1000     7280 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7281 80945f1: ret  (1 bytes)
1000     7282 8094736: test eax, eax  (2 bytes)
1000     7283 8094738: jne 8094788  (2 bytes)
1000     7284 809473a: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7285 809473d: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7286 8094740: mov edx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfed8]=0x0  edx <- 0x0
1000     7287 8094743: mov eax, edi  (2 bytes)  eax <- 0xbc
1000     7288 8094745: call 8094520  (5 bytes)
1000     7289 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7290 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7291 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7292 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7293 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7294 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7295 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7296 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbc
1000     7297 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7298 8094531: cmp edx, 0x0  (3 bytes)
1000     7299 8094534: jl 80945e8  (6 bytes)
1000     7300 809453a: je 80945e8  (6 bytes)
1000     7301 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7302 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7303 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7304 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7305 80945ef: pop edi  (1 bytes)  edi <- 0xbc
1000     7306 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7307 80945f1: ret  (1 bytes)
1000     7308 809474a: test eax, eax  (2 bytes)
1000     7309 809474c: jne 8094788  (2 bytes)
1000     7310 809474e: mov ecx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfee0]=0x1  ecx <- 0x1
1000     7311 8094751: cmp DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfed4]=0x0
1000     7312 8094754: jbe 8094770  (2 bytes)
1000     7313 8094770: sub edi, 0xbf  (6 bytes)  edi <- 0xfffffffd
1000     7314 8094776: cmp edi, 0x5  (3 bytes)
1000     7315 8094779: ja 8094788  (2 bytes)
1000     7316 8094788: add esp, 0x24  (3 bytes)  esp <- 0xfffdfee8
1000     7317 809478b: pop ebx  (1 bytes)  ebx <- 0x756e6547
1000     7318 809478c: pop esi  (1 bytes)  esi <- 0x2
1000     7319 809478d: pop edi  (1 bytes)  edi <- 0xfffe0004
1000     7320 809478e: leave  (1 bytes)  ebp <- 0xfffdff18
1000     7321 809478f: ret  (1 bytes)
1000     7322 809481c: mov edx, esi  (2 bytes)  edx <- 0x2
1000     7323 809481e: mov DWORD PTR [ebp-0x10], eax  (3 bytes)  [0xfffdff08] <- 0x0
1000     7324 8094821: mov eax, 0xc2  (5 bytes)  eax <- 0xc2
1000     7325 8094826: call 80946c0  (5 bytes)
1000     7326 80946c0: push ebp  (1 bytes)  esp <- 0xfffdfef4
1000     7327 80946c1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef4
1000     7328 80946c3: push edi  (1 bytes)  esp <- 0xfffdfef0
1000     7329 80946c4: mov edi, eax  (2 bytes)  edi <- 0xc2
1000     7330 80946c6: push esi  (1 bytes)  esp <- 0xfffdfeec
1000     7331 80946c7: push ebx  (1 bytes)  esp <- 0xfffdfee8
1000     7332 80946c8: sub esp, 0x24  (3 bytes)  esp <- 0xfffdfec4
1000     7333 80946cb: cmp edx, 0x1  (3 bytes)
1000     7334 80946ce: jbe 8094790  (6 bytes)
1000     7335 80946d4: mov BYTE PTR [ebp-0xd], 0x0  (4 bytes)  [0xfffdfee7] <- 0x0
1000     7336 80946d8: mov BYTE PTR [ebp-0xe], 0x0  (4 bytes)  [0xfffdfee6] <- 0x0
1000     7337 80946dc: mov DWORD PTR [ebp-0x14], 0x1  (7 bytes)  [0xfffdfee0] <- 0x1
1000     7338 80946e3: mov DWORD PTR [ebp-0x20], 0x1  (7 bytes)  [0xfffdfed4] <- 0x1
1000     7339 80946ea: lea esi, [ebp-0xd]  (3 bytes)  esi <- 0xfffdfee7
1000     7340 80946ed: mov eax, 0x2  (5 bytes)  eax <- 0x2
1000     7341 80946f2: cpuid  (2 bytes)  eax <- 0x0  ebx <- 0x0  ecx <- 0x0  edx <- 0x0
1000     7342 80946f4: cmp DWORD PTR [ebp-0x14], 0x1  (4 bytes)  [0xfffdfee0]=0x1
1000     7343 80946f8: mov DWORD PTR [ebp-0x1c], edx  (3 bytes)  [0xfffdfed8] <- 0x0
1000     7344 80946fb: mov DWORD PTR [ebp-0x18], ecx  (3 bytes)  [0xfffdfedc] <- 0x0
1000     7345 80946fe: je 8094760  (2 bytes)
1000     7346 8094760: movzx edx, al  (3 bytes)  edx <- 0x0
1000     7347 8094763: xor al, al  (2 bytes)  al <- 0x0
1000     7348 8094765: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfed4] <- 0x0
1000     7349 8094768: jmp 8094700  (2 bytes)
1000     7350 8094700: mov edx, eax  (2 bytes)  edx <- 0x0
1000     7351 8094702: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7352 8094705: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7353 8094708: mov eax, edi  (2 bytes)  eax <- 0xc2
1000     7354 809470a: call 8094520  (5 bytes)
1000     7355 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7356 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7357 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7358 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7359 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7360 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7361 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7362 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xc2
1000     7363 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7364 8094531: cmp edx, 0x0  (3 bytes)
1000     7365 8094534: jl 80945e8  (6 bytes)
1000     7366 809453a: je 80945e8  (6 bytes)
1000     7367 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7368 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7369 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7370 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7371 80945ef: pop edi  (1 bytes)  edi <- 0xc2
1000     7372 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7373 80945f1: ret  (1 bytes)
1000     7374 809470f: test eax, eax  (2 bytes)
1000     7375 8094711: jne 8094788  (2 bytes)
1000     7376 8094713: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7377 8094716: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7378 8094719: mov edx, ebx  (2 bytes)  edx <- 0x0
1000     7379 809471b: mov eax, edi  (2 bytes)  eax <- 0xc2
1000     7380 809471d: call 8094520  (5 bytes)
1000     7381 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7382 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7383 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7384 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7385 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7386 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7387 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7388 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xc2
1000     7389 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7390 8094531: cmp edx, 0x0  (3 bytes)
1000     7391 8094534: jl 80945e8  (6 bytes)
1000     7392 809453a: je 80945e8  (6 bytes)
1000     7393 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7394 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7395 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7396 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7397 80945ef: pop edi  (1 bytes)  edi <- 0xc2
1000     7398 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7399 80945f1: ret  (1 bytes)
1000     7400 8094722: test eax, eax  (2 bytes)
1000     7401 8094724: jne 8094788  (2 bytes)
1000     7402 8094726: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7403 8094729: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7404 809472c: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfedc]=0x0  edx <- 0x0
1000     7405 809472f: mov eax, edi  (2 bytes)  eax <- 0xc2
1000     7406 8094731: call 8094520  (5 bytes)
1000     7407 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7408 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7409 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7410 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7411 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7412 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7413 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7414 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xc2
1000     7415 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7416 8094531: cmp edx, 0x0  (3 bytes)
1000     7417 8094534: jl 80945e8  (6 bytes)
1000     7418 809453a: je 80945e8  (6 bytes)
1000     7419 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7420 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7421 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7422 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7423 80945ef: pop edi  (1 bytes)  edi <- 0xc2
1000     7424 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7425 80945f1: ret  (1 bytes)
1000     7426 8094736: test eax, eax  (2 bytes)
1000     7427 8094738: jne 8094788  (2 bytes)
1000     7428 809473a: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7429 809473d: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7430 8094740: mov edx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfed8]=0x0  edx <- 0x0
1000     7431 8094743: mov eax, edi  (2 bytes)  eax <- 0xc2
1000     7432 8094745: call 8094520  (5 bytes)
1000     7433 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7434 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7435 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7436 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7437 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7438 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7439 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7440 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xc2
1000     7441 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7442 8094531: cmp edx, 0x0  (3 bytes)
1000     7443 8094534: jl 80945e8  (6 bytes)
1000     7444 809453a: je 80945e8  (6 bytes)
1000     7445 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7446 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7447 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7448 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7449 80945ef: pop edi  (1 bytes)  edi <- 0xc2
1000     7450 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7451 80945f1: ret  (1 bytes)
1000     7452 809474a: test eax, eax  (2 bytes)
1000     7453 809474c: jne 8094788  (2 bytes)
1000     7454 809474e: mov ecx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfee0]=0x1  ecx <- 0x1
1000     7455 8094751: cmp DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfed4]=0x0
1000     7456 8094754: jbe 8094770  (2 bytes)
1000     7457 8094770: sub edi, 0xbf  (6 bytes)  edi <- 0x3
1000     7458 8094776: cmp edi, 0x5  (3 bytes)
1000     7459 8094779: ja 8094788  (2 bytes)
1000     7460 809477b: cmp BYTE PTR [ebp-0xd], 0x1  (4 bytes)  [0xfffdfee7]=0x0
1000     7461 809477f: sbb eax, eax  (2 bytes)  eax <- 0xffffffff
1000     7462 8094781: not eax  (2 bytes)  eax <- 0x0
1000     7463 8094783: nop  (1 bytes)
1000     7464 8094784: lea esi, [esi]  (4 bytes)  esi <- 0xfffdfee7
1000     7465 8094788: add esp, 0x24  (3 bytes)  esp <- 0xfffdfee8
1000     7466 809478b: pop ebx  (1 bytes)  ebx <- 0x756e6547
1000     7467 809478c: pop esi  (1 bytes)  esi <- 0x2
1000     7468 809478d: pop edi  (1 bytes)  edi <- 0xfffe0004
1000     7469 809478e: leave  (1 bytes)  ebp <- 0xfffdff18
1000     7470 809478f: ret  (1 bytes)
1000     7471 809482b: mov DWORD PTR [ebp-0x14], 0x3  (7 bytes)  [0xfffdff04] <- 0x3
1000     7472 8094832: mov edi, eax  (2 bytes)  edi <- 0x0
1000     7473 8094834: test eax, eax  (2 bytes)
1000     7474 8094836: jle 8094a10  (6 bytes)
1000     7475 8094a10: mov edx, esi  (2 bytes)  edx <- 0x2
1000     7476 8094a12: mov eax, 0xbf  (5 bytes)  eax <- 0xbf
1000     7477 8094a17: call 80946c0  (5 bytes)
1000     7478 80946c0: push ebp  (1 bytes)  esp <- 0xfffdfef4
1000     7479 80946c1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfef4
1000     7480 80946c3: push edi  (1 bytes)  esp <- 0xfffdfef0
1000     7481 80946c4: mov edi, eax  (2 bytes)  edi <- 0xbf
1000     7482 80946c6: push esi  (1 bytes)  esp <- 0xfffdfeec
1000     7483 80946c7: push ebx  (1 bytes)  esp <- 0xfffdfee8
1000     7484 80946c8: sub esp, 0x24  (3 bytes)  esp <- 0xfffdfec4
1000     7485 80946cb: cmp edx, 0x1  (3 bytes)
1000     7486 80946ce: jbe 8094790  (6 bytes)
1000     7487 80946d4: mov BYTE PTR [ebp-0xd], 0x0  (4 bytes)  [0xfffdfee7] <- 0x0
1000     7488 80946d8: mov BYTE PTR [ebp-0xe], 0x0  (4 bytes)  [0xfffdfee6] <- 0x0
1000     7489 80946dc: mov DWORD PTR [ebp-0x14], 0x1  (7 bytes)  [0xfffdfee0] <- 0x1
1000     7490 80946e3: mov DWORD PTR [ebp-0x20], 0x1  (7 bytes)  [0xfffdfed4] <- 0x1
1000     7491 80946ea: lea esi, [ebp-0xd]  (3 bytes)  esi <- 0xfffdfee7
1000     7492 80946ed: mov eax, 0x2  (5 bytes)  eax <- 0x2
1000     7493 80946f2: cpuid  (2 bytes)  eax <- 0x0  ebx <- 0x0  ecx <- 0x0  edx <- 0x0
1000     7494 80946f4: cmp DWORD PTR [ebp-0x14], 0x1  (4 bytes)  [0xfffdfee0]=0x1
1000     7495 80946f8: mov DWORD PTR [ebp-0x1c], edx  (3 bytes)  [0xfffdfed8] <- 0x0
1000     7496 80946fb: mov DWORD PTR [ebp-0x18], ecx  (3 bytes)  [0xfffdfedc] <- 0x0
1000     7497 80946fe: je 8094760  (2 bytes)
1000     7498 8094760: movzx edx, al  (3 bytes)  edx <- 0x0
1000     7499 8094763: xor al, al  (2 bytes)  al <- 0x0
1000     7500 8094765: mov DWORD PTR [ebp-0x20], edx  (3 bytes)  [0xfffdfed4] <- 0x0
1000     7501 8094768: jmp 8094700  (2 bytes)
1000     7502 8094700: mov edx, eax  (2 bytes)  edx <- 0x0
1000     7503 8094702: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7504 8094705: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7505 8094708: mov eax, edi  (2 bytes)  eax <- 0xbf
1000     7506 809470a: call 8094520  (5 bytes)
1000     7507 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7508 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7509 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7510 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7511 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7512 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7513 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7514 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbf
1000     7515 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7516 8094531: cmp edx, 0x0  (3 bytes)
1000     7517 8094534: jl 80945e8  (6 bytes)
1000     7518 809453a: je 80945e8  (6 bytes)
1000     7519 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7520 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7521 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7522 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7523 80945ef: pop edi  (1 bytes)  edi <- 0xbf
1000     7524 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7525 80945f1: ret  (1 bytes)
1000     7526 809470f: test eax, eax  (2 bytes)
1000     7527 8094711: jne 8094788  (2 bytes)
1000     7528 8094713: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7529 8094716: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7530 8094719: mov edx, ebx  (2 bytes)  edx <- 0x0
1000     7531 809471b: mov eax, edi  (2 bytes)  eax <- 0xbf
1000     7532 809471d: call 8094520  (5 bytes)
1000     7533 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7534 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7535 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7536 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7537 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7538 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7539 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7540 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbf
1000     7541 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7542 8094531: cmp edx, 0x0  (3 bytes)
1000     7543 8094534: jl 80945e8  (6 bytes)
1000     7544 809453a: je 80945e8  (6 bytes)
1000     7545 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7546 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7547 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7548 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7549 80945ef: pop edi  (1 bytes)  edi <- 0xbf
1000     7550 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7551 80945f1: ret  (1 bytes)
1000     7552 8094722: test eax, eax  (2 bytes)
1000     7553 8094724: jne 8094788  (2 bytes)
1000     7554 8094726: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7555 8094729: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7556 809472c: mov edx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdfedc]=0x0  edx <- 0x0
1000     7557 809472f: mov eax, edi  (2 bytes)  eax <- 0xbf
1000     7558 8094731: call 8094520  (5 bytes)
1000     7559 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7560 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7561 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7562 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7563 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7564 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7565 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7566 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbf
1000     7567 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7568 8094531: cmp edx, 0x0  (3 bytes)
1000     7569 8094534: jl 80945e8  (6 bytes)
1000     7570 809453a: je 80945e8  (6 bytes)
1000     7571 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7572 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7573 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7574 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7575 80945ef: pop edi  (1 bytes)  edi <- 0xbf
1000     7576 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7577 80945f1: ret  (1 bytes)
1000     7578 8094736: test eax, eax  (2 bytes)
1000     7579 8094738: jne 8094788  (2 bytes)
1000     7580 809473a: mov DWORD PTR [esp], esi  (3 bytes)  [0xfffdfec4] <- 0xfffdfee7
1000     7581 809473d: lea ecx, [ebp-0xe]  (3 bytes)  ecx <- 0xfffdfee6
1000     7582 8094740: mov edx, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdfed8]=0x0  edx <- 0x0
1000     7583 8094743: mov eax, edi  (2 bytes)  eax <- 0xbf
1000     7584 8094745: call 8094520  (5 bytes)
1000     7585 8094520: push ebp  (1 bytes)  esp <- 0xfffdfebc
1000     7586 8094521: mov ebp, esp  (2 bytes)  ebp <- 0xfffdfebc
1000     7587 8094523: push edi  (1 bytes)  esp <- 0xfffdfeb8
1000     7588 8094524: push esi  (1 bytes)  esp <- 0xfffdfeb4
1000     7589 8094525: mov esi, edx  (2 bytes)  esi <- 0x0
1000     7590 8094527: push ebx  (1 bytes)  esp <- 0xfffdfeb0
1000     7591 8094528: sub esp, 0x28  (3 bytes)  esp <- 0xfffdfe88
1000     7592 809452b: mov DWORD PTR [ebp-0x1c], eax  (3 bytes)  [0xfffdfea0] <- 0xbf
1000     7593 809452e: mov DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfe9c] <- 0xfffdfee6
1000     7594 8094531: cmp edx, 0x0  (3 bytes)
1000     7595 8094534: jl 80945e8  (6 bytes)
1000     7596 809453a: je 80945e8  (6 bytes)
1000     7597 80945e8: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7598 80945ea: add esp, 0x28  (3 bytes)  esp <- 0xfffdfeb0
1000     7599 80945ed: pop ebx  (1 bytes)  ebx <- 0x0
1000     7600 80945ee: pop esi  (1 bytes)  esi <- 0xfffdfee7
1000     7601 80945ef: pop edi  (1 bytes)  edi <- 0xbf
1000     7602 80945f0: leave  (1 bytes)  ebp <- 0xfffdfef4
1000     7603 80945f1: ret  (1 bytes)
1000     7604 809474a: test eax, eax  (2 bytes)
1000     7605 809474c: jne 8094788  (2 bytes)
1000     7606 809474e: mov ecx, DWORD PTR [ebp-0x14]  (3 bytes)  [0xfffdfee0]=0x1  ecx <- 0x1
1000     7607 8094751: cmp DWORD PTR [ebp-0x20], ecx  (3 bytes)  [0xfffdfed4]=0x0
1000     7608 8094754: jbe 8094770  (2 bytes)
1000     7609 8094770: sub edi, 0xbf  (6 bytes)  edi <- 0x0
1000     7610 8094776: cmp edi, 0x5  (3 bytes)
1000     7611 8094779: ja 8094788  (2 bytes)
1000     7612 809477b: cmp BYTE PTR [ebp-0xd], 0x1  (4 bytes)  [0xfffdfee7]=0x0
1000     7613 809477f: sbb eax, eax  (2 bytes)  eax <- 0xffffffff
1000     7614 8094781: not eax  (2 bytes)  eax <- 0x0
1000     7615 8094783: nop  (1 bytes)
1000     7616 8094784: lea esi, [esi]  (4 bytes)  esi <- 0xfffdfee7
1000     7617 8094788: add esp, 0x24  (3 bytes)  esp <- 0xfffdfee8
1000     7618 809478b: pop ebx  (1 bytes)  ebx <- 0x756e6547
1000     7619 809478c: pop esi  (1 bytes)  esi <- 0x2
1000     7620 809478d: pop edi  (1 bytes)  edi <- 0x0
1000     7621 809478e: leave  (1 bytes)  ebp <- 0xfffdff18
1000     7622 809478f: ret  (1 bytes)
1000     7623 8094a1c: mov DWORD PTR [ebp-0x14], 0x2  (7 bytes)  [0xfffdff04] <- 0x2
1000     7624 8094a23: mov edi, eax  (2 bytes)  edi <- 0x0
1000     7625 8094a25: jmp 809483c  (5 bytes)
1000     7626 809483c: mov eax, 0x1  (5 bytes)  eax <- 0x1
1000     7627 8094841: cpuid  (2 bytes)  eax <- 0xf29  ebx <- 0x102080b  ecx <- 0x4400  edx <- 0xbfebfbff  edx <- 0xb96bfbff
1000     7628 8094843: cmp esi, 0x3  (3 bytes)
1000     7629 8094846: mov DWORD PTR [ebp-0x18], ebx  (3 bytes)  [0xfffdff00] <- 0x102080b
1000     7630 8094849: jg 8094940  (6 bytes)
1000     7631 809484f: mov ecx, DWORD PTR [ebp-0x18]  (3 bytes)  [0xfffdff00]=0x102080b  ecx <- 0x102080b
1000     7632 8094852: shr ecx, 0x10  (3 bytes)  ecx <- 0x102
1000     7633 8094855: and ecx, 0xff  (6 bytes)  ecx <- 0x2
1000     7634 809485b: test ecx, ecx  (2 bytes)
1000     7635 809485d: je 809486b  (2 bytes)
1000     7636 809485f: test edi, edi  (2 bytes)
1000     7637 8094861: jle 809486b  (2 bytes)
1000     7638 809486b: mov eax, DWORD PTR [ebp-0x10]  (3 bytes)  [0xfffdff08]=0x0  eax <- 0x0
1000     7639 809486e: test eax, eax  (2 bytes)
1000     7640 8094870: jle 809487e  (2 bytes)
1000     7641 809487e: test edi, edi  (2 bytes)
1000     7642 8094880: jle 80947eb  (6 bytes)
1000     7643 80947eb: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdff0c]=0x80d3b9c  ebx <- 0x80d3b9c
1000     7644 80947ee: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdff10]=0x1  esi <- 0x1
1000     7645 80947f1: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdff14]=0xfffe0004  edi <- 0xfffe0004
1000     7646 80947f4: leave  (1 bytes)  ebp <- 0xfffdff28
1000     7647 80947f5: ret  (1 bytes)
1000     7648 80b3a42: sub ebx, 0x4  (3 bytes)  ebx <- 0x80d3b98
1000     7649 80b3a45: mov eax, DWORD PTR [ebx]  (2 bytes)  [0x80d3b98]=0xffffffff  eax <- 0xffffffff
1000     7650 80b3a47: cmp eax, 0xff  (3 bytes)
1000     7651 80b3a4a: jne 80b3a40  (2 bytes)
1000     7652 80b3a4c: add esp, 0x4  (3 bytes)  esp <- 0xfffdff24
1000     7653 80b3a4f: pop ebx  (1 bytes)  ebx <- 0x80d3be8
1000     7654 80b3a50: leave  (1 bytes)  ebp <- 0xfffdff38
1000     7655 80b3a51: ret  (1 bytes)
1000     7656 8048120: pop eax  (1 bytes)  eax <- 0x0
1000     7657 8048121: pop ebx  (1 bytes)  ebx <- 0x0
1000     7658 8048122: leave  (1 bytes)  ebp <- 0xfffdff78
1000     7659 8048123: ret  (1 bytes)
1000     7660 8048b30: mov DWORD PTR [ebp-0x1c], 0x80d3b98  (7 bytes)  [0xfffdff5c] <- 0x80d3b98
1000     7661 8048b37: sub DWORD PTR [ebp-0x1c], 0x80d3b98  (7 bytes)  [0xfffdff5c]=0x80d3b98  [0xfffdff5c] <- 0x0
1000     7662 8048b3e: sar DWORD PTR [ebp-0x1c], 0x2  (4 bytes)  [0xfffdff5c]=0x0  [0xfffdff5c] <- 0x0
1000     7663 8048b42: mov eax, DWORD PTR [ebp-0x1c]  (3 bytes)  [0xfffdff5c]=0x0  eax <- 0x0
1000     7664 8048b45: test eax, eax  (2 bytes)
1000     7665 8048b47: je 8048b6b  (2 bytes)
1000     7666 8048b6b: add esp, 0x2c  (3 bytes)  esp <- 0xfffdff6c
1000     7667 8048b6e: pop ebx  (1 bytes)  ebx <- 0x0
1000     7668 8048b6f: pop esi  (1 bytes)  esi <- 0x8048ab0
1000     7669 8048b70: pop edi  (1 bytes)  edi <- 0x8048ae0
1000     7670 8048b71: leave  (1 bytes)  ebp <- 0xfffdffd8
1000     7671 8048b72: ret  (1 bytes)
1000     7672 80483e5: lea eax, [ebp-0x48]  (3 bytes)  eax <- 0xfffdff90
1000     7673 80483e8: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdff80] <- 0xfffdff90
1000     7674 80483eb: call 8048b80  (5 bytes)
1000     7675 8048b80: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7676 8048b82: mov edx, DWORD PTR [esp+0x4]  (4 bytes)  [0xfffdff80]=0xfffdff90  edx <- 0xfffdff90
1000     7677 8048b86: mov DWORD PTR [edx], ebx  (2 bytes)  [0xfffdff90] <- 0x0
1000     7678 8048b88: mov DWORD PTR [edx+0x4], esi  (3 bytes)  [0xfffdff94] <- 0x8048ab0
1000     7679 8048b8b: mov DWORD PTR [edx+0x8], edi  (3 bytes)  [0xfffdff98] <- 0x8048ae0
1000     7680 8048b8e: lea ecx, [esp+0x4]  (4 bytes)  ecx <- 0xfffdff80
1000     7681 8048b92: xor ecx, DWORD PTR gs:0x18  (7 bytes)  [0x80d6848]=0x0  ecx <- 0xfffdff80
1000     7682 8048b99: rol ecx, 0x9  (3 bytes)  ecx <- 0xfbff01ff
1000     7683 8048b9c: mov DWORD PTR [edx+0x10], ecx  (3 bytes)  [0xfffdffa0] <- 0xfbff01ff
1000     7684 8048b9f: mov ecx, DWORD PTR [esp]  (3 bytes)  [0xfffdff7c]=0x80483f0  ecx <- 0x80483f0
1000     7685 8048ba2: xor ecx, DWORD PTR gs:0x18  (7 bytes)  [0x80d6848]=0x0  ecx <- 0x80483f0
1000     7686 8048ba9: rol ecx, 0x9  (3 bytes)  ecx <- 0x907e010
1000     7687 8048bac: mov DWORD PTR [edx+0x14], ecx  (3 bytes)  [0xfffdffa4] <- 0x907e010
1000     7688 8048baf: mov DWORD PTR [edx+0xc], ebp  (3 bytes)  [0xfffdff9c] <- 0xfffdffd8
1000     7689 8048bb2: mov DWORD PTR [edx+0x18], eax  (3 bytes)  [0xfffdffa8] <- 0x0
1000     7690 8048bb5: ret  (1 bytes)
1000     7691 80483f0: test eax, eax  (2 bytes)
1000     7692 80483f2: jne 8048451  (2 bytes)
1000     7693 80483f4: mov eax, gs:0x80  (6 bytes)  eax <- 0x0
1000     7694 80483fa: mov DWORD PTR [ebp-0x2c], eax  (3 bytes)  [0xfffdffac] <- 0x0
1000     7695 80483fd: mov eax, gs:0x7c  (6 bytes)  eax <- 0x0
1000     7696 8048403: mov DWORD PTR [ebp-0x28], eax  (3 bytes)  [0xfffdffb0] <- 0x0
1000     7697 8048406: lea eax, [ebp-0x48]  (3 bytes)  eax <- 0xfffdff90
1000     7698 8048409: mov gs:0x80, eax  (6 bytes)
1000     7699 804840f: mov eax, ds:0x80d5158  (5 bytes)  eax <- 0xfffe000c
1000     7700 8048414: mov edx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdffe8]=0xfffe0004  edx <- 0xfffe0004
1000     7701 8048417: mov ecx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdffe4]=0x1  ecx <- 0x1
1000     7702 804841a: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdff88] <- 0xfffe000c
1000     7703 804841e: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdff84] <- 0xfffe0004
1000     7704 8048422: mov DWORD PTR [esp], ecx  (3 bytes)  [0xfffdff80] <- 0x1
1000     7705 8048425: call DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdffe0]=0x8048228
1000     7706 8048228: push ebp  (1 bytes)  esp <- 0xfffdff78
1000     7707 8048229: mov ebp, esp  (2 bytes)  ebp <- 0xfffdff78
1000     7708 804822b: and esp, 0xf0  (3 bytes)  esp <- 0xfffdff70
1000     7709 804822e: push edi  (1 bytes)  esp <- 0xfffdff6c
1000     7710 804822f: push ebx  (1 bytes)  esp <- 0xfffdff68
1000     7711 8048230: sub esp, 0x7f8  (6 bytes)  esp <- 0xfffdf770
1000     7712 8048236: mov DWORD PTR [esp+0x404], 0x69686f6d  (11 bytes)  [0xfffdfb74] <- 0x69686f6d
1000     7713 8048241: mov DWORD PTR [esp+0x408], 0x70756774  (11 bytes)  [0xfffdfb78] <- 0x70756774
1000     7714 804824c: mov DWORD PTR [esp+0x40c], 0x74  (11 bytes)  [0xfffdfb7c] <- 0x74
1000     7715 8048257: lea ebx, [esp+0x410]  (7 bytes)  ebx <- 0xfffdfb80
1000     7716 804825e: mov eax, 0x0  (5 bytes)  eax <- 0x0
1000     7717 8048263: mov edx, 0xf7  (5 bytes)  edx <- 0xf7
1000     7718 8048268: mov edi, ebx  (2 bytes)  edi <- 0xfffdfb80
1000     7719 804826a: mov ecx, edx  (2 bytes)  ecx <- 0xf7
1000     7720 804826c: rep stosd  (2 bytes)
1000     7721 804826e: mov eax, 0x80b4e28  (5 bytes)  eax <- 0x80b4e28
1000     7722 8048273: lea edx, [esp+0x404]  (7 bytes)  edx <- 0xfffdfb74
1000     7723 804827a: mov DWORD PTR [esp+0x8], edx  (4 bytes)  [0xfffdf778] <- 0xfffdfb74
1000     7724 804827e: lea edx, [esp+0x1c]  (4 bytes)  edx <- 0xfffdf78c
1000     7725 8048282: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdf774] <- 0xfffdf78c
1000     7726 8048286: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdf770] <- 0x80b4e28
1000     7727 8048289: call 8049280  (5 bytes)
1000     7728 8049280: push ebp  (1 bytes)  esp <- 0xfffdf768
1000     7729 8049281: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf768
1000     7730 8049283: sub esp, 0xc  (3 bytes)  esp <- 0xfffdf75c
1000     7731 8049286: lea eax, [ebp+0xc]  (3 bytes)  eax <- 0xfffdf774
1000     7732 8049289: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdf764] <- 0xfffdf774
1000     7733 804928d: mov eax, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf770]=0x80b4e28  eax <- 0x80b4e28
1000     7734 8049290: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdf760] <- 0x80b4e28
1000     7735 8049294: mov eax, ds:0x80d4040  (5 bytes)  eax <- 0x80d3cc0
1000     7736 8049299: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdf75c] <- 0x80d3cc0
1000     7737 804929c: call 805d050  (5 bytes)
1000     7738 805d050: push ebp  (1 bytes)  esp <- 0xfffdf754
1000     7739 805d051: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf754
1000     7740 805d053: sub esp, 0x574  (6 bytes)  esp <- 0xfffdf1e0
1000     7741 805d059: mov DWORD PTR [ebp-0x10], ecx  (3 bytes)  [0xfffdf744] <- 0x0
1000     7742 805d05c: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdf748] <- 0xfffdfb80
1000     7743 805d05f: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdf74c] <- 0x8048ab0
1000     7744 805d062: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdf750] <- 0xfffdff5c
1000     7745 805d065: lea ecx, [ebp+0x8]  (3 bytes)  ecx <- 0xfffdf75c
1000     7746 805d068: mov edx, 0xffffffe8  (6 bytes)  edx <- 0xffffffe8
1000     7747 805d06e: mov eax, DWORD PTR [ecx+0x4]  (3 bytes)  [0xfffdf760]=0x80b4e28  eax <- 0x80b4e28
1000     7748 805d071: mov ebx, DWORD PTR [ecx]  (2 bytes)  [0xfffdf75c]=0x80d3cc0  ebx <- 0x80d3cc0
1000     7749 805d073: mov DWORD PTR [ebp-0x47c], eax  (6 bytes)  [0xfffdf2d8] <- 0x80b4e28
1000     7750 805d079: mov ecx, DWORD PTR [ecx+0x8]  (3 bytes)  [0xfffdf764]=0xfffdf774  ecx <- 0xfffdf774
1000     7751 805d07c: mov edx, DWORD PTR gs:[edx]  (3 bytes)  [0x80d6818]=0x0  edx <- 0x0
1000     7752 805d07f: mov eax, DWORD PTR [ebx+0x68]  (3 bytes)  [0x80d3d28]=0x0  eax <- 0x0
1000     7753 805d082: mov DWORD PTR [ebp-0x480], ecx  (6 bytes)  [0xfffdf2d4] <- 0xfffdf774
1000     7754 805d088: mov DWORD PTR [ebp-0x484], edx  (6 bytes)  [0xfffdf2d0] <- 0x0
1000     7755 805d08e: test eax, eax  (2 bytes)
1000     7756 805d090: jne 805d1d0  (6 bytes)
1000     7757 805d096: mov DWORD PTR [ebx+0x68], 0xffffffff  (7 bytes)  [0x80d3d28] <- 0xffffffff
1000     7758 805d09d: mov eax, DWORD PTR [ebx]  (2 bytes)  [0x80d3cc0]=0xfbad2084  eax <- 0xfbad2084
1000     7759 805d09f: test al, 0x8  (2 bytes)
1000     7760 805d0a1: jne 805d220  (6 bytes)
1000     7761 805d0a7: mov esi, DWORD PTR [ebp-0x47c]  (6 bytes)  [0xfffdf2d8]=0x80b4e28  esi <- 0x80b4e28
1000     7762 805d0ad: test esi, esi  (2 bytes)
1000     7763 805d0af: je 805d1f0  (6 bytes)
1000     7764 805d0b5: test al, 0x2  (2 bytes)
1000     7765 805d0b7: jne 805d208  (6 bytes)
1000     7766 805d0bd: mov edi, DWORD PTR [ebp-0x480]  (6 bytes)  [0xfffdf2d4]=0xfffdf774  edi <- 0xfffdf774
1000     7767 805d0c3: mov DWORD PTR [ebp-0x14], edi  (3 bytes)  [0xfffdf740] <- 0xfffdf774
1000     7768 805d0c6: mov DWORD PTR [esp+0x4], 0x25  (8 bytes)  [0xfffdf1e4] <- 0x25
1000     7769 805d0ce: mov eax, DWORD PTR [ebp-0x47c]  (6 bytes)  [0xfffdf2d8]=0x80b4e28  eax <- 0x80b4e28
1000     7770 805d0d4: mov DWORD PTR [esp], eax  (3 bytes)  [0xfffdf1e0] <- 0x80b4e28
1000     7771 805d0d7: call 8052c90  (5 bytes)
1000     7772 8052c90: push edi  (1 bytes)  esp <- 0xfffdf1d8
1000     7773 8052c91: mov eax, DWORD PTR [esp+0x8]  (4 bytes)  [0xfffdf1e0]=0x80b4e28  eax <- 0x80b4e28
1000     7774 8052c95: mov edx, DWORD PTR [esp+0xc]  (4 bytes)  [0xfffdf1e4]=0x25  edx <- 0x25
1000     7775 8052c99: mov dh, dl  (2 bytes)  dh <- 0x25
1000     7776 8052c9b: mov ecx, edx  (2 bytes)  ecx <- 0x2525
1000     7777 8052c9d: shl edx, 0x10  (3 bytes)  edx <- 0x25250000
1000     7778 8052ca0: mov dx, cx  (3 bytes)  dx <- 0x2525
1000     7779 8052ca3: test al, 0x3  (2 bytes)
1000     7780 8052ca5: je 8052cf3  (2 bytes)
1000     7781 8052cf3: mov ecx, DWORD PTR [eax]  (2 bytes)  [0x80b4e28]=0x203d2062  ecx <- 0x203d2062
1000     7782 8052cf5: xor ecx, edx  (2 bytes)  ecx <- 0x5180547
1000     7783 8052cf7: mov edi, 0xfefefeff  (5 bytes)  edi <- 0xfefefeff
1000     7784 8052cfc: add edi, ecx  (2 bytes)  edi <- 0x4170446
1000     7785 8052cfe: jae 8052dcf  (6 bytes)
1000     7786 8052d04: xor edi, ecx  (2 bytes)  edi <- 0x10f0101
1000     7787 8052d06: or edi, 0xfefefeff  (6 bytes)  edi <- 0xffffffff
1000     7788 8052d0c: inc edi  (1 bytes)  edi <- 0x0
1000     7789 8052d0d: jne 8052dcf  (6 bytes)
1000     7790 8052d13: xor ecx, edx  (2 bytes)  ecx <- 0x203d2062
1000     7791 8052d15: mov edi, 0xfefefeff  (5 bytes)  edi <- 0xfefefeff
1000     7792 8052d1a: add edi, ecx  (2 bytes)  edi <- 0x1f3c1f61
1000     7793 8052d1c: jae 8052dcf  (6 bytes)
1000     7794 8052d22: xor edi, ecx  (2 bytes)  edi <- 0x3f013f03
1000     7795 8052d24: or edi, 0xfefefeff  (6 bytes)  edi <- 0xffffffff
1000     7796 8052d2a: inc edi  (1 bytes)  edi <- 0x0
1000     7797 8052d2b: jne 8052dcf  (6 bytes)
1000     7798 8052d31: mov ecx, DWORD PTR [eax+0x4]  (3 bytes)  [0x80b4e2c]=0x61207325  ecx <- 0x61207325
1000     7799 8052d34: xor ecx, edx  (2 bytes)  ecx <- 0x44055600
1000     7800 8052d36: mov edi, 0xfefefeff  (5 bytes)  edi <- 0xfefefeff
1000     7801 8052d3b: add edi, ecx  (2 bytes)  edi <- 0x430454ff
1000     7802 8052d3d: jae 8052dcc  (6 bytes)
1000     7803 8052d43: xor edi, ecx  (2 bytes)  edi <- 0x70102ff
1000     7804 8052d45: or edi, 0xfefefeff  (6 bytes)  edi <- 0xfffffeff
1000     7805 8052d4b: inc edi  (1 bytes)  edi <- 0xffffff00
1000     7806 8052d4c: jne 8052dcc  (2 bytes)
1000     7807 8052dcc: add eax, 0x4  (3 bytes)  eax <- 0x80b4e2c
1000     7808 8052dcf: test cl, cl  (2 bytes)
1000     7809 8052dd1: je 8052ded  (2 bytes)
1000     7810 8052ded: pop edi  (1 bytes)  edi <- 0xfffdf774
1000     7811 8052dee: ret  (1 bytes)
1000     7812 805d0dc: mov DWORD PTR [ebp-0x48c], 0x0  (10 bytes)  [0xfffdf2c8] <- 0x0
1000     7813 805d0e6: mov DWORD PTR [ebp-0x490], eax  (6 bytes)  [0xfffdf2c4] <- 0x80b4e2c
1000     7814 805d0ec: mov eax, DWORD PTR [ebx]  (2 bytes)  [0x80d3cc0]=0xfbad2084  eax <- 0xfbad2084
1000     7815 805d0ee: test ax, ax  (3 bytes)
1000     7816 805d0f1: js 805d14c  (2 bytes)
1000     7817 805d0f3: mov edx, 0x0  (5 bytes)  edx <- 0x0
1000     7818 805d0f8: test edx, edx  (2 bytes)
1000     7819 805d0fa: jne 805f4e0  (6 bytes)
1000     7820 805d100: mov DWORD PTR [ebp-0x7c], 0x8066300  (7 bytes)  [0xfffdf6d8] <- 0x8066300
1000     7821 805d107: mov DWORD PTR [ebp-0x78], ebx  (3 bytes)  [0xfffdf6dc] <- 0x80d3cc0
1000     7822 805d10a: mov DWORD PTR [ebp-0x48c], 0x0  (10 bytes)  [0xfffdf2c8] <- 0x0
1000     7823 805d114: test ax, ax  (3 bytes)
1000     7824 805d117: js 805d14c  (2 bytes)
1000     7825 805d119: mov esi, DWORD PTR gs:0x8  (7 bytes)  [0x80d6838]=0x80d6830  esi <- 0x80d6830
1000     7826 805d120: mov edx, DWORD PTR [ebx+0x48]  (3 bytes)  [0x80d3d08]=0x80d4c30  edx <- 0x80d4c30
1000     7827 805d123: cmp DWORD PTR [edx+0x8], esi  (3 bytes)  [0x80d4c38]=0x0
1000     7828 805d126: je 805d149  (2 bytes)
1000     7829 805d128: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7830 805d12a: mov ecx, 0x1  (5 bytes)  ecx <- 0x1
1000     7831 805d12f: cmp DWORD PTR gs:0xc, 0x0  (8 bytes)  [0x80d683c]=0x0
1000     7832 805d137: je 805d13a  (2 bytes)
1000     7833 805d13a: cmpxchg DWORD PTR [edx], ecx  (3 bytes)  [0x80d4c30]=0x0  eax <- 0x0  [0x80d4c30] <- 0x1
1000     7834 805d13d: jne 8061d75  (6 bytes)
1000     7835 805d143: mov edx, DWORD PTR [ebx+0x48]  (3 bytes)  [0x80d3d08]=0x80d4c30  edx <- 0x80d4c30
1000     7836 805d146: mov DWORD PTR [edx+0x8], esi  (3 bytes)  [0x80d4c38] <- 0x80d6830
1000     7837 805d149: inc DWORD PTR [edx+0x4]  (3 bytes)  [0x80d4c34]=0x0  [0x80d4c34] <- 0x1
1000     7838 805d14c: mov esi, DWORD PTR [ebp-0x490]  (6 bytes)  [0xfffdf2c4]=0x80b4e2c  esi <- 0x80b4e2c
1000     7839 805d152: mov eax, DWORD PTR [ebx+0x94]  (6 bytes)  [0x80d3d54]=0x80b8740  eax <- 0x80b8740
1000     7840 805d158: sub esi, DWORD PTR [ebp-0x47c]  (6 bytes)  [0xfffdf2d8]=0x80b4e28  esi <- 0x4
1000     7841 805d15e: mov DWORD PTR [esp+0x8], esi  (4 bytes)  [0xfffdf1e8] <- 0x4
1000     7842 805d162: mov edx, DWORD PTR [ebp-0x47c]  (6 bytes)  [0xfffdf2d8]=0x80b4e28  edx <- 0x80b4e28
1000     7843 805d168: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdf1e0] <- 0x80d3cc0
1000     7844 805d16b: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdf1e4] <- 0x80b4e28
1000     7845 805d16f: call DWORD PTR [eax+0x1c]  (3 bytes)  [0x80b875c]=0x806ac60
1000     7846 806ac60: push ebp  (1 bytes)  esp <- 0xfffdf1d8
1000     7847 806ac61: xor eax, eax  (2 bytes)  eax <- 0x0
1000     7848 806ac63: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf1d8
1000     7849 806ac65: push edi  (1 bytes)  esp <- 0xfffdf1d4
1000     7850 806ac66: push esi  (1 bytes)  esp <- 0xfffdf1d0
1000     7851 806ac67: push ebx  (1 bytes)  esp <- 0xfffdf1cc
1000     7852 806ac68: sub esp, 0x1c  (3 bytes)  esp <- 0xfffdf1b0
1000     7853 806ac6b: mov ecx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdf1e8]=0x4  ecx <- 0x4
1000     7854 806ac6e: mov esi, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdf1e4]=0x80b4e28  esi <- 0x80b4e28
1000     7855 806ac71: test ecx, ecx  (2 bytes)
1000     7856 806ac73: je 806ade6  (6 bytes)
1000     7857 806ac79: mov edx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf1e0]=0x80d3cc0  edx <- 0x80d3cc0
1000     7858 806ac7c: mov edi, esi  (2 bytes)  edi <- 0x80b4e28
1000     7859 806ac7e: mov eax, DWORD PTR [edx]  (2 bytes)  [0x80d3cc0]=0xfbad2084  eax <- 0xfbad2084
1000     7860 806ac80: and eax, 0xa00  (5 bytes)  eax <- 0x0
1000     7861 806ac85: cmp eax, 0xa00  (5 bytes)
1000     7862 806ac8a: je 806adf0  (6 bytes)
1000     7863 806ac90: mov eax, DWORD PTR [edx+0x18]  (3 bytes)  [0x80d3cd8]=0x0  eax <- 0x0
1000     7864 806ac93: mov ebx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdf1e8]=0x4  ebx <- 0x4
1000     7865 806ac96: mov edx, DWORD PTR [edx+0x14]  (3 bytes)  [0x80d3cd4]=0x0  edx <- 0x0
1000     7866 806ac99: cmp eax, edx  (2 bytes)
1000     7867 806ac9b: ja 806ad08  (2 bytes)
1000     7868 806ac9d: mov edx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf1e0]=0x80d3cc0  edx <- 0x80d3cc0
1000     7869 806aca0: mov eax, DWORD PTR [edx+0x94]  (6 bytes)  [0x80d3d54]=0x80b8740  eax <- 0x80b8740
1000     7870 806aca6: mov DWORD PTR [esp+0x4], 0xffffffff  (8 bytes)  [0xfffdf1b4] <- 0xffffffff
1000     7871 806acae: mov DWORD PTR [esp], edx  (3 bytes)  [0xfffdf1b0] <- 0x80d3cc0
1000     7872 806acb1: call DWORD PTR [eax+0xc]  (3 bytes)  [0x80b874c]=0x806bbd0
1000     7873 806bbd0: push ebp  (1 bytes)  esp <- 0xfffdf1a8
1000     7874 806bbd1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf1a8
1000     7875 806bbd3: sub esp, 0x1c  (3 bytes)  esp <- 0xfffdf18c
1000     7876 806bbd6: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdf19c] <- 0x4
1000     7877 806bbd9: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdf1a0] <- 0x80b4e28
1000     7878 806bbdc: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdf1a4] <- 0x80b4e28
1000     7879 806bbdf: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf1b0]=0x80d3cc0  ebx <- 0x80d3cc0
1000     7880 806bbe2: mov edx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdf1b4]=0xffffffff  edx <- 0xffffffff
1000     7881 806bbe5: mov ecx, DWORD PTR [ebx]  (2 bytes)  [0x80d3cc0]=0xfbad2084  ecx <- 0xfbad2084
1000     7882 806bbe7: test cl, 0x8  (3 bytes)
1000     7883 806bbea: jne 806bcf0  (6 bytes)
1000     7884 806bbf0: test ch, 0x8  (3 bytes)
1000     7885 806bbf3: je 806bc38  (2 bytes)
1000     7886 806bc38: mov eax, DWORD PTR [ebx+0x10]  (3 bytes)  [0x80d3cd0]=0x0  eax <- 0x0
1000     7887 806bc3b: test eax, eax  (2 bytes)
1000     7888 806bc3d: je 806bd10  (6 bytes)
1000     7889 806bd10: mov DWORD PTR [ebp-0x10], edx  (3 bytes)  [0xfffdf198] <- 0xffffffff
1000     7890 806bd13: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdf18c] <- 0x80d3cc0
1000     7891 806bd16: call 804b800  (5 bytes)
1000     7892 804b800: push ebp  (1 bytes)  esp <- 0xfffdf184
1000     7893 804b801: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf184
1000     7894 804b803: sub esp, 0x14  (3 bytes)  esp <- 0xfffdf170
1000     7895 804b806: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdf178] <- 0x80d3cc0
1000     7896 804b809: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdf17c] <- 0x80b4e28
1000     7897 804b80c: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdf180] <- 0x80b4e28
1000     7898 804b80f: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf18c]=0x80d3cc0  ebx <- 0x80d3cc0
1000     7899 804b812: mov eax, DWORD PTR [ebx+0x1c]  (3 bytes)  [0x80d3cdc]=0x0  eax <- 0x0
1000     7900 804b815: test eax, eax  (2 bytes)
1000     7901 804b817: je 804b828  (2 bytes)
1000     7902 804b828: test BYTE PTR [ebx], 0x2  (3 bytes)  [0x80d3cc0]=0x84
1000     7903 804b82b: je 804b834  (2 bytes)
1000     7904 804b834: mov eax, DWORD PTR [ebx+0x94]  (6 bytes)  [0x80d3d54]=0x80b8740  eax <- 0x80b8740
1000     7905 804b83a: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdf170] <- 0x80d3cc0
1000     7906 804b83d: call DWORD PTR [eax+0x34]  (3 bytes)  [0x80b8774]=0x80930b0
1000     7907 80930b0: push ebp  (1 bytes)  esp <- 0xfffdf168
1000     7908 80930b1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf168
1000     7909 80930b3: push esi  (1 bytes)  esp <- 0xfffdf164
1000     7910 80930b4: push ebx  (1 bytes)  esp <- 0xfffdf160
1000     7911 80930b5: sub esp, 0x78  (3 bytes)  esp <- 0xfffdf0e8
1000     7912 80930b8: mov ebx, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf170]=0x80d3cc0  ebx <- 0x80d3cc0
1000     7913 80930bb: mov eax, DWORD PTR [ebx+0x38]  (3 bytes)  [0x80d3cf8]=0x1  eax <- 0x1
1000     7914 80930be: test eax, eax  (2 bytes)
1000     7915 80930c0: js 8093100  (2 bytes)
1000     7916 80930c2: mov eax, DWORD PTR [ebx+0x94]  (6 bytes)  [0x80d3d54]=0x80b8740  eax <- 0x80b8740
1000     7917 80930c8: lea edx, [ebp-0x68]  (3 bytes)  edx <- 0xfffdf100
1000     7918 80930cb: mov DWORD PTR [esp], ebx  (3 bytes)  [0xfffdf0e8] <- 0x80d3cc0
1000     7919 80930ce: mov DWORD PTR [esp+0x4], edx  (4 bytes)  [0xfffdf0ec] <- 0xfffdf100
1000     7920 80930d2: call DWORD PTR [eax+0x48]  (3 bytes)  [0x80b8788]=0x806afd0
1000     7921 806afd0: push ebp  (1 bytes)  esp <- 0xfffdf0e0
1000     7922 806afd1: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf0e0
1000     7923 806afd3: sub esp, 0xc  (3 bytes)  esp <- 0xfffdf0d4
1000     7924 806afd6: mov eax, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdf0ec]=0xfffdf100  eax <- 0xfffdf100
1000     7925 806afd9: mov DWORD PTR [esp+0x8], eax  (4 bytes)  [0xfffdf0dc] <- 0xfffdf100
1000     7926 806afdd: mov eax, DWORD PTR [ebp+0x8]  (3 bytes)  [0xfffdf0e8]=0x80d3cc0  eax <- 0x80d3cc0
1000     7927 806afe0: mov eax, DWORD PTR [eax+0x38]  (3 bytes)  [0x80d3cf8]=0x1  eax <- 0x1
1000     7928 806afe3: mov DWORD PTR [esp], 0x3  (7 bytes)  [0xfffdf0d4] <- 0x3
1000     7929 806afea: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdf0d8] <- 0x1
1000     7930 806afee: call 8052e50  (5 bytes)
1000     7931 8052e50: push ebp  (1 bytes)  esp <- 0xfffdf0cc
1000     7932 8052e51: mov ebp, esp  (2 bytes)  ebp <- 0xfffdf0cc
1000     7933 8052e53: sub esp, 0x58  (3 bytes)  esp <- 0xfffdf074
1000     7934 8052e56: mov DWORD PTR [ebp-0xc], ebx  (3 bytes)  [0xfffdf0c0] <- 0x80d3cc0
1000     7935 8052e59: mov DWORD PTR [ebp-0x8], esi  (3 bytes)  [0xfffdf0c4] <- 0x80b4e28
1000     7936 8052e5c: mov DWORD PTR [ebp-0x4], edi  (3 bytes)  [0xfffdf0c8] <- 0x80b4e28
1000     7937 8052e5f: mov ebx, DWORD PTR [ebp+0xc]  (3 bytes)  [0xfffdf0d8]=0x1  ebx <- 0x1
1000     7938 8052e62: mov eax, ds:0x80d5e1c  (5 bytes)  eax <- 0x0
1000     7939 8052e67: mov edx, DWORD PTR [ebp+0x10]  (3 bytes)  [0xfffdf0dc]=0xfffdf100  edx <- 0xfffdf100
1000     7940 8052e6a: test eax, eax  (2 bytes)
1000     7941 8052e6c: jne 8052ed0  (2 bytes)
1000     7942 8052e6e: mov esi, 0xffffffe8  (6 bytes)  esi <- 0xffffffe8
1000     7943 8052e74: mov ecx, edx  (2 bytes)  ecx <- 0xfffdf100
1000     7944 8052e76: mov edi, DWORD PTR gs:[esi]  (3 bytes)  [0x80d6818]=0x0  edi <- 0x0
1000     7945 8052e79: mov eax, 0xc5  (5 bytes)  eax <- 0xc5
1000     7946 8052e7e: call DWORD PTR ds:0x80d4090  (6 bytes)  [0x80d4090]=0x8054ca0
1000     7947 8054ca0: int 0x80  (2 bytes)
1000     7948 8054ca2: ret  (1 bytes)
1000     7949 8052e84: cmp eax, 0xfffff000  (5 bytes)
1000     7950 8052e89: ja 8052eac  (2 bytes)
1000     7951 8052e8b: test eax, eax  (2 bytes)
1000     7952 8052e8d: jne 8052ea1  (2 bytes)
1000     7953 8052e8f: mov ecx, DWORD PTR [edx+0xc]  (3 bytes)  [0xfffdf10c]=0x5  ecx <- 0x5
1000     7954 8052e92: cmp ecx, DWORD PTR [edx+0x58]  (3 bytes)  [0xfffdf158]=0x5
1000     7955 8052e95: je 8052ea1  (2 bytes)
1000     7956 8052ea1: mov ebx, DWORD PTR [ebp-0xc]  (3 bytes)  [0xfffdf0c0]=0x80d3cc0  ebx <- 0x80d3cc0
1000     7957 8052ea4: mov esi, DWORD PTR [ebp-0x8]  (3 bytes)  [0xfffdf0c4]=0x80b4e28  esi <- 0x80b4e28
1000     7958 8052ea7: mov edi, DWORD PTR [ebp-0x4]  (3 bytes)  [0xfffdf0c8]=0x80b4e28  edi <- 0x80b4e28
1000     7959 8052eaa: leave  (1 bytes)  ebp <- 0xfffdf0e0
1000     7960 8052eab: ret  (1 bytes)
1000     7961 806aff3: leave  (1 bytes)  ebp <- 0xfffdf168
1000     7962 806aff4: ret  (1 bytes)
1000     7963 80930d5: test eax, eax  (2 bytes)
1000     7964 80930d7: js 8093100  (2 bytes)
1000     7965 80930d9: mov eax, DWORD PTR [ebp-0x58]  (3 bytes)  [0xfffdf110]=0x2190  eax <- 0x2190
1000     7966 80930dc: and eax, 0xf000  (5 bytes)  eax <- 0x2000
1000     7967 80930e1: cmp eax, 0x2000  (5 bytes)
1000     7968 80930e6: je 8093170  (6 bytes)
1000     7969 8093170: mov ecx, DWORD PTR [ebp-0x44]  (3 bytes)  [0xfffdf124]=0x0  ecx <- 0x0
1000     7970 8093173: mov edx, DWORD PTR [ebp-0x48]  (3 bytes)  [0xfffdf120]=0x8802  edx <- 0x8802
1000     7971 8093176: mov eax, ecx  (2 bytes)  eax <- 0x0
1000     7972 8093178: shrd edx, ecx, 0x8  (4 bytes)  edx <- 0x88
1000     7973 809317c: and eax, 0xfffff000  (5 bytes)  eax <- 0x0
1000     7974 8093181: and edx, 0xfff  (6 bytes)  edx <- 0x88
1000     7975 8093187: or eax, edx  (2 bytes)  eax <- 0x88
1000     7976 8093189: sub eax, 0x88  (5 bytes)  eax <- 0x0
1000     7977 809318e: cmp eax, 0x7  (3 bytes)
1000     7978 8093191: ja 80931b0  (2 bytes)
1000     7979 8093193: or DWORD PTR [ebx], 0x200  (6 bytes)  [0x80d3cc0]=0xfbad2084  [0x80d3cc0] <- 0xfbad2284
1000     7980 8093199: mov esi, DWORD PTR [ebp-0x34]  (3 bytes)  [0xfffdf134]=0x400  esi <- 0x400
1000     7981 809319c: test esi, esi  (2 bytes)
1000     7982 809319e: jg 80930f3  (6 bytes)
1000     7983 80930f3: lea eax, [esi+0xfff]  (6 bytes)  eax <- 0x13ff
1000     7984 80930f9: and eax, 0xfffff000  (5 bytes)  eax <- 0x1000
1000     7985 80930fe: jmp 809310a  (2 bytes)
1000     7986 809310a: mov DWORD PTR [esp+0x14], 0x0  (8 bytes)  [0xfffdf0fc] <- 0x0
1000     7987 8093112: mov DWORD PTR [esp+0x10], 0xffffffff  (8 bytes)  [0xfffdf0f8] <- 0xffffffff
1000     7988 809311a: mov DWORD PTR [esp+0xc], 0x22  (8 bytes)  [0xfffdf0f4] <- 0x22
1000     7989 8093122: mov DWORD PTR [esp+0x8], 0x3  (8 bytes)  [0xfffdf0f0] <- 0x3
1000     7990 809312a: mov DWORD PTR [esp+0x4], eax  (4 bytes)  [0xfffdf0ec] <- 0x1000
1000     7991 809312e: mov DWORD PTR [esp], 0x0  (7 bytes)  [0xfffdf0e8] <- 0x0
1000     7992 8093135: call 80542d0  (5 bytes)
1000     7993 80542d0: mov edx, ebx  (2 bytes)  edx <- 0x80d3cc0
1000     7994 80542d2: mov eax, 0x5a  (5 bytes)  eax <- 0x5a
1000     7995 80542d7: lea ebx, [esp+0x4]  (4 bytes)  ebx <- 0xfffdf0e8
1000     7996 80542db: int 0x80  (2 bytes)